var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
/*
 * SystemJS v0.19.40
 */
!function () {
    function e() {
        !function (e) { function t(e, r) { if ("string" != typeof e)
            throw new TypeError("URL must be a string"); var n = String(e).replace(/^\s+|\s+$/g, "").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/); if (!n)
            throw new RangeError("Invalid URL format"); var a = n[1] || "", o = n[2] || "", i = n[3] || "", s = n[4] || "", l = n[5] || "", u = n[6] || "", d = n[7] || "", c = n[8] || "", f = n[9] || ""; if (void 0 !== r) {
            var m = r instanceof t ? r : new t(r), p = !a && !s && !o;
            !p || d || c || (c = m.search), p && "/" !== d[0] && (d = d ? (!m.host && !m.username || m.pathname ? "" : "/") + m.pathname.slice(0, m.pathname.lastIndexOf("/") + 1) + d : m.pathname);
            var h = [];
            d.replace(/^(\.\.?(\/|$))+/, "").replace(/\/(\.(\/|$))+/g, "/").replace(/\/\.\.$/, "/../").replace(/\/?[^\/]*/g, function (e) { "/.." === e ? h.pop() : h.push(e); }), d = h.join("").replace(/^\//, "/" === d[0] ? "/" : ""), p && (u = m.port, l = m.hostname, s = m.host, i = m.password, o = m.username), a || (a = m.protocol);
        } d = d.replace(/\\/g, "/"), this.origin = s ? a + ("" !== a || "" !== s ? "//" : "") + s : "", this.href = a + (a && s || "file:" == a ? "//" : "") + ("" !== o ? o + ("" !== i ? ":" + i : "") + "@" : "") + s + d + c + f, this.protocol = a, this.username = o, this.password = i, this.host = s, this.hostname = l, this.port = u, this.pathname = d, this.search = c, this.hash = f; } e.URLPolyfill = t; }("undefined" != typeof self ? self : global), function (e) {
            function t(e, t) { if (!e.originalErr)
                for (var r = ((e.message || e) + (e.stack ? "\n" + e.stack : "")).toString().split("\n"), n = [], a = 0; a < r.length; a++)
                    "undefined" != typeof $__curScript && r[a].indexOf($__curScript.src) != -1 || n.push(r[a]); var o = "(SystemJS) " + (n ? n.join("\n\t") : e.message.substr(11)) + "\n\t" + t; F || (o = o.replace(D ? /file:\/\/\//g : /file:\/\//g, "")); var i = $ ? new Error(o, e.fileName, e.lineNumber) : new Error(o); return i.stack = o, i.originalErr = e.originalErr || e, i; }
            function r() { }
            function n(t) { this._loader = { loaderObj: this, loads: [], modules: {}, importPromises: {}, moduleRecords: {} }, q(this, "global", { get: function () { return e; } }); }
            function a() { n.call(this), this.paths = {}, this._loader.paths = {}, V.call(this); }
            function o() { }
            function i(e, t) { a.prototype[e] = t(a.prototype[e] || function () { }); }
            function s(e) { V = e(V || function () { }); }
            function l(e) { return e.match(Y); }
            function u(e) { return "." == e[0] && (!e[1] || "/" == e[1] || "." == e[1]) || "/" == e[0]; }
            function d(e) { return !u(e) && !l(e); }
            function c(e, t) { if ("." == e[0]) {
                if ("/" == e[1] && "." != e[2])
                    return (t && t.substr(0, t.lastIndexOf("/") + 1) || J) + e.substr(2);
            }
            else if ("/" != e[0] && e.indexOf(":") == -1)
                return (t && t.substr(0, t.lastIndexOf("/") + 1) || J) + e; return new H(e, t && t.replace(/#/g, "%05") || K).href.replace(/%05/g, "#"); }
            function f(e, t) { var r, n = "", a = 0, o = e.paths, i = e._loader.paths; for (var s in o)
                if (!o.hasOwnProperty || o.hasOwnProperty(s)) {
                    var l = o[s];
                    if (l !== i[s] && (l = o[s] = i[s] = c(o[s], u(o[s]) ? J : e.baseURL)), s.indexOf("*") === -1) {
                        if (t == s)
                            return o[s];
                        if (t.substr(0, s.length - 1) == s.substr(0, s.length - 1) && (t.length < s.length || t[s.length - 1] == s[s.length - 1]) && ("/" == o[s][o[s].length - 1] || "" == o[s]))
                            return o[s].substr(0, o[s].length - 1) + (t.length > s.length ? (o[s] && "/" || "") + t.substr(s.length) : "");
                    }
                    else {
                        var d = s.split("*");
                        if (d.length > 2)
                            throw new TypeError("Only one wildcard in a path is permitted");
                        var f = d[0].length;
                        f >= a && t.substr(0, d[0].length) == d[0] && t.substr(t.length - d[1].length) == d[1] && (a = f, n = s, r = t.substr(d[0].length, t.length - d[1].length - d[0].length));
                    }
                } var m = o[n]; return "string" == typeof r && (m = m.replace("*", r)), m; }
            function m(e) { for (var t = [], r = [], n = 0, a = e.length; n < a; n++) {
                var o = U.call(t, e[n]);
                o === -1 ? (t.push(e[n]), r.push([n])) : r[o].push(n);
            } return { names: t, indices: r }; }
            function p(t) { var r = {}; if (("object" == typeof t || "function" == typeof t) && t !== e)
                if (Q)
                    for (var n in t)
                        "default" !== n && h(r, t, n);
                else
                    g(r, t); return r.default = t, q(r, "__useDefault", { value: !0 }), r; }
            function h(e, t, r) { try {
                var n;
                (n = Object.getOwnPropertyDescriptor(t, r)) && q(e, r, n);
            }
            catch (n) {
                return e[r] = t[r], !1;
            } }
            function g(e, t, r) { var n = t && t.hasOwnProperty; for (var a in t)
                n && !t.hasOwnProperty(a) || r && a in e || (e[a] = t[a]); return e; }
            function v(e, t, r) { var n = t && t.hasOwnProperty; for (var a in t)
                if (!n || t.hasOwnProperty(a)) {
                    var o = t[a];
                    a in e ? o instanceof Array && e[a] instanceof Array ? e[a] = [].concat(r ? o : e[a]).concat(r ? e[a] : o) : "object" == typeof o && null !== o && "object" == typeof e[a] ? e[a] = g(g({}, e[a]), o, r) : r || (e[a] = o) : e[a] = o;
                } }
            function b(e, t, r, n, a) { for (var o in t)
                if (U.call(["main", "format", "defaultExtension", "basePath"], o) != -1)
                    e[o] = t[o];
                else if ("map" == o)
                    g(e.map = e.map || {}, t.map);
                else if ("meta" == o)
                    g(e.meta = e.meta || {}, t.meta);
                else if ("depCache" == o)
                    for (var i in t.depCache) {
                        var s;
                        s = "./" == i.substr(0, 2) ? r + "/" + i.substr(2) : P.call(n, i), n.depCache[s] = (n.depCache[s] || []).concat(t.depCache[i]);
                    }
                else
                    !a || U.call(["browserConfig", "nodeConfig", "devConfig", "productionConfig"], o) != -1 || t.hasOwnProperty && !t.hasOwnProperty(o) || w.call(n, '"' + o + '" is not a valid package configuration option in package ' + r); }
            function y(e, t, r, n) { var a; if (e.packages[t]) {
                var o = e.packages[t];
                a = e.packages[t] = {}, b(a, n ? r : o, t, e, n), b(a, n ? o : r, t, e, !n);
            }
            else
                a = e.packages[t] = r; return "object" == typeof a.main && (a.map = a.map || {}, a.map["./@main"] = a.main, a.main.default = a.main.default || "./", a.main = "@main"), a; }
            function w(e) { this.warnings && "undefined" != typeof console && console.warn; }
            function x(e, t) { for (var r = e.split("."); r.length;)
                t = t[r.shift()]; return t; }
            function S(e, t) { var r, n = 0; for (var a in e)
                if (t.substr(0, a.length) == a && (t.length == a.length || "/" == t[a.length])) {
                    var o = a.split("/").length;
                    if (o <= n)
                        continue;
                    r = a, n = o;
                } return r; }
            function _(e) { this._loader.baseURL !== this.baseURL && ("/" != this.baseURL[this.baseURL.length - 1] && (this.baseURL += "/"), this._loader.baseURL = this.baseURL = new H(this.baseURL, K).href); }
            function E(e, t) { this.set("@system-env", te = this.newModule({ browser: F, node: !!this._nodeRequire, production: !t && e, dev: t || !e, build: t, default: !0 })); }
            function j(e, t) { if (!d(e))
                throw new Error("Node module " + e + " can't be loaded as it is not a package require."); if (!re) {
                var r = this._nodeRequire("module"), n = t.substr(D ? 8 : 7);
                re = new r(n), re.paths = r._nodeModulePaths(n);
            } return re.require(e); }
            function P(e, t) { if (u(e))
                return c(e, t); if (l(e))
                return e; var r = S(this.map, e); if (r) {
                if (e = this.map[r] + e.substr(r.length), u(e))
                    return c(e);
                if (l(e))
                    return e;
            } if (this.has(e))
                return e; if ("@node/" == e.substr(0, 6)) {
                if (!this._nodeRequire)
                    throw new TypeError("Error loading " + e + ". Can only load node core modules in Node.");
                return this.builder ? this.set(e, this.newModule({})) : this.set(e, this.newModule(p(j.call(this, e.substr(6), this.baseURL)))), e;
            } return _.call(this), f(this, e) || this.baseURL + e; }
            function O(e, t, r) { te.browser && t.browserConfig && r(t.browserConfig), te.node && t.nodeConfig && r(t.nodeConfig), te.dev && t.devConfig && r(t.devConfig), te.build && t.buildConfig && r(t.buildConfig), te.production && t.productionConfig && r(t.productionConfig); }
            function k(e) { var t = e.match(oe); return t && "System.register" == e.substr(t[0].length, 15); }
            function M() { return { name: null, deps: null, originalIndices: null, declare: null, execute: null, executingRequire: !1, declarative: !1, normalizedDeps: null, groupIndex: null, evaluated: !1, module: null, esModule: null, esmExports: !1 }; }
            function R(t) { if ("string" == typeof t)
                return x(t, e); if (!(t instanceof Array))
                throw new Error("Global exports must be a string or array."); for (var r = {}, n = !0, a = 0; a < t.length; a++) {
                var o = x(t[a], e);
                n && (r.default = o, n = !1), r[t[a].split(".").pop()] = o;
            } return r; }
            function z(e) { var t, r, n, n = "~" == e[0], a = e.lastIndexOf("|"); return a != -1 ? (t = e.substr(a + 1), r = e.substr(n, a - n), n && w.call(this, 'Condition negation form "' + e + '" is deprecated for "' + r + "|~" + t + '"'), "~" == t[0] && (n = !0, t = t.substr(1))) : (t = "default", r = e.substr(n), se.indexOf(r) != -1 && (t = r, r = null)), { module: r || "@system-env", prop: t, negate: n }; }
            function I(e) { return e.module + "|" + (e.negate ? "~" : "") + e.prop; }
            function T(e, t, r) { var n = this; return this.normalize(e.module, t).then(function (t) { return n.load(t).then(function (a) { var o = x(e.prop, n.get(t)); if (r && "boolean" != typeof o)
                throw new TypeError("Condition " + I(e) + " did not resolve to a boolean."); return e.negate ? !o : o; }); }); }
            function L(e, t) { var r = e.match(le); if (!r)
                return Promise.resolve(e); var n = z.call(this, r[0].substr(2, r[0].length - 3)); return this.builder ? this.normalize(n.module, t).then(function (t) { return n.module = t, e.replace(le, "#{" + I(n) + "}"); }) : T.call(this, n, t, !1).then(function (r) { if ("string" != typeof r)
                throw new TypeError("The condition value for " + e + " doesn't resolve to a string."); if (r.indexOf("/") != -1)
                throw new TypeError("Unabled to interpolate conditional " + e + (t ? " in " + t : "") + "\n\tThe condition value " + r + ' cannot contain a "/" separator.'); return e.replace(le, r); }); }
            function C(e, t) { var r = e.lastIndexOf("#?"); if (r == -1)
                return Promise.resolve(e); var n = z.call(this, e.substr(r + 2)); return this.builder ? this.normalize(n.module, t).then(function (t) { return n.module = t, e.substr(0, r) + "#?" + I(n); }) : T.call(this, n, t, !0).then(function (t) { return t ? e.substr(0, r) : "@empty"; }); }
            var A = "undefined" == typeof window && "undefined" != typeof self && "undefined" != typeof importScripts, F = "undefined" != typeof window && "undefined" != typeof document, D = "undefined" != typeof process && "undefined" != typeof process.platform && !!process.platform.match(/^win/);
            e.console || (e.console = { assert: function () { } });
            var q, U = Array.prototype.indexOf || function (e) { for (var t = 0, r = this.length; t < r; t++)
                if (this[t] === e)
                    return t; return -1; };
            !function () { try {
                Object.defineProperty({}, "a", {}) && (q = Object.defineProperty);
            }
            catch (e) {
                q = function (e, t, r) { try {
                    e[t] = r.value || r.get.call(e);
                }
                catch (e) { } };
            } }();
            var J, $ = "_" == new Error(0, "_").fileName;
            if ("undefined" != typeof document && document.getElementsByTagName) {
                if (J = document.baseURI, !J) {
                    var N = document.getElementsByTagName("base");
                    J = N[0] && N[0].href || window.location.href;
                }
            }
            else
                "undefined" != typeof location && (J = e.location.href);
            if (J)
                J = J.split("#")[0].split("?")[0], J = J.substr(0, J.lastIndexOf("/") + 1);
            else {
                if ("undefined" == typeof process || !process.cwd)
                    throw new TypeError("No environment baseURI");
                J = "file://" + (D ? "/" : "") + process.cwd() + "/", D && (J = J.replace(/\\/g, "/"));
            }
            try {
                var B = "test:" == new e.URL("test:///").protocol;
            }
            catch (e) { }
            var H = B ? e.URL : e.URLPolyfill;
            q(r.prototype, "toString", { value: function () { return "Module"; } }), function () { function e(e) { return { status: "loading", name: e || "<Anonymous" + ++y + ">", linkSets: [], dependencies: [], metadata: {} }; } function a(e, t, r) { return new Promise(u({ step: r.address ? "fetch" : "locate", loader: e, moduleName: t, moduleMetadata: r && r.metadata || {}, moduleSource: r.source, moduleAddress: r.address })); } function o(t, r, n, a) { return new Promise(function (e, o) { e(t.loaderObj.normalize(r, n, a)); }).then(function (r) { var n; if (t.modules[r])
                return n = e(r), n.status = "linked", n.module = t.modules[r], n; for (var a = 0, o = t.loads.length; a < o; a++)
                if (n = t.loads[a], n.name == r)
                    return n; return n = e(r), t.loads.push(n), i(t, n), n; }); } function i(e, t) { s(e, t, Promise.resolve().then(function () { return e.loaderObj.locate({ name: t.name, metadata: t.metadata }); })); } function s(e, t, r) { l(e, t, r.then(function (r) { if ("loading" == t.status)
                return t.address = r, e.loaderObj.fetch({ name: t.name, metadata: t.metadata, address: r }); })); } function l(e, t, r) { r.then(function (r) { if ("loading" == t.status)
                return t.address = t.address || t.name, Promise.resolve(e.loaderObj.translate({ name: t.name, metadata: t.metadata, address: t.address, source: r })).then(function (r) { return t.source = r, e.loaderObj.instantiate({ name: t.name, metadata: t.metadata, address: t.address, source: r }); }).then(function (e) { if (void 0 === e)
                    throw new TypeError("Declarative modules unsupported in the polyfill."); if ("object" != typeof e)
                    throw new TypeError("Invalid instantiate return value"); t.depsList = e.deps || [], t.execute = e.execute; }).then(function () { t.dependencies = []; for (var r = t.depsList, n = [], a = 0, i = r.length; a < i; a++)
                    (function (r, a) { n.push(o(e, r, t.name, t.address).then(function (e) { if (t.dependencies[a] = { key: r, value: e.name }, "linked" != e.status)
                        for (var n = t.linkSets.concat([]), o = 0, i = n.length; o < i; o++)
                            c(n[o], e); })); })(r[a], a); return Promise.all(n); }).then(function () { t.status = "loaded"; for (var e = t.linkSets.concat([]), r = 0, n = e.length; r < n; r++)
                    m(e[r], t); }); }).catch(function (e) { t.status = "failed", t.exception = e; for (var r = t.linkSets.concat([]), n = 0, a = r.length; n < a; n++)
                p(r[n], t, e); }); } function u(t) { return function (r, n) { var a = t.loader, o = t.moduleName, u = t.step; if (a.modules[o])
                throw new TypeError('"' + o + '" already exists in the module table'); for (var c, f = 0, m = a.loads.length; f < m; f++)
                if (a.loads[f].name == o && (c = a.loads[f], "translate" != u || c.source || (c.address = t.moduleAddress, l(a, c, Promise.resolve(t.moduleSource))), c.linkSets.length && c.linkSets[0].loads[0].name == c.name))
                    return c.linkSets[0].done.then(function () { r(c); }); var p = c || e(o); p.metadata = t.moduleMetadata; var h = d(a, p); a.loads.push(p), r(h.done), "locate" == u ? i(a, p) : "fetch" == u ? s(a, p, Promise.resolve(t.moduleAddress)) : (p.address = t.moduleAddress, l(a, p, Promise.resolve(t.moduleSource))); }; } function d(e, t) { var r = { loader: e, loads: [], startingLoad: t, loadingCount: 0 }; return r.done = new Promise(function (e, t) { r.resolve = e, r.reject = t; }), c(r, t), r; } function c(e, t) { if ("failed" != t.status) {
                for (var r = 0, n = e.loads.length; r < n; r++)
                    if (e.loads[r] == t)
                        return;
                e.loads.push(t), t.linkSets.push(e), "loaded" != t.status && e.loadingCount++;
                for (var a = e.loader, r = 0, n = t.dependencies.length; r < n; r++)
                    if (t.dependencies[r]) {
                        var o = t.dependencies[r].value;
                        if (!a.modules[o])
                            for (var i = 0, s = a.loads.length; i < s; i++)
                                if (a.loads[i].name == o) {
                                    c(e, a.loads[i]);
                                    break;
                                }
                    }
            } } function f(e) { var t = !1; try {
                b(e, function (r, n) { p(e, r, n), t = !0; });
            }
            catch (r) {
                p(e, null, r), t = !0;
            } return t; } function m(e, t) { if (e.loadingCount--, !(e.loadingCount > 0)) {
                var r = e.startingLoad;
                if (e.loader.loaderObj.execute === !1) {
                    for (var n = [].concat(e.loads), a = 0, o = n.length; a < o; a++) {
                        var t = n[a];
                        t.module = { name: t.name, module: w({}), evaluated: !0 }, t.status = "linked", h(e.loader, t);
                    }
                    return e.resolve(r);
                }
                var i = f(e);
                i || e.resolve(r);
            } } function p(e, r, n) { var a = e.loader; e: if (r)
                if (e.loads[0].name == r.name)
                    n = t(n, "Error loading " + r.name);
                else {
                    for (var o = 0; o < e.loads.length; o++)
                        for (var i = e.loads[o], s = 0; s < i.dependencies.length; s++) {
                            var l = i.dependencies[s];
                            if (l.value == r.name) {
                                n = t(n, "Error loading " + r.name + ' as "' + l.key + '" from ' + i.name);
                                break e;
                            }
                        }
                    n = t(n, "Error loading " + r.name + " from " + e.loads[0].name);
                }
            else
                n = t(n, "Error linking " + e.loads[0].name); for (var u = e.loads.concat([]), o = 0, d = u.length; o < d; o++) {
                var r = u[o];
                a.loaderObj.failed = a.loaderObj.failed || [], U.call(a.loaderObj.failed, r) == -1 && a.loaderObj.failed.push(r);
                var c = U.call(r.linkSets, e);
                if (r.linkSets.splice(c, 1), 0 == r.linkSets.length) {
                    var f = U.call(e.loader.loads, r);
                    f != -1 && e.loader.loads.splice(f, 1);
                }
            } e.reject(n); } function h(e, t) { if (e.loaderObj.trace) {
                e.loaderObj.loads || (e.loaderObj.loads = {});
                var r = {};
                t.dependencies.forEach(function (e) { r[e.key] = e.value; }), e.loaderObj.loads[t.name] = { name: t.name, deps: t.dependencies.map(function (e) { return e.key; }), depMap: r, address: t.address, metadata: t.metadata, source: t.source };
            } t.name && (e.modules[t.name] = t.module); var n = U.call(e.loads, t); n != -1 && e.loads.splice(n, 1); for (var a = 0, o = t.linkSets.length; a < o; a++)
                n = U.call(t.linkSets[a].loads, t), n != -1 && t.linkSets[a].loads.splice(n, 1); t.linkSets.splice(0, t.linkSets.length); } function g(e, t, n) { try {
                var a = t.execute();
            }
            catch (e) {
                return void n(t, e);
            } return a && a instanceof r ? a : void n(t, new TypeError("Execution must define a Module instance")); } function v(e, t, r) { var n = e._loader.importPromises; return n[t] = r.then(function (e) { return n[t] = void 0, e; }, function (e) { throw n[t] = void 0, e; }); } function b(e, t) { var r = e.loader; if (e.loads.length)
                for (var n = e.loads.concat([]), a = 0; a < n.length; a++) {
                    var o = n[a], i = g(e, o, t);
                    if (!i)
                        return;
                    o.module = { name: o.name, module: i }, o.status = "linked", h(r, o);
                } } var y = 0; n.prototype = { constructor: n, define: function (e, t, r) { if (this._loader.importPromises[e])
                    throw new TypeError("Module is already loading."); return v(this, e, new Promise(u({ step: "translate", loader: this._loader, moduleName: e, moduleMetadata: r && r.metadata || {}, moduleSource: t, moduleAddress: r && r.address }))); }, delete: function (e) { var t = this._loader; return delete t.importPromises[e], delete t.moduleRecords[e], !!t.modules[e] && delete t.modules[e]; }, get: function (e) { if (this._loader.modules[e])
                    return this._loader.modules[e].module; }, has: function (e) { return !!this._loader.modules[e]; }, import: function (e, t, r) { "object" == typeof t && (t = t.name); var n = this; return Promise.resolve(n.normalize(e, t)).then(function (e) { var t = n._loader; return t.modules[e] ? t.modules[e].module : t.importPromises[e] || v(n, e, a(t, e, {}).then(function (r) { return delete t.importPromises[e], r.module.module; })); }); }, load: function (e) { var t = this._loader; return t.modules[e] ? Promise.resolve() : t.importPromises[e] || v(this, e, new Promise(u({ step: "locate", loader: t, moduleName: e, moduleMetadata: {}, moduleSource: void 0, moduleAddress: void 0 })).then(function () { delete t.importPromises[e]; })); }, module: function (t, r) { var n = e(); n.address = r && r.address; var a = d(this._loader, n), o = Promise.resolve(t), i = this._loader, s = a.done.then(function () { return n.module.module; }); return l(i, n, o), s; }, newModule: function (e) { if ("object" != typeof e)
                    throw new TypeError("Expected object"); var t = new r, n = []; if (Object.getOwnPropertyNames && null != e)
                    n = Object.getOwnPropertyNames(e);
                else
                    for (var a in e)
                        n.push(a); for (var o = 0; o < n.length; o++)
                    (function (r) { q(t, r, { configurable: !1, enumerable: !0, get: function () { return e[r]; }, set: function () { throw new Error("Module exports cannot be changed externally."); } }); })(n[o]); return Object.freeze && Object.freeze(t), t; }, set: function (e, t) { if (!(t instanceof r))
                    throw new TypeError("Loader.set(" + e + ", module) must be a module"); this._loader.modules[e] = { module: t }; }, normalize: function (e, t, r) { }, locate: function (e) { return e.name; }, fetch: function (e) { }, translate: function (e) { return e.source; }, instantiate: function (e) { } }; var w = n.prototype.newModule; }();
            var X, G;
            if ("undefined" != typeof XMLHttpRequest)
                G = function (e, t, r, n) { function a() { r(i.responseText); } function o() { n(new Error("XHR error" + (i.status ? " (" + i.status + (i.statusText ? " " + i.statusText : "") + ")" : "") + " loading " + e)); } var i = new XMLHttpRequest, s = !0, l = !1; if (!("withCredentials" in i)) {
                    var u = /^(\w+:)?\/\/([^\/]+)/.exec(e);
                    u && (s = u[2] === window.location.host, u[1] && (s &= u[1] === window.location.protocol));
                } s || "undefined" == typeof XDomainRequest || (i = new XDomainRequest, i.onload = a, i.onerror = o, i.ontimeout = o, i.onprogress = function () { }, i.timeout = 0, l = !0), i.onreadystatechange = function () { 4 === i.readyState && (0 == i.status ? i.responseText ? a() : (i.addEventListener("error", o), i.addEventListener("load", a)) : 200 === i.status ? a() : o()); }, i.open("GET", e, !0), i.setRequestHeader && (i.setRequestHeader("Accept", "application/x-es-module, */*"), t && ("string" == typeof t && i.setRequestHeader("Authorization", t), i.withCredentials = !0)), l ? setTimeout(function () { i.send(); }, 0) : i.send(null); };
            else if ("undefined" != typeof require && "undefined" != typeof process) {
                var Z;
                G = function (e, t, r, n) { if ("file:///" != e.substr(0, 8))
                    throw new Error('Unable to fetch "' + e + '". Only file URLs of the form file:/// allowed running in Node.'); return Z = Z || require("fs"), e = D ? e.replace(/\//g, "\\").substr(8) : e.substr(7), Z.readFile(e, function (e, t) { if (e)
                    return n(e); var a = t + ""; "\ufeff" === a[0] && (a = a.substr(1)), r(a); }); };
            }
            else {
                if ("undefined" == typeof self || "undefined" == typeof self.fetch)
                    throw new TypeError("No environment fetch API available.");
                G = function (e, t, r, n) { var a = { headers: { Accept: "application/x-es-module, */*" } }; t && ("string" == typeof t && (a.headers.Authorization = t), a.credentials = "include"), fetch(e, a).then(function (e) { if (e.ok)
                    return e.text(); throw new Error("Fetch error: " + e.status + " " + e.statusText); }).then(r, n); };
            }
            var W = function () { function t(t) { var n = this; return Promise.resolve(e["typescript" == n.transpiler ? "ts" : n.transpiler] || (n.pluginLoader || n).import(n.transpiler)).then(function (e) { e.__useDefault && (e = e.default); var a; return a = e.Compiler ? r : e.createLanguageService ? i : o, "(function(__moduleName){" + a.call(n, t, e) + '\n})("' + t.name + '");\n//# sourceURL=' + t.address + "!transpiled"; }); } function r(e, t) { var r = this.traceurOptions || {}; r.modules = "instantiate", r.script = !1, void 0 === r.sourceMaps && (r.sourceMaps = "inline"), r.filename = e.address, r.inputSourceMap = e.metadata.sourceMap, r.moduleName = !1; var n = new t.Compiler(r); return a(e.source, n, r.filename); } function a(e, t, r) { try {
                return t.compile(e, r);
            }
            catch (e) {
                if (e.length)
                    throw e[0];
                throw e;
            } } function o(e, t) { var r = this.babelOptions || {}; return r.modules = "system", void 0 === r.sourceMap && (r.sourceMap = "inline"), r.inputSourceMap = e.metadata.sourceMap, r.filename = e.address, r.code = !0, r.ast = !1, t.transform(e.source, r).code; } function i(e, t) { var r = this.typescriptOptions || {}; return r.target = r.target || t.ScriptTarget.ES5, void 0 === r.sourceMap && (r.sourceMap = !0), r.sourceMap && r.inlineSourceMap !== !1 && (r.inlineSourceMap = !0), r.module = t.ModuleKind.System, t.transpile(e.source, r, e.address); } return n.prototype.transpiler = "traceur", t; }();
            o.prototype = n.prototype, a.prototype = new o, a.prototype.constructor = a;
            var V, Y = /^[^\/]+:\/\//, K = new H(J), Q = !0;
            try {
                Object.getOwnPropertyDescriptor({ a: 0 }, "a");
            }
            catch (e) {
                Q = !1;
            }
            var ee;
            !function () { function r(e) { return l ? d + new Buffer(e).toString("base64") : "undefined" != typeof btoa ? d + btoa(unescape(encodeURIComponent(e))) : ""; } function n(e, t) { var n = e.source.lastIndexOf("\n"); "global" == e.metadata.format && (t = !1); var a = e.metadata.sourceMap; if (a) {
                if ("object" != typeof a)
                    throw new TypeError("load.metadata.sourceMap must be set to an object.");
                a = JSON.stringify(a);
            } return (t ? "(function(System, SystemJS) {" : "") + e.source + (t ? "\n})(System, System);" : "") + ("\n//# sourceURL=" != e.source.substr(n, 15) ? "\n//# sourceURL=" + e.address + (a ? "!transpiled" : "") : "") + (a && r(a) || ""); } function a(t, r) { u = r, 0 == p++ && (c = e.System), e.System = e.SystemJS = t; } function o() { 0 == --p && (e.System = e.SystemJS = c), u = void 0; } function s(e) { g || (g = document.head || document.body || document.documentElement); var r = document.createElement("script"); r.text = n(e, !1); var i, s = window.onerror; if (window.onerror = function (r) { i = t(r, "Evaluating " + e.address), s && s.apply(this, arguments); }, a(this, e), e.metadata.integrity && r.setAttribute("integrity", e.metadata.integrity), e.metadata.nonce && r.setAttribute("nonce", e.metadata.nonce), g.appendChild(r), g.removeChild(r), o(), window.onerror = s, i)
                throw i; } var l = "undefined" != typeof Buffer; try {
                l && "YQ==" != new Buffer("a").toString("base64") && (l = !1);
            }
            catch (e) {
                l = !1;
            } var u, d = "\n//# sourceMappingURL=data:application/json;base64,"; i("pushRegister_", function () { return function (e) { return !!u && (this.reduceRegister_(u, e), !0); }; }); var c, f, m, p = 0; ee = function (e) { if (e.source) {
                if ((e.metadata.integrity || e.metadata.nonce) && h)
                    return s.call(this, e);
                try {
                    a(this, e), u = e, !m && this._nodeRequire && (m = this._nodeRequire("vm"), f = m.runInThisContext("typeof System !== 'undefined' && System") === this), f ? m.runInThisContext(n(e, !0), { filename: e.address + (e.metadata.sourceMap ? "!transpiled" : "") }) : (0, eval)(n(e, !0)), o();
                }
                catch (r) {
                    throw o(), t(r, "Evaluating " + e.address);
                }
            } }; var h = !1; F && "undefined" != typeof document && document.getElementsByTagName && (window.chrome && window.chrome.extension || navigator.userAgent.match(/^Node\.js/) || (h = !0)); var g; }();
            var te;
            s(function (e) { return function () { e.call(this), this.baseURL = J, this.map = {}, "undefined" != typeof $__curScript && (this.scriptSrc = $__curScript.src), this.warnings = !1, this.defaultJSExtensions = !1, this.pluginFirst = !1, this.loaderErrorStack = !1, this.set("@empty", this.newModule({})), E.call(this, !1, !1); }; }), "undefined" == typeof require || "undefined" == typeof process || process.browser || (a.prototype._nodeRequire = require);
            var re;
            i("normalize", function (e) { return function (e, t, r) { var n = P.call(this, e, t); return !this.defaultJSExtensions || r || ".js" == n.substr(n.length - 3, 3) || d(n) || (n += ".js"), n; }; });
            var ne = "undefined" != typeof XMLHttpRequest;
            i("locate", function (e) { return function (t) { return Promise.resolve(e.call(this, t)).then(function (e) { return ne ? e.replace(/#/g, "%23") : e; }); }; }), i("fetch", function () { return function (e) { return new Promise(function (t, r) { G(e.address, e.metadata.authorization, t, r); }); }; }), i("import", function (e) { return function (t, r, n) { return r && r.name && w.call(this, "SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing " + t + " from " + r.name), e.call(this, t, r, n).then(function (e) { return e.__useDefault ? e.default : e; }); }; }), i("translate", function (e) { return function (t) { return "detect" == t.metadata.format && (t.metadata.format = void 0), e.apply(this, arguments); }; }), i("instantiate", function (e) { return function (e) { if ("json" == e.metadata.format && !this.builder) {
                var t = e.metadata.entry = M();
                t.deps = [], t.execute = function () { try {
                    return JSON.parse(e.source);
                }
                catch (t) {
                    throw new Error("Invalid JSON file " + e.name);
                } };
            } }; }), a.prototype.getConfig = function (e) { var t = {}, r = this; for (var n in r)
                r.hasOwnProperty && !r.hasOwnProperty(n) || n in a.prototype && "transpiler" != n || U.call(["_loader", "amdDefine", "amdRequire", "defined", "failed", "version", "loads"], n) == -1 && (t[n] = r[n]); return t.production = te.production, t; };
            var ae;
            a.prototype.config = function (e, t) { function r(e) { for (var t in e)
                if (e.hasOwnProperty(t))
                    return !0; } var n = this; if ("loaderErrorStack" in e && (ae = $__curScript, e.loaderErrorStack ? $__curScript = void 0 : $__curScript = ae), "warnings" in e && (n.warnings = e.warnings), e.transpilerRuntime === !1 && (n._loader.loadedTranspilerRuntime = !0), ("production" in e || "build" in e) && E.call(n, !!e.production, !!(e.build || te && te.build)), !t) {
                var a;
                if (O(n, e, function (e) { a = a || e.baseURL; }), a = a || e.baseURL) {
                    if (r(n.packages) || r(n.meta) || r(n.depCache) || r(n.bundles) || r(n.packageConfigPaths))
                        throw new TypeError("Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.");
                    this.baseURL = a, _.call(this);
                }
                if (e.paths && g(n.paths, e.paths), O(n, e, function (e) { e.paths && g(n.paths, e.paths); }), this.warnings)
                    for (var o in n.paths)
                        o.indexOf("*") != -1 && w.call(n, 'Paths configuration "' + o + '" -> "' + n.paths[o] + '" uses wildcards which are being deprecated for simpler trailing "/" folder paths.');
            } if (e.defaultJSExtensions && (n.defaultJSExtensions = e.defaultJSExtensions, w.call(n, "The defaultJSExtensions configuration option is deprecated, use packages configuration instead.")), e.pluginFirst && (n.pluginFirst = e.pluginFirst), e.map) {
                var i = "";
                for (var o in e.map) {
                    var s = e.map[o];
                    if ("string" != typeof s) {
                        i += (i.length ? ", " : "") + '"' + o + '"';
                        var l = n.defaultJSExtensions && ".js" != o.substr(o.length - 3, 3), u = n.decanonicalize(o);
                        l && ".js" == u.substr(u.length - 3, 3) && (u = u.substr(0, u.length - 3));
                        var c = "";
                        for (var f in n.packages)
                            u.substr(0, f.length) == f && (!u[f.length] || "/" == u[f.length]) && c.split("/").length < f.split("/").length && (c = f);
                        c && n.packages[c].main && (u = u.substr(0, u.length - n.packages[c].main.length - 1));
                        var f = n.packages[u] = n.packages[u] || {};
                        f.map = s;
                    }
                    else
                        n.map[o] = s;
                }
                i && w.call(n, "The map configuration for " + i + ' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "' + o + '": { map: {...} } } }).');
            } if (e.packageConfigPaths) {
                for (var m = [], p = 0; p < e.packageConfigPaths.length; p++) {
                    var h = e.packageConfigPaths[p], v = Math.max(h.lastIndexOf("*") + 1, h.lastIndexOf("/")), b = P.call(n, h.substr(0, v));
                    m[p] = b + h.substr(v);
                }
                n.packageConfigPaths = m;
            } if (e.bundles)
                for (var o in e.bundles) {
                    for (var x = [], p = 0; p < e.bundles[o].length; p++) {
                        var l = n.defaultJSExtensions && ".js" != e.bundles[o][p].substr(e.bundles[o][p].length - 3, 3), S = n.decanonicalize(e.bundles[o][p]);
                        l && ".js" == S.substr(S.length - 3, 3) && (S = S.substr(0, S.length - 3)), x.push(S);
                    }
                    n.bundles[o] = x;
                } if (e.packages)
                for (var o in e.packages) {
                    if (o.match(/^([^\/]+:)?\/\/$/))
                        throw new TypeError('"' + o + '" is not a valid package name.');
                    var u = P.call(n, o);
                    "/" == u[u.length - 1] && (u = u.substr(0, u.length - 1)), y(n, u, e.packages[o], !1);
                } for (var j in e) {
                var s = e[j];
                if (U.call(["baseURL", "map", "packages", "bundles", "paths", "warnings", "packageConfigPaths", "loaderErrorStack", "browserConfig", "nodeConfig", "devConfig", "buildConfig", "productionConfig"], j) == -1)
                    if ("object" != typeof s || s instanceof Array)
                        n[j] = s;
                    else {
                        n[j] = n[j] || {};
                        for (var o in s)
                            if ("meta" == j && "*" == o[0])
                                g(n[j][o] = n[j][o] || {}, s[o]);
                            else if ("meta" == j) {
                                var k = P.call(n, o);
                                n.defaultJSExtensions && ".js" != k.substr(k.length - 3, 3) && !d(k) && (k += ".js"), g(n[j][k] = n[j][k] || {}, s[o]);
                            }
                            else if ("depCache" == j) {
                                var l = n.defaultJSExtensions && ".js" != o.substr(o.length - 3, 3), u = n.decanonicalize(o);
                                l && ".js" == u.substr(u.length - 3, 3) && (u = u.substr(0, u.length - 3)), n[j][u] = [].concat(s[o]);
                            }
                            else
                                n[j][o] = s[o];
                    }
            } O(n, e, function (e) { n.config(e, !0); }); }, function () {
                function e(e, t) { var r, n, a = 0; for (var o in e.packages)
                    t.substr(0, o.length) !== o || t.length !== o.length && "/" !== t[o.length] || (n = o.split("/").length, n > a && (r = o, a = n)); return r; }
                function t(e, t, r, n, a) { if (!n || "/" == n[n.length - 1] || a || t.defaultExtension === !1)
                    return n; var o = !1; if (t.meta && p(t.meta, n, function (e, t, r) { if (0 == r || e.lastIndexOf("*") != e.length - 1)
                    return o = !0; }), !o && e.meta && p(e.meta, r + "/" + n, function (e, t, r) { if (0 == r || e.lastIndexOf("*") != e.length - 1)
                    return o = !0; }), o)
                    return n; var i = "." + (t.defaultExtension || "js"); return n.substr(n.length - i.length) != i ? n + i : n; }
                function r(e, r, n, a, i) { if (!a) {
                    if (!r.main)
                        return n + (e.defaultJSExtensions ? ".js" : "");
                    a = "./" == r.main.substr(0, 2) ? r.main.substr(2) : r.main;
                } if (r.map) {
                    var s = "./" + a, l = S(r.map, s);
                    if (l || (s = "./" + t(e, r, n, a, i), s != "./" + a && (l = S(r.map, s))), l) {
                        var u = o(e, r, n, l, s, i);
                        if (u)
                            return u;
                    }
                } return n + "/" + t(e, r, n, a, i); }
                function n(e, t, r, n) { if ("." == e)
                    throw new Error("Package " + r + ' has a map entry for "." which is not permitted.'); return !(t.substr(0, e.length) == e && n.length > e.length); }
                function o(e, r, a, o, i, s) { "/" == i[i.length - 1] && (i = i.substr(0, i.length - 1)); var l = r.map[o]; if ("object" == typeof l)
                    throw new Error("Synchronous conditional normalization not supported sync normalizing " + o + " in " + a); if (n(o, l, a, i) && "string" == typeof l) {
                    if ("." == l)
                        l = a;
                    else if ("./" == l.substr(0, 2))
                        return a + "/" + t(e, r, a, l.substr(2) + i.substr(o.length), s);
                    return e.normalizeSync(l + i.substr(o.length), a + "/");
                } }
                function l(e, r, n, a, o) { if (!a) {
                    if (!r.main)
                        return Promise.resolve(n + (e.defaultJSExtensions ? ".js" : ""));
                    a = "./" == r.main.substr(0, 2) ? r.main.substr(2) : r.main;
                } var i, s; return r.map && (i = "./" + a, s = S(r.map, i), s || (i = "./" + t(e, r, n, a, o), i != "./" + a && (s = S(r.map, i)))), (s ? d(e, r, n, s, i, o) : Promise.resolve()).then(function (i) { return i ? Promise.resolve(i) : Promise.resolve(n + "/" + t(e, r, n, a, o)); }); }
                function u(e, r, n, a, o, i, s) { if ("." == o)
                    o = n;
                else if ("./" == o.substr(0, 2))
                    return Promise.resolve(n + "/" + t(e, r, n, o.substr(2) + i.substr(a.length), s)).then(function (t) { return L.call(e, t, n + "/"); }); return e.normalize(o + i.substr(a.length), n + "/"); }
                function d(e, t, r, a, o, i) { "/" == o[o.length - 1] && (o = o.substr(0, o.length - 1)); var s = t.map[a]; if ("string" == typeof s)
                    return n(a, s, r, o) ? u(e, t, r, a, s, o, i) : Promise.resolve(); if (e.builder)
                    return Promise.resolve(r + "/#:" + o); var l = [], d = []; for (var c in s) {
                    var f = z(c);
                    d.push({ condition: f, map: s[c] }), l.push(e.import(f.module, r));
                } return Promise.all(l).then(function (e) { for (var t = 0; t < d.length; t++) {
                    var r = d[t].condition, n = x(r.prop, e[t]);
                    if (!r.negate && n || r.negate && !n)
                        return d[t].map;
                } }).then(function (s) { if (s) {
                    if (!n(a, s, r, o))
                        return;
                    return u(e, t, r, a, s, o, i);
                } }); }
                function c(e) { var t = e.lastIndexOf("*"), r = Math.max(t + 1, e.lastIndexOf("/")); return { length: r, regEx: new RegExp("^(" + e.substr(0, r).replace(/[.+?^${}()|[\]\\]/g, "\\$&").replace(/\*/g, "[^\\/]+") + ")(\\/|$)"), wildcard: t != -1 }; }
                function f(e, t) { for (var r, n, a = !1, o = 0; o < e.packageConfigPaths.length; o++) {
                    var i = e.packageConfigPaths[o], s = h[i] || (h[i] = c(i));
                    if (!(t.length < s.length)) {
                        var l = t.match(s.regEx);
                        !l || r && (a && s.wildcard || !(r.length < l[1].length)) || (r = l[1], a = !s.wildcard, n = r + i.substr(s.length));
                    }
                } if (r)
                    return { packageName: r, configPath: n }; }
                function m(e, t, r) { var n = e.pluginLoader || e; return (n.meta[r] = n.meta[r] || {}).format = "json", n.meta[r].loader = null, n.load(r).then(function () { var a = n.get(r).default; return a.systemjs && (a = a.systemjs), a.modules && (a.meta = a.modules, w.call(e, "Package config file " + r + ' is configured with "modules", which is deprecated as it has been renamed to "meta".')), y(e, t, a, !0); }); }
                function p(e, t, r) { var n; for (var a in e) {
                    var o = "./" == a.substr(0, 2) ? "./" : "";
                    if (o && (a = a.substr(2)), n = a.indexOf("*"), n !== -1 && a.substr(0, n) == t.substr(0, n) && a.substr(n + 1) == t.substr(t.length - a.length + n + 1) && r(a, e[o + a], a.split("/").length))
                        return;
                } var i = e[t] && e.hasOwnProperty && e.hasOwnProperty(t) ? e[t] : e["./" + t]; i && r(i, i, 0); }
                s(function (e) { return function () { e.call(this), this.packages = {}, this.packageConfigPaths = []; }; }), a.prototype.normalizeSync = a.prototype.decanonicalize = a.prototype.normalize, i("decanonicalize", function (t) { return function (r, n) { if (this.builder)
                    return t.call(this, r, n, !0); var a = t.call(this, r, n, !1); if (!this.defaultJSExtensions)
                    return a; var o = e(this, a), i = this.packages[o], s = i && i.defaultExtension; return void 0 == s && i && i.meta && p(i.meta, a.substr(o), function (e, t, r) { if (0 == r || e.lastIndexOf("*") != e.length - 1)
                    return s = !1, !0; }), (s === !1 || s && ".js" != s) && ".js" != r.substr(r.length - 3, 3) && ".js" == a.substr(a.length - 3, 3) && (a = a.substr(0, a.length - 3)), a; }; }), i("normalizeSync", function (t) {
                    return function (n, a, i) {
                        var s = this;
                        if (i = i === !0, a)
                            var l = e(s, a) || s.defaultJSExtensions && ".js" == a.substr(a.length - 3, 3) && e(s, a.substr(0, a.length - 3));
                        var u = l && s.packages[l];
                        if (u && "." != n[0]) {
                            var d = u.map, c = d && S(d, n);
                            if (c && "string" == typeof d[c]) {
                                var m = o(s, u, l, c, n, i);
                                if (m)
                                    return m;
                            }
                        }
                        var p = s.defaultJSExtensions && ".js" != n.substr(n.length - 3, 3), h = t.call(s, n, a, !1);
                        p && ".js" != h.substr(h.length - 3, 3) && (p = !1), p && (h = h.substr(0, h.length - 3));
                        var g = f(s, h), v = g && g.packageName || e(s, h);
                        if (!v)
                            return h + (p ? ".js" : "");
                        var b = h.substr(v.length + 1);
                        return r(s, s.packages[v] || {}, v, b, i);
                    };
                }), i("normalize", function (t) { return function (r, n, a) { var o = this; return a = a === !0, Promise.resolve().then(function () { if (n)
                    var t = e(o, n) || o.defaultJSExtensions && ".js" == n.substr(n.length - 3, 3) && e(o, n.substr(0, n.length - 3)); var i = t && o.packages[t]; if (i && "./" != r.substr(0, 2)) {
                    var s = i.map, l = s && S(s, r);
                    if (l)
                        return d(o, i, t, l, r, a);
                } return Promise.resolve(); }).then(function (i) { if (i)
                    return i; var s = o.defaultJSExtensions && ".js" != r.substr(r.length - 3, 3), u = t.call(o, r, n, !1); s && ".js" != u.substr(u.length - 3, 3) && (s = !1), s && (u = u.substr(0, u.length - 3)); var d = f(o, u), c = d && d.packageName || e(o, u); if (!c)
                    return Promise.resolve(u + (s ? ".js" : "")); var p = o.packages[c], h = p && (p.configured || !d); return (h ? Promise.resolve(p) : m(o, c, d.configPath)).then(function (e) { var t = u.substr(c.length + 1); return l(o, e, c, t, a); }); }); }; });
                var h = {};
                i("locate", function (t) { return function (r) { var n = this; return Promise.resolve(t.call(this, r)).then(function (t) { var a = e(n, r.name); if (a) {
                    var o = n.packages[a], i = r.name.substr(a.length + 1), s = {};
                    if (o.meta) {
                        var l = 0;
                        p(o.meta, i, function (e, t, r) { r > l && (l = r), v(s, t, r && l > r); }), v(r.metadata, s);
                    }
                    o.format && !r.metadata.loader && (r.metadata.format = r.metadata.format || o.format);
                } return t; }); }; });
            }(), function () { function t() { if (s && "interactive" === s.script.readyState)
                return s.load; for (var e = 0; e < d.length; e++)
                if ("interactive" == d[e].script.readyState)
                    return s = d[e], s.load; } function r(e, t) { return new Promise(function (e, r) { t.metadata.integrity && r(new Error("Subresource integrity checking is not supported in web workers.")), l = t; try {
                importScripts(t.address);
            }
            catch (e) {
                l = null, r(e);
            } l = null, t.metadata.entry || r(new Error(t.address + " did not call System.register or AMD define. If loading a global, ensure the meta format is set to global.")), e(""); }); } if ("undefined" != typeof document)
                var n = document.getElementsByTagName("head")[0]; var a, o, s, l = null, u = n && function () { var e = document.createElement("script"), t = "undefined" != typeof opera && "[object Opera]" === opera.toString(); return e.attachEvent && !(e.attachEvent.toString && e.attachEvent.toString().indexOf("[native code") < 0) && !t; }(), d = [], c = 0, f = []; i("pushRegister_", function (e) { return function (r) { return !e.call(this, r) && (l ? this.reduceRegister_(l, r) : u ? this.reduceRegister_(t(), r) : c ? f.push(r) : this.reduceRegister_(null, r), !0); }; }), i("fetch", function (t) { return function (i) { var l = this; return "json" != i.metadata.format && i.metadata.scriptLoad && (F || A) ? A ? r(l, i) : new Promise(function (t, r) { function m(e) { if (!g.readyState || "loaded" == g.readyState || "complete" == g.readyState) {
                if (c--, i.metadata.entry || f.length) {
                    if (!u) {
                        for (var n = 0; n < f.length; n++)
                            l.reduceRegister_(i, f[n]);
                        f = [];
                    }
                }
                else
                    l.reduceRegister_(i);
                h(), i.metadata.entry || i.metadata.bundle || r(new Error(i.name + " did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")), t("");
            } } function p(e) { h(), r(new Error("Unable to load script " + i.address)); } function h() { if (e.System = a, e.require = o, g.detachEvent) {
                g.detachEvent("onreadystatechange", m);
                for (var t = 0; t < d.length; t++)
                    d[t].script == g && (s && s.script == g && (s = null), d.splice(t, 1));
            }
            else
                g.removeEventListener("load", m, !1), g.removeEventListener("error", p, !1); n.removeChild(g); } var g = document.createElement("script"); g.async = !0, i.metadata.crossOrigin && (g.crossOrigin = i.metadata.crossOrigin), i.metadata.integrity && g.setAttribute("integrity", i.metadata.integrity), u ? (g.attachEvent("onreadystatechange", m), d.push({ script: g, load: i })) : (g.addEventListener("load", m, !1), g.addEventListener("error", p, !1)), c++, a = e.System, o = e.require, g.src = i.address, n.appendChild(g); }) : t.call(this, i); }; }); }();
            var oe = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;
            !function () { function t(e, r, n) { if (n[e.groupIndex] = n[e.groupIndex] || [], U.call(n[e.groupIndex], e) == -1) {
                n[e.groupIndex].push(e);
                for (var a = 0, o = e.normalizedDeps.length; a < o; a++) {
                    var i = e.normalizedDeps[a], s = r.defined[i];
                    if (s && !s.evaluated) {
                        var l = e.groupIndex + (s.declarative != e.declarative);
                        if (null === s.groupIndex || s.groupIndex < l) {
                            if (null !== s.groupIndex && (n[s.groupIndex].splice(U.call(n[s.groupIndex], s), 1), 0 == n[s.groupIndex].length))
                                throw new Error("Mixed dependency cycle detected");
                            s.groupIndex = l;
                        }
                        t(s, r, n);
                    }
                }
            } } function n(e, r, n) { if (!r.module) {
                r.groupIndex = 0;
                var a = [];
                t(r, n, a);
                for (var o = !!r.declarative == a.length % 2, i = a.length - 1; i >= 0; i--) {
                    for (var s = a[i], l = 0; l < s.length; l++) {
                        var d = s[l];
                        o ? u(d, n) : c(d, n);
                    }
                    o = !o;
                }
            } } function o() { } function l(e, t) { return t[e] || (t[e] = { name: e, dependencies: [], exports: new o, importers: [] }); } function u(t, r) { if (!t.module) {
                var n = r._loader.moduleRecords, a = t.module = l(t.name, n), o = t.module.exports, i = t.declare.call(e, function (e, t) { if (a.locked = !0, "object" == typeof e)
                    for (var r in e)
                        o[r] = e[r];
                else
                    o[e] = t; for (var n = 0, i = a.importers.length; n < i; n++) {
                    var s = a.importers[n];
                    if (!s.locked) {
                        var l = U.call(s.dependencies, a), u = s.setters[l];
                        u && u(o);
                    }
                } return a.locked = !1, t; }, { id: t.name });
                if ("function" == typeof i && (i = { setters: [], execute: i }), i = i || { setters: [], execute: function () { } }, a.setters = i.setters, a.execute = i.execute, !a.setters || !a.execute)
                    throw new TypeError("Invalid System.register form for " + t.name);
                for (var s = 0, d = t.normalizedDeps.length; s < d; s++) {
                    var c, f = t.normalizedDeps[s], m = r.defined[f], p = n[f];
                    p ? c = p.exports : m && !m.declarative ? c = m.esModule : m ? (u(m, r), p = m.module, c = p.exports) : c = r.get(f), p && p.importers ? (p.importers.push(a), a.dependencies.push(p)) : a.dependencies.push(null);
                    for (var h = t.originalIndices[s], g = 0, v = h.length; g < v; ++g) {
                        var b = h[g];
                        a.setters[b] && a.setters[b](c);
                    }
                }
            } } function d(e, t) { var r, n = t.defined[e]; if (n)
                n.declarative ? f(e, n, [], t) : n.evaluated || c(n, t), r = n.module.exports;
            else if (r = t.get(e), !r)
                throw new Error("Unable to load dependency " + e + "."); return (!n || n.declarative) && r && r.__useDefault ? r.default : r; } function c(t, n) { if (!t.module) {
                var a = {}, o = t.module = { exports: a, id: t.name };
                if (!t.executingRequire)
                    for (var i = 0, s = t.normalizedDeps.length; i < s; i++) {
                        var l = t.normalizedDeps[i], u = n.defined[l];
                        u && c(u, n);
                    }
                t.evaluated = !0;
                var f = t.execute.call(e, function (e) { for (var r = 0, a = t.deps.length; r < a; r++)
                    if (t.deps[r] == e)
                        return d(t.normalizedDeps[r], n); var o = n.normalizeSync(e, t.name); if (U.call(t.normalizedDeps, o) != -1)
                    return d(o, n); throw new Error("Module " + e + " not declared as a dependency of " + t.name); }, a, o);
                void 0 !== f && (o.exports = f), a = o.exports, a && (a.__esModule || a instanceof r) ? t.esModule = n.newModule(a) : t.esmExports && a !== e ? t.esModule = n.newModule(p(a)) : t.esModule = n.newModule({ default: a, __useDefault: !0 });
            } } function f(t, r, n, a) { if (r && !r.evaluated && r.declarative) {
                n.push(t);
                for (var o = 0, i = r.normalizedDeps.length; o < i; o++) {
                    var s = r.normalizedDeps[o];
                    U.call(n, s) == -1 && (a.defined[s] ? f(s, a.defined[s], n, a) : a.get(s));
                }
                r.evaluated || (r.evaluated = !0, r.module.execute.call(e));
            } } a.prototype.register = function (e, t, r) { if ("string" != typeof e && (r = t, t = e, e = null), "boolean" == typeof r)
                return this.registerDynamic.apply(this, arguments); var n = M(); n.name = e && (this.decanonicalize || this.normalize).call(this, e), n.declarative = !0, n.deps = t, n.declare = r, this.pushRegister_({ amd: !1, entry: n }); }, a.prototype.registerDynamic = function (e, t, r, n) { "string" != typeof e && (n = r, r = t, t = e, e = null); var a = M(); a.name = e && (this.decanonicalize || this.normalize).call(this, e), a.deps = t, a.execute = n, a.executingRequire = r, this.pushRegister_({ amd: !1, entry: a }); }, i("reduceRegister_", function () { return function (e, t) { if (t) {
                var r = t.entry, n = e && e.metadata;
                if (r.name && (r.name in this.defined || (this.defined[r.name] = r), n && (n.bundle = !0)), !r.name || e && !n.entry && r.name == e.name) {
                    if (!n)
                        throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");
                    if (n.entry)
                        throw "register" == n.format ? new Error("Multiple anonymous System.register calls in module " + e.name + ". If loading a bundle, ensure all the System.register calls are named.") : new Error("Module " + e.name + " interpreted as " + n.format + " module format, but called System.register.");
                    n.format || (n.format = "register"), n.entry = r;
                }
            } }; }), s(function (e) { return function () { e.call(this), this.defined = {}, this._loader.moduleRecords = {}; }; }), q(o, "toString", { value: function () { return "Module"; } }), i("delete", function (e) { return function (t) { return delete this._loader.moduleRecords[t], delete this.defined[t], e.call(this, t); }; }), i("fetch", function (e) { return function (t) { return this.defined[t.name] ? (t.metadata.format = "defined", "") : (t.metadata.deps = t.metadata.deps || [], e.call(this, t)); }; }), i("translate", function (e) { return function (t) { return t.metadata.deps = t.metadata.deps || [], Promise.resolve(e.apply(this, arguments)).then(function (e) { return ("register" == t.metadata.format || !t.metadata.format && k(t.source)) && (t.metadata.format = "register"), e; }); }; }), i("load", function (e) { return function (t) { var r = this, a = r.defined[t]; return !a || a.deps.length ? e.apply(this, arguments) : (a.originalIndices = a.normalizedDeps = [], n(t, a, r), f(t, a, [], r), a.esModule || (a.esModule = r.newModule(a.module.exports)), r.trace || (r.defined[t] = void 0), r.set(t, a.esModule), Promise.resolve()); }; }), i("instantiate", function (e) { return function (t) { "detect" == t.metadata.format && (t.metadata.format = void 0), e.call(this, t); var r, a = this; if (a.defined[t.name])
                r = a.defined[t.name], r.declarative || (r.deps = r.deps.concat(t.metadata.deps)), r.deps = r.deps.concat(t.metadata.deps);
            else if (t.metadata.entry)
                r = t.metadata.entry, r.deps = r.deps.concat(t.metadata.deps);
            else if (!(a.builder && t.metadata.bundle || "register" != t.metadata.format && "esm" != t.metadata.format && "es6" != t.metadata.format)) {
                if ("undefined" != typeof ee && ee.call(a, t), !t.metadata.entry && !t.metadata.bundle)
                    throw new Error(t.name + " detected as " + t.metadata.format + " but didn't execute.");
                r = t.metadata.entry, r && t.metadata.deps && (r.deps = r.deps.concat(t.metadata.deps));
            } r || (r = M(), r.deps = t.metadata.deps, r.execute = function () { }), a.defined[t.name] = r; var o = m(r.deps); r.deps = o.names, r.originalIndices = o.indices, r.name = t.name, r.esmExports = t.metadata.esmExports !== !1; for (var i = [], s = 0, l = r.deps.length; s < l; s++)
                i.push(Promise.resolve(a.normalize(r.deps[s], t.name))); return Promise.all(i).then(function (e) { return r.normalizedDeps = e, { deps: r.deps, execute: function () { return n(t.name, r, a), f(t.name, r, [], a), r.esModule || (r.esModule = a.newModule(r.module.exports)), a.trace || (a.defined[t.name] = void 0), r.esModule; } }; }); }; }); }(), function () { var r = /(^\s*|[}\);\n]\s*)(import\s*(['"]|(\*\s+as\s+)?[^"'\(\)\n;]+\s*from\s*['"]|\{)|export\s+\*\s+from\s+["']|export\s*(\{|default|function|class|var|const|let|async\s+function))/, n = /\$traceurRuntime\s*\./, a = /babelHelpers\s*\./; i("translate", function (o) { return function (i) { var s = this, l = arguments; return o.apply(s, l).then(function (o) { if ("esm" == i.metadata.format || "es6" == i.metadata.format || !i.metadata.format && o.match(r)) {
                if ("es6" == i.metadata.format && w.call(s, "Module " + i.name + ' has metadata setting its format to "es6", which is deprecated.\nThis should be updated to "esm".'), i.metadata.format = "esm", i.metadata.deps) {
                    for (var u = "", d = 0; d < i.metadata.deps.length; d++)
                        u += 'import "' + i.metadata.deps[d] + '"; ';
                    i.source = u + o;
                }
                if (s.transpiler === !1) {
                    if (s.builder)
                        return o;
                    throw new TypeError("Unable to dynamically transpile ES module as SystemJS.transpiler set to false.");
                }
                return s._loader.loadedTranspiler = s._loader.loadedTranspiler || !1, s.pluginLoader && (s.pluginLoader._loader.loadedTranspiler = s._loader.loadedTranspiler || !1), (s._loader.transpilerPromise || (s._loader.transpilerPromise = Promise.resolve(e["typescript" == s.transpiler ? "ts" : s.transpiler] || (s.pluginLoader || s).normalize(s.transpiler).then(function (e) { return s._loader.transpilerNormalized = e, (s.pluginLoader || s).load(e).then(function () { return (s.pluginLoader || s).get(e); }); })))).then(function (e) { return s._loader.loadedTranspilerRuntime = !0, e.translate ? e == i.metadata.loaderModule ? i.source : (i.metadata.loaderModule = e, i.metadata.loader = s._loader.transpilerNormalized, "string" == typeof i.metadata.sourceMap && (i.metadata.sourceMap = JSON.parse(i.metadata.sourceMap)), Promise.resolve(e.translate.apply(s, l)).then(function (e) { var t = i.metadata.sourceMap; if (t && "object" == typeof t) {
                    var r = i.address.split("!")[0];
                    t.file && t.file != i.address || (t.file = r + "!transpiled"), (!t.sources || t.sources.length <= 1 && (!t.sources[0] || t.sources[0] == i.address)) && (t.sources = [r]);
                } return "esm" == i.metadata.format && !s.builder && k(e) && (i.metadata.format = "register"), e; })) : (s.builder && (i.metadata.originalSource = i.source), W.call(s, i).then(function (e) { return i.metadata.sourceMap = void 0, e; })); }, function (e) { throw t(e, "Unable to load transpiler to transpile " + i.name); });
            } if (s.transpiler === !1)
                return o; if (s._loader.loadedTranspiler !== !1 || "traceur" != s.transpiler && "typescript" != s.transpiler && "babel" != s.transpiler || i.name != s.normalizeSync(s.transpiler) || (o.length > 100 && !i.metadata.format && (i.metadata.format = "global", "traceur" === s.transpiler && (i.metadata.exports = "traceur"), "typescript" === s.transpiler && (i.metadata.exports = "ts")), s._loader.loadedTranspiler = !0), s._loader.loadedTranspilerRuntime === !1 && (i.name != s.normalizeSync("traceur-runtime") && i.name != s.normalizeSync("babel/external-helpers*") || (o.length > 100 && (i.metadata.format = i.metadata.format || "global"), s._loader.loadedTranspilerRuntime = !0)), ("register" == i.metadata.format || i.metadata.bundle) && s._loader.loadedTranspilerRuntime !== !0) {
                if ("traceur" == s.transpiler && !e.$traceurRuntime && i.source.match(n))
                    return s._loader.loadedTranspilerRuntime = s._loader.loadedTranspilerRuntime || !1, s.import("traceur-runtime").then(function () { return o; });
                if ("babel" == s.transpiler && !e.babelHelpers && i.source.match(a))
                    return s._loader.loadedTranspilerRuntime = s._loader.loadedTranspilerRuntime || !1, s.import("babel/external-helpers").then(function () { return o; });
            } return o; }); }; }); }();
            var ie = "undefined" != typeof self ? "self" : "global";
            i("fetch", function (e) { return function (t) { return t.metadata.exports && !t.metadata.format && (t.metadata.format = "global"), e.call(this, t); }; }), i("instantiate", function (e) { return function (t) { var r = this; if (t.metadata.format || (t.metadata.format = "global"), "global" == t.metadata.format && !t.metadata.entry) {
                var n = M();
                t.metadata.entry = n, n.deps = [];
                for (var a in t.metadata.globals) {
                    var o = t.metadata.globals[a];
                    o && n.deps.push(o);
                }
                n.execute = function (e, n, a) { var o; if (t.metadata.globals) {
                    o = {};
                    for (var i in t.metadata.globals)
                        t.metadata.globals[i] && (o[i] = e(t.metadata.globals[i]));
                } var s = t.metadata.exports; s && (t.source += "\n" + ie + '["' + s + '"] = ' + s + ";"); var l = r.get("@@global-helpers").prepareGlobal(a.id, s, o, !!t.metadata.encapsulateGlobal); return ee.call(r, t), l(); };
            } return e.call(this, t); }; }), i("reduceRegister_", function (e) { return function (t, r) { if (r || !t.metadata.exports && (!A || "global" != t.metadata.format))
                return e.call(this, t, r); t.metadata.format = "global"; var n = t.metadata.entry = M(); n.deps = t.metadata.deps; var a = R(t.metadata.exports); n.execute = function () { return a; }; }; }), s(function (t) { return function () { function r(t) { if (Object.keys)
                Object.keys(e).forEach(t);
            else
                for (var r in e)
                    i.call(e, r) && t(r); } function n(t) { r(function (r) { if (U.call(s, r) == -1) {
                try {
                    var n = e[r];
                }
                catch (e) {
                    s.push(r);
                }
                t(r, n);
            } }); } var a = this; t.call(a); var o, i = Object.prototype.hasOwnProperty, s = ["_g", "sessionStorage", "localStorage", "clipboardData", "frames", "frameElement", "external", "mozAnimationStartTime", "webkitStorageInfo", "webkitIndexedDB", "mozInnerScreenY", "mozInnerScreenX"]; a.set("@@global-helpers", a.newModule({ prepareGlobal: function (t, r, a, i) { var s = e.define; e.define = void 0; var l; if (a) {
                    l = {};
                    for (var u in a)
                        l[u] = e[u], e[u] = a[u];
                } return r || (o = {}, n(function (e, t) { o[e] = t; })), function () { var t, a = r ? R(r) : {}, u = !!r; if (r && !i || n(function (n, s) { o[n] !== s && "undefined" != typeof s && (i && (e[n] = void 0), r || (a[n] = s, "undefined" != typeof t ? u || t === s || (u = !0) : t = s)); }), a = u ? a : t, l)
                    for (var d in l)
                        e[d] = l[d]; return e.define = s, a; }; } })); }; }), function () { function t(e) { function t(e, t) { for (var r = 0; r < e.length; r++)
                if (e[r][0] < t.index && e[r][1] > t.index)
                    return !0; return !1; } n.lastIndex = a.lastIndex = o.lastIndex = 0; var r, i = [], s = [], l = []; if (e.length / e.split("\n").length < 200) {
                for (; r = o.exec(e);)
                    s.push([r.index, r.index + r[0].length]);
                for (; r = a.exec(e);)
                    t(s, r) || l.push([r.index + r[1].length, r.index + r[0].length - 1]);
            } for (; r = n.exec(e);)
                if (!t(s, r) && !t(l, r)) {
                    var u = r[1].substr(1, r[1].length - 2);
                    if (u.match(/"|'/))
                        continue;
                    "/" == u[u.length - 1] && (u = u.substr(0, u.length - 1)), i.push(u);
                } return i; } var r = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])(exports\s*(\[['"]|\.)|module(\.exports|\['exports'\]|\["exports"\])\s*(\[['"]|[=,\.]))/, n = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF."'])require\s*\(\s*("[^"\\]*(?:\\.[^"\\]*)*"|'[^'\\]*(?:\\.[^'\\]*)*')\s*\)/g, a = /(^|[^\\])(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm, o = /("[^"\\\n\r]*(\\.[^"\\\n\r]*)*"|'[^'\\\n\r]*(\\.[^'\\\n\r]*)*')/g, s = /^\#\!.*/; i("instantiate", function (a) { return function (o) { var i = this; if (o.metadata.format || (r.lastIndex = 0, n.lastIndex = 0, (n.exec(o.source) || r.exec(o.source)) && (o.metadata.format = "cjs")), "cjs" == o.metadata.format) {
                var l = o.metadata.deps, u = o.metadata.cjsRequireDetection === !1 ? [] : t(o.source);
                for (var d in o.metadata.globals)
                    o.metadata.globals[d] && u.push(o.metadata.globals[d]);
                var c = M();
                o.metadata.entry = c, c.deps = u, c.executingRequire = !0, c.execute = function (t, r, n) { function a(e) { return "/" == e[e.length - 1] && (e = e.substr(0, e.length - 1)), t.apply(this, arguments); } if (a.resolve = function (e) { return i.get("@@cjs-helpers").requireResolve(e, n.id); }, n.paths = [], n.require = t, !o.metadata.cjsDeferDepsExecute)
                    for (var u = 0; u < l.length; u++)
                        a(l[u]); var d = i.get("@@cjs-helpers").getPathVars(n.id), c = { exports: r, args: [a, r, n, d.filename, d.dirname, e, e] }, f = "(function(require, exports, module, __filename, __dirname, global, GLOBAL"; if (o.metadata.globals)
                    for (var m in o.metadata.globals)
                        c.args.push(a(o.metadata.globals[m])), f += ", " + m; var p = e.define; e.define = void 0, e.__cjsWrapper = c, o.source = f + ") {" + o.source.replace(s, "") + "\n}).apply(__cjsWrapper.exports, __cjsWrapper.args);", ee.call(i, o), e.__cjsWrapper = void 0, e.define = p; };
            } return a.call(i, o); }; }); }(), s(function (e) { return function () { function t(e) { return "file:///" == e.substr(0, 8) ? e.substr(7 + !!D) : n && e.substr(0, n.length) == n ? e.substr(n.length) : e; } var r = this; if (e.call(r), "undefined" != typeof window && "undefined" != typeof document && window.location)
                var n = location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : ""); r.set("@@cjs-helpers", r.newModule({ requireResolve: function (e, n) { return t(r.normalizeSync(e, n)); }, getPathVars: function (e) { var r, n = e.lastIndexOf("!"); r = n != -1 ? e.substr(0, n) : e; var a = r.split("/"); return a.pop(), a = a.join("/"), { filename: t(r), dirname: t(a) }; } })); }; }), i("fetch", function (t) { return function (r) { return r.metadata.scriptLoad && F && (e.define = this.amdDefine), t.call(this, r); }; }), s(function (t) { return function () { function r(e, t) { e = e.replace(s, ""); var r = e.match(d), n = (r[1].split(",")[t] || "require").replace(c, ""), a = f[n] || (f[n] = new RegExp(l + n + u, "g")); a.lastIndex = 0; for (var o, i = []; o = a.exec(e);)
                i.push(o[2] || o[3]); return i; } function n(e, t, r, a) { if ("object" == typeof e && !(e instanceof Array))
                return n.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1)); if ("string" == typeof e && "function" == typeof t && (e = [e]), !(e instanceof Array)) {
                if ("string" == typeof e) {
                    var i = o.defaultJSExtensions && ".js" != e.substr(e.length - 3, 3), s = o.decanonicalize(e, a);
                    i && ".js" == s.substr(s.length - 3, 3) && (s = s.substr(0, s.length - 3));
                    var l = o.get(s);
                    if (!l)
                        throw new Error('Module not already loaded loading "' + e + '" as ' + s + (a ? ' from "' + a + '".' : "."));
                    return l.__useDefault ? l.default : l;
                }
                throw new TypeError("Invalid require");
            } for (var u = [], d = 0; d < e.length; d++)
                u.push(o.import(e[d], a)); Promise.all(u).then(function (e) { t && t.apply(null, e); }, r); } function a(t, a, i) { function s(t, r, s) { function c(e, r, a) { return "string" == typeof e && "function" != typeof r ? t(e) : n.call(o, e, r, a, s.id); } for (var f = [], m = 0; m < a.length; m++)
                f.push(t(a[m])); s.uri = s.id, s.config = function () { }, d != -1 && f.splice(d, 0, s), u != -1 && f.splice(u, 0, r), l != -1 && (c.toUrl = function (e) { var t = o.defaultJSExtensions && ".js" != e.substr(e.length - 3, 3), r = o.decanonicalize(e, s.id); return t && ".js" == r.substr(r.length - 3, 3) && (r = r.substr(0, r.length - 3)), r; }, f.splice(l, 0, c)); var p = e.require; e.require = n; var h = i.apply(u == -1 ? e : r, f); if (e.require = p, "undefined" == typeof h && s && (h = s.exports), "undefined" != typeof h)
                return h; } "string" != typeof t && (i = a, a = t, t = null), a instanceof Array || (i = a, a = ["require", "exports", "module"].splice(0, i.length)), "function" != typeof i && (i = function (e) { return function () { return e; }; }(i)), void 0 === a[a.length - 1] && a.pop(); var l, u, d; (l = U.call(a, "require")) != -1 && (a.splice(l, 1), t || (a = a.concat(r(i.toString(), l)))), (u = U.call(a, "exports")) != -1 && a.splice(u, 1), (d = U.call(a, "module")) != -1 && a.splice(d, 1); var c = M(); c.name = t && (o.decanonicalize || o.normalize).call(o, t), c.deps = a, c.execute = s, o.pushRegister_({ amd: !0, entry: c }); } var o = this; t.call(this); var s = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm, l = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])", u = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)", d = /\(([^\)]*)\)/, c = /^\s+|\s+$/g, f = {}; a.amd = {}, i("reduceRegister_", function (e) { return function (t, r) { if (!r || !r.amd)
                return e.call(this, t, r); var n = t && t.metadata, a = r.entry; if (n)
                if (n.format && "detect" != n.format) {
                    if (!a.name && "amd" != n.format)
                        throw new Error("AMD define called while executing " + n.format + " module " + t.name);
                }
                else
                    n.format = "amd"; if (a.name)
                n && (n.entry || n.bundle ? n.entry && n.entry.name && n.entry.name != t.name && (n.entry = void 0) : n.entry = a, n.bundle = !0), a.name in this.defined || (this.defined[a.name] = a);
            else {
                if (!n)
                    throw new TypeError("Unexpected anonymous AMD define.");
                if (n.entry && !n.entry.name)
                    throw new Error("Multiple anonymous defines in module " + t.name);
                n.entry = a;
            } }; }), o.amdDefine = a, o.amdRequire = n; }; }), function () { var t = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])define\s*\(\s*("[^"]+"\s*,\s*|'[^']+'\s*,\s*)?\s*(\[(\s*(("[^"]+"|'[^']+')\s*,|\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*(\s*("[^"]+"|'[^']+')\s*,?)?(\s*(\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*\s*\]|function\s*|{|[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*\))/; i("instantiate", function (r) { return function (n) { var a = this; if ("amd" == n.metadata.format || !n.metadata.format && n.source.match(t))
                if (n.metadata.format = "amd", a.builder || a.execute === !1)
                    n.metadata.execute = function () { return n.metadata.builderExecute.apply(this, arguments); };
                else {
                    var o = e.define;
                    e.define = this.amdDefine;
                    try {
                        ee.call(a, n);
                    }
                    finally {
                        e.define = o;
                    }
                    if (!n.metadata.entry && !n.metadata.bundle)
                        throw new TypeError("AMD module " + n.name + " did not define");
                } return r.call(a, n); }; }); }(), function () { function e(e, t) { if (t) {
                var r;
                if (e.pluginFirst) {
                    if ((r = t.lastIndexOf("!")) != -1)
                        return t.substr(r + 1);
                }
                else if ((r = t.indexOf("!")) != -1)
                    return t.substr(0, r);
                return t;
            } } function t(e, t) { var r, n, a = t.lastIndexOf("!"); if (a != -1)
                return e.pluginFirst ? (r = t.substr(a + 1), n = t.substr(0, a)) : (r = t.substr(0, a), n = t.substr(a + 1) || r.substr(r.lastIndexOf(".") + 1)), { argument: r, plugin: n }; } function r(e, t, r, n) { return n && ".js" == t.substr(t.length - 3, 3) && (t = t.substr(0, t.length - 3)), e.pluginFirst ? r + "!" + t : t + "!" + r; } function n(e, t) { return e.defaultJSExtensions && ".js" != t.substr(t.length - 3, 3); } function a(a) { return function (o, i, s) { var l = this, u = t(l, o); if (i = e(this, i), !u)
                return a.call(this, o, i, s); var d = l.normalizeSync(u.argument, i, !0), c = l.normalizeSync(u.plugin, i, !0); return r(l, d, c, n(l, u.argument)); }; } i("decanonicalize", a), i("normalizeSync", a), i("normalize", function (a) { return function (o, i, s) { var l = this; i = e(this, i); var u = t(l, o); return u ? Promise.all([l.normalize(u.argument, i, !0), l.normalize(u.plugin, i, !1)]).then(function (e) { return r(l, e[0], e[1], n(l, u.argument)); }) : a.call(l, o, i, s); }; }), i("locate", function (e) { return function (t) { var r, n = this, a = t.name; return n.pluginFirst ? (r = a.indexOf("!")) != -1 && (t.metadata.loader = a.substr(0, r), t.name = a.substr(r + 1)) : (r = a.lastIndexOf("!")) != -1 && (t.metadata.loader = a.substr(r + 1), t.name = a.substr(0, r)), e.call(n, t).then(function (e) { return r == -1 && t.metadata.loader ? (n.pluginLoader || n).normalize(t.metadata.loader, t.name).then(function (r) { return t.metadata.loader = r, e; }) : e; }).then(function (e) { var r = t.metadata.loader; if (!r)
                return e; if (t.name == r)
                throw new Error("Plugin " + r + " cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule."); if (n.defined && n.defined[a])
                return e; var o = n.pluginLoader || n; return o.import(r).then(function (r) { return t.metadata.loaderModule = r, t.address = e, r.locate ? r.locate.call(n, t) : e; }); }); }; }), i("fetch", function (e) { return function (t) { var r = this; return t.metadata.loaderModule && t.metadata.loaderModule.fetch && "defined" != t.metadata.format ? (t.metadata.scriptLoad = !1, t.metadata.loaderModule.fetch.call(r, t, function (t) { return e.call(r, t); })) : e.call(r, t); }; }), i("translate", function (e) { return function (t) { var r = this, n = arguments; return t.metadata.loaderModule && t.metadata.loaderModule.translate && "defined" != t.metadata.format ? Promise.resolve(t.metadata.loaderModule.translate.apply(r, n)).then(function (a) { var o = t.metadata.sourceMap; if (o) {
                if ("object" != typeof o)
                    throw new Error("load.metadata.sourceMap must be set to an object.");
                var i = t.address.split("!")[0];
                o.file && o.file != t.address || (o.file = i + "!transpiled"), (!o.sources || o.sources.length <= 1 && (!o.sources[0] || o.sources[0] == t.address)) && (o.sources = [i]);
            } return "string" == typeof a ? t.source = a : w.call(this, "Plugin " + t.metadata.loader + " should return the source in translate, instead of setting load.source directly. This support will be deprecated."), e.apply(r, n); }) : e.apply(r, n); }; }), i("instantiate", function (e) { return function (t) { var r = this, n = !1; return t.metadata.loaderModule && t.metadata.loaderModule.instantiate && !r.builder && "defined" != t.metadata.format ? Promise.resolve(t.metadata.loaderModule.instantiate.call(r, t, function (t) { if (n)
                throw new Error("Instantiate must only be called once."); return n = !0, e.call(r, t); })).then(function (a) { return n ? a : (t.metadata.entry = M(), t.metadata.entry.execute = function () { return a; }, t.metadata.entry.deps = t.metadata.deps, t.metadata.format = "defined", e.call(r, t)); }) : e.call(r, t); }; }); }();
            var se = ["browser", "node", "dev", "build", "production", "default"], le = /#\{[^\}]+\}/;
            i("normalize", function (e) { return function (t, r, n) { var a = this; return C.call(a, t, r).then(function (t) { return e.call(a, t, r, n); }).then(function (e) { return L.call(a, e, r); }); }; }), function () { i("fetch", function (e) { return function (t) { var r = t.metadata.alias, n = t.metadata.deps || []; if (r) {
                t.metadata.format = "defined";
                var a = M();
                return this.defined[t.name] = a, a.declarative = !0, a.deps = n.concat([r]), a.declare = function (e) { return { setters: [function (t) { for (var r in t)
                            e(r, t[r]); t.__useDefault && (a.module.exports.__useDefault = !0); }], execute: function () { } }; }, "";
            } return e.call(this, t); }; }); }(), function () { function e(e, t, r) { for (var n, a = t.split("."); a.length > 1;)
                n = a.shift(), e = e[n] = e[n] || {}; n = a.shift(), n in e || (e[n] = r); } s(function (e) { return function () { this.meta = {}, e.call(this); }; }), i("locate", function (e) { return function (t) { var r, n = this.meta, a = t.name, o = 0; for (var i in n)
                if (r = i.indexOf("*"), r !== -1 && i.substr(0, r) === a.substr(0, r) && i.substr(r + 1) === a.substr(a.length - i.length + r + 1)) {
                    var s = i.split("/").length;
                    s > o && (o = s), v(t.metadata, n[i], o != s);
                } return n[a] && v(t.metadata, n[a]), e.call(this, t); }; }); var t = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/, r = /\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g; i("translate", function (n) { return function (a) { if ("defined" == a.metadata.format)
                return a.metadata.deps = a.metadata.deps || [], Promise.resolve(a.source); var o = a.source.match(t); if (o)
                for (var i = o[0].match(r), s = 0; s < i.length; s++) {
                    var l = i[s], u = l.length, d = l.substr(0, 1);
                    if (";" == l.substr(u - 1, 1) && u--, '"' == d || "'" == d) {
                        var c = l.substr(1, l.length - 3), f = c.substr(0, c.indexOf(" "));
                        if (f) {
                            var m = c.substr(f.length + 1, c.length - f.length - 1);
                            "[]" == f.substr(f.length - 2, 2) ? (f = f.substr(0, f.length - 2), a.metadata[f] = a.metadata[f] || [], a.metadata[f].push(m)) : a.metadata[f] instanceof Array ? (w.call(this, "Module " + a.name + ' contains deprecated "deps ' + m + '" meta syntax.\nThis should be updated to "deps[] ' + m + '" for pushing to array meta.'), a.metadata[f].push(m)) : e(a.metadata, f, m);
                        }
                        else
                            a.metadata[c] = !0;
                    }
                } return n.apply(this, arguments); }; }); }(), function () { s(function (e) { return function () { e.call(this), this.bundles = {}, this._loader.loadedBundles = {}; }; }), i("locate", function (e) { return function (t) { var r = this, n = !1; if (!(t.name in r.defined))
                for (var a in r.bundles) {
                    for (var o = 0; o < r.bundles[a].length; o++) {
                        var i = r.bundles[a][o];
                        if (i == t.name) {
                            n = !0;
                            break;
                        }
                        if (i.indexOf("*") != -1) {
                            var s = i.split("*");
                            if (2 != s.length) {
                                r.bundles[a].splice(o--, 1);
                                continue;
                            }
                            if (t.name.substring(0, s[0].length) == s[0] && t.name.substr(t.name.length - s[1].length, s[1].length) == s[1] && t.name.substr(s[0].length, t.name.length - s[1].length - s[0].length).indexOf("/") == -1) {
                                n = !0;
                                break;
                            }
                        }
                    }
                    if (n)
                        return r.import(a).then(function () { return e.call(r, t); });
                } return e.call(r, t); }; }); }(), function () { s(function (e) { return function () { e.call(this), this.depCache = {}; }; }), i("locate", function (e) { return function (t) { var r = this, n = r.depCache[t.name]; if (n)
                for (var a = 0; a < n.length; a++)
                    r.import(n[a], t.name); return e.call(r, t); }; }); }(), X = new a, e.SystemJS = X, X.version = "0.19.40 Standard", "object" == typeof module && module.exports && "object" == typeof exports && (module.exports = X), e.System = X;
        }("undefined" != typeof self ? self : global);
    }
    var t = "undefined" == typeof Promise;
    if ("undefined" != typeof document) {
        var r = document.getElementsByTagName("script");
        if ($__curScript = r[r.length - 1], document.currentScript && ($__curScript.defer || $__curScript.async) && ($__curScript = document.currentScript), $__curScript.src || ($__curScript = void 0), t) {
            var n = $__curScript.src, a = n.substr(0, n.lastIndexOf("/") + 1);
            window.systemJSBootstrap = e, document.write('<script type="text/javascript" src="' + a + 'system-polyfills.js"></script>');
        }
        else
            e();
    }
    else if ("undefined" != typeof importScripts) {
        var a = "";
        try {
            throw new Error("_");
        }
        catch (e) {
            e.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/, function (e, t) { $__curScript = { src: t }, a = t.replace(/\/[^\/]*$/, "/"); });
        }
        t && importScripts(a + "system-polyfills.js"), e();
    }
    else
        $__curScript = "undefined" != typeof __filename ? { src: __filename } : null, e();
}();
//# sourceMappingURL=system.js.map
var fabric = fabric || { version: "1.6.6" };
"undefined" != typeof exports && (exports.fabric = fabric), "undefined" != typeof document && "undefined" != typeof window ? (fabric.document = document, fabric.window = window, window.fabric = fabric) : (fabric.document = require("jsdom").jsdom("<!DOCTYPE html><html><head></head><body></body></html>"), fabric.document.createWindow ? fabric.window = fabric.document.createWindow() : fabric.window = fabric.document.parentWindow), fabric.isTouchSupported = "ontouchstart" in fabric.document.documentElement, fabric.isLikelyNode = "undefined" != typeof Buffer && "undefined" == typeof window, fabric.SHARED_ATTRIBUTES = ["display", "transform", "fill", "fill-opacity", "fill-rule", "opacity", "stroke", "stroke-dasharray", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "id"], fabric.DPI = 96, fabric.reNum = "(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)", fabric.fontPaths = {}, fabric.charWidthsCache = {}, fabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1, function () { function t(t, e) { if (this.__eventListeners[t]) {
    var i = this.__eventListeners[t];
    e ? i[i.indexOf(e)] = !1 : fabric.util.array.fill(i, !1);
} } function e(t, e) { if (this.__eventListeners || (this.__eventListeners = {}), 1 === arguments.length)
    for (var i in t)
        this.on(i, t[i]);
else
    this.__eventListeners[t] || (this.__eventListeners[t] = []), this.__eventListeners[t].push(e); return this; } function i(e, i) { if (this.__eventListeners) {
    if (0 === arguments.length)
        for (e in this.__eventListeners)
            t.call(this, e);
    else if (1 === arguments.length && "object" == typeof arguments[0])
        for (var r in e)
            t.call(this, r, e[r]);
    else
        t.call(this, e, i);
    return this;
} } function r(t, e) { if (this.__eventListeners) {
    var i = this.__eventListeners[t];
    if (i) {
        for (var r = 0, n = i.length; r < n; r++)
            i[r] && i[r].call(this, e || {});
        return this.__eventListeners[t] = i.filter(function (t) { return t !== !1; }), this;
    }
} } fabric.Observable = { observe: e, stopObserving: i, fire: r, on: e, off: i, trigger: r }; }(), fabric.Collection = { _objects: [], add: function () { if (this._objects.push.apply(this._objects, arguments), this._onObjectAdded)
        for (var t = 0, e = arguments.length; t < e; t++)
            this._onObjectAdded(arguments[t]); return this.renderOnAddRemove && this.renderAll(), this; }, insertAt: function (t, e, i) { var r = this.getObjects(); return i ? r[e] = t : r.splice(e, 0, t), this._onObjectAdded && this._onObjectAdded(t), this.renderOnAddRemove && this.renderAll(), this; }, remove: function () { for (var t, e = this.getObjects(), i = !1, r = 0, n = arguments.length; r < n; r++)
        t = e.indexOf(arguments[r]), t !== -1 && (i = !0, e.splice(t, 1), this._onObjectRemoved && this._onObjectRemoved(arguments[r])); return this.renderOnAddRemove && i && this.renderAll(), this; }, forEachObject: function (t, e) { for (var i = this.getObjects(), r = 0, n = i.length; r < n; r++)
        t.call(e, i[r], r, i); return this; }, getObjects: function (t) { return "undefined" == typeof t ? this._objects : this._objects.filter(function (e) { return e.type === t; }); }, item: function (t) { return this.getObjects()[t]; }, isEmpty: function () { return 0 === this.getObjects().length; }, size: function () { return this.getObjects().length; }, contains: function (t) { return this.getObjects().indexOf(t) > -1; }, complexity: function () { return this.getObjects().reduce(function (t, e) { return t += e.complexity ? e.complexity() : 0; }, 0); } }, function (t) { var e = Math.sqrt, i = Math.atan2, r = Math.pow, n = Math.abs, s = Math.PI / 180; fabric.util = { removeFromArray: function (t, e) { var i = t.indexOf(e); return i !== -1 && t.splice(i, 1), t; }, getRandomInt: function (t, e) { return Math.floor(Math.random() * (e - t + 1)) + t; }, degreesToRadians: function (t) { return t * s; }, radiansToDegrees: function (t) { return t / s; }, rotatePoint: function (t, e, i) { t.subtractEquals(e); var r = fabric.util.rotateVector(t, i); return new fabric.Point(r.x, r.y).addEquals(e); }, rotateVector: function (t, e) { var i = Math.sin(e), r = Math.cos(e), n = t.x * r - t.y * i, s = t.x * i + t.y * r; return { x: n, y: s }; }, transformPoint: function (t, e, i) { return i ? new fabric.Point(e[0] * t.x + e[2] * t.y, e[1] * t.x + e[3] * t.y) : new fabric.Point(e[0] * t.x + e[2] * t.y + e[4], e[1] * t.x + e[3] * t.y + e[5]); }, makeBoundingBoxFromPoints: function (t) { var e = [t[0].x, t[1].x, t[2].x, t[3].x], i = fabric.util.array.min(e), r = fabric.util.array.max(e), n = Math.abs(i - r), s = [t[0].y, t[1].y, t[2].y, t[3].y], o = fabric.util.array.min(s), a = fabric.util.array.max(s), h = Math.abs(o - a); return { left: i, top: o, width: n, height: h }; }, invertTransform: function (t) { var e = 1 / (t[0] * t[3] - t[1] * t[2]), i = [e * t[3], -e * t[1], -e * t[2], e * t[0]], r = fabric.util.transformPoint({ x: t[4], y: t[5] }, i, !0); return i[4] = -r.x, i[5] = -r.y, i; }, toFixed: function (t, e) { return parseFloat(Number(t).toFixed(e)); }, parseUnit: function (t, e) { var i = /\D{0,2}$/.exec(t), r = parseFloat(t); switch (e || (e = fabric.Text.DEFAULT_SVG_FONT_SIZE), i[0]) {
        case "mm": return r * fabric.DPI / 25.4;
        case "cm": return r * fabric.DPI / 2.54;
        case "in": return r * fabric.DPI;
        case "pt": return r * fabric.DPI / 72;
        case "pc": return r * fabric.DPI / 72 * 12;
        case "em": return r * e;
        default: return r;
    } }, falseFunction: function () { return !1; }, getKlass: function (t, e) { return t = fabric.util.string.camelize(t.charAt(0).toUpperCase() + t.slice(1)), fabric.util.resolveNamespace(e)[t]; }, resolveNamespace: function (e) { if (!e)
        return fabric; var i, r = e.split("."), n = r.length, s = t || fabric.window; for (i = 0; i < n; ++i)
        s = s[r[i]]; return s; }, loadImage: function (t, e, i, r) { if (!t)
        return void (e && e.call(i, t)); var n = fabric.util.createImage(); n.onload = function () { e && e.call(i, n), n = n.onload = n.onerror = null; }, n.onerror = function () { fabric.log("Error loading " + n.src), e && e.call(i, null, !0), n = n.onload = n.onerror = null; }, 0 !== t.indexOf("data") && r && (n.crossOrigin = r), n.src = t; }, enlivenObjects: function (t, e, i, r) { function n() { ++o === a && e && e(s); } t = t || []; var s = [], o = 0, a = t.length; return a ? void t.forEach(function (t, e) { if (!t || !t.type)
        return void n(); var o = fabric.util.getKlass(t.type, i); o.async ? o.fromObject(t, function (i, o) { o || (s[e] = i, r && r(t, s[e])), n(); }) : (s[e] = o.fromObject(t), r && r(t, s[e]), n()); }) : void (e && e(s)); }, groupSVGElements: function (t, e, i) { var r; return r = new fabric.PathGroup(t, e), "undefined" != typeof i && r.setSourcePath(i), r; }, populateWithProperties: function (t, e, i) { if (i && "[object Array]" === Object.prototype.toString.call(i))
        for (var r = 0, n = i.length; r < n; r++)
            i[r] in t && (e[i[r]] = t[i[r]]); }, drawDashedLine: function (t, r, n, s, o, a) { var h = s - r, c = o - n, l = e(h * h + c * c), u = i(c, h), f = a.length, d = 0, g = !0; for (t.save(), t.translate(r, n), t.moveTo(0, 0), t.rotate(u), r = 0; l > r;)
        r += a[d++ % f], r > l && (r = l), t[g ? "lineTo" : "moveTo"](r, 0), g = !g; t.restore(); }, createCanvasElement: function (t) { return t || (t = fabric.document.createElement("canvas")), t.getContext || "undefined" == typeof G_vmlCanvasManager || G_vmlCanvasManager.initElement(t), t; }, createImage: function () { return fabric.isLikelyNode ? new (require("canvas").Image) : fabric.document.createElement("img"); }, createAccessors: function (t) { var e, i, r, n, s, o = t.prototype; for (e = o.stateProperties.length; e--;)
        i = o.stateProperties[e], r = i.charAt(0).toUpperCase() + i.slice(1), n = "set" + r, s = "get" + r, o[s] || (o[s] = function (t) { return new Function('return this.get("' + t + '")'); }(i)), o[n] || (o[n] = function (t) { return new Function("value", 'return this.set("' + t + '", value)'); }(i)); }, clipContext: function (t, e) { e.save(), e.beginPath(), t.clipTo(e), e.clip(); }, multiplyTransformMatrices: function (t, e, i) { return [t[0] * e[0] + t[2] * e[1], t[1] * e[0] + t[3] * e[1], t[0] * e[2] + t[2] * e[3], t[1] * e[2] + t[3] * e[3], i ? 0 : t[0] * e[4] + t[2] * e[5] + t[4], i ? 0 : t[1] * e[4] + t[3] * e[5] + t[5]]; }, qrDecompose: function (t) { var n = i(t[1], t[0]), o = r(t[0], 2) + r(t[1], 2), a = e(o), h = (t[0] * t[3] - t[2] * t[1]) / a, c = i(t[0] * t[2] + t[1] * t[3], o); return { angle: n / s, scaleX: a, scaleY: h, skewX: c / s, skewY: 0, translateX: t[4], translateY: t[5] }; }, customTransformMatrix: function (t, e, i) { var r = [1, 0, n(Math.tan(i * s)), 1], o = [n(t), 0, 0, n(e)]; return fabric.util.multiplyTransformMatrices(o, r, !0); }, resetObjectTransform: function (t) { t.scaleX = 1, t.scaleY = 1, t.skewX = 0, t.skewY = 0, t.flipX = !1, t.flipY = !1, t.setAngle(0); }, getFunctionBody: function (t) { return (String(t).match(/function[^{]*\{([\s\S]*)\}/) || {})[1]; }, isTransparent: function (t, e, i, r) { r > 0 && (e > r ? e -= r : e = 0, i > r ? i -= r : i = 0); var n, s, o = !0, a = t.getImageData(e, i, 2 * r || 1, 2 * r || 1), h = a.data.length; for (n = 3; n < h && (s = a.data[n], o = s <= 0, o !== !1); n += 4)
        ; return a = null, o; }, parsePreserveAspectRatioAttribute: function (t) { var e, i = "meet", r = "Mid", n = "Mid", s = t.split(" "); return s && s.length && (i = s.pop(), "meet" !== i && "slice" !== i ? (e = i, i = "meet") : s.length && (e = s.pop())), r = "none" !== e ? e.slice(1, 4) : "none", n = "none" !== e ? e.slice(5, 8) : "none", { meetOrSlice: i, alignX: r, alignY: n }; }, clearFabricFontCache: function (t) { t ? fabric.charWidthsCache[t] && delete fabric.charWidthsCache[t] : fabric.charWidthsCache = {}; } }; }("undefined" != typeof exports ? exports : this), function () { function t(t, r, s, o, h, c, l) { var u = a.call(arguments); if (n[u])
    return n[u]; var f = Math.PI, d = l * f / 180, g = Math.sin(d), p = Math.cos(d), v = 0, b = 0; s = Math.abs(s), o = Math.abs(o); var m = -p * t * .5 - g * r * .5, y = -p * r * .5 + g * t * .5, _ = s * s, x = o * o, S = y * y, C = m * m, w = _ * x - _ * S - x * C, O = 0; if (w < 0) {
    var T = Math.sqrt(1 - w / (_ * x));
    s *= T, o *= T;
}
else
    O = (h === c ? -1 : 1) * Math.sqrt(w / (_ * S + x * C)); var k = O * s * y / o, j = -O * o * m / s, M = p * k - g * j + .5 * t, A = g * k + p * j + .5 * r, P = i(1, 0, (m - k) / s, (y - j) / o), I = i((m - k) / s, (y - j) / o, (-m - k) / s, (-y - j) / o); 0 === c && I > 0 ? I -= 2 * f : 1 === c && I < 0 && (I += 2 * f); for (var D = Math.ceil(Math.abs(I / f * 2)), E = [], L = I / D, R = 8 / 3 * Math.sin(L / 4) * Math.sin(L / 4) / Math.sin(L / 2), F = P + L, B = 0; B < D; B++)
    E[B] = e(P, F, p, g, s, o, M, A, R, v, b), v = E[B][4], b = E[B][5], P = F, F += L; return n[u] = E, E; } function e(t, e, i, r, n, o, h, c, l, u, f) { var d = a.call(arguments); if (s[d])
    return s[d]; var g = Math.cos(t), p = Math.sin(t), v = Math.cos(e), b = Math.sin(e), m = i * n * v - r * o * b + h, y = r * n * v + i * o * b + c, _ = u + l * (-i * n * p - r * o * g), x = f + l * (-r * n * p + i * o * g), S = m + l * (i * n * b + r * o * v), C = y + l * (r * n * b - i * o * v); return s[d] = [_, x, S, C, m, y], s[d]; } function i(t, e, i, r) { var n = Math.atan2(e, t), s = Math.atan2(r, i); return s >= n ? s - n : 2 * Math.PI - (n - s); } function r(t, e, i, r, n, s, h, c) { var l = a.call(arguments); if (o[l])
    return o[l]; var u, f, d, g, p, v, b, m, y = Math.sqrt, _ = Math.min, x = Math.max, S = Math.abs, C = [], w = [[], []]; f = 6 * t - 12 * i + 6 * n, u = -3 * t + 9 * i - 9 * n + 3 * h, d = 3 * i - 3 * t; for (var O = 0; O < 2; ++O)
    if (O > 0 && (f = 6 * e - 12 * r + 6 * s, u = -3 * e + 9 * r - 9 * s + 3 * c, d = 3 * r - 3 * e), S(u) < 1e-12) {
        if (S(f) < 1e-12)
            continue;
        g = -d / f, 0 < g && g < 1 && C.push(g);
    }
    else
        b = f * f - 4 * d * u, b < 0 || (m = y(b), p = (-f + m) / (2 * u), 0 < p && p < 1 && C.push(p), v = (-f - m) / (2 * u), 0 < v && v < 1 && C.push(v)); for (var T, k, j, M = C.length, A = M; M--;)
    g = C[M], j = 1 - g, T = j * j * j * t + 3 * j * j * g * i + 3 * j * g * g * n + g * g * g * h, w[0][M] = T, k = j * j * j * e + 3 * j * j * g * r + 3 * j * g * g * s + g * g * g * c, w[1][M] = k; w[0][A] = t, w[1][A] = e, w[0][A + 1] = h, w[1][A + 1] = c; var P = [{ x: _.apply(null, w[0]), y: _.apply(null, w[1]) }, { x: x.apply(null, w[0]), y: x.apply(null, w[1]) }]; return o[l] = P, P; } var n = {}, s = {}, o = {}, a = Array.prototype.join; fabric.util.drawArc = function (e, i, r, n) { for (var s = n[0], o = n[1], a = n[2], h = n[3], c = n[4], l = n[5], u = n[6], f = [[], [], [], []], d = t(l - i, u - r, s, o, h, c, a), g = 0, p = d.length; g < p; g++)
    f[g][0] = d[g][0] + i, f[g][1] = d[g][1] + r, f[g][2] = d[g][2] + i, f[g][3] = d[g][3] + r, f[g][4] = d[g][4] + i, f[g][5] = d[g][5] + r, e.bezierCurveTo.apply(e, f[g]); }, fabric.util.getBoundsOfArc = function (e, i, n, s, o, a, h, c, l) { for (var u, f = 0, d = 0, g = [], p = t(c - e, l - i, n, s, a, h, o), v = 0, b = p.length; v < b; v++)
    u = r(f, d, p[v][0], p[v][1], p[v][2], p[v][3], p[v][4], p[v][5]), g.push({ x: u[0].x + e, y: u[0].y + i }), g.push({ x: u[1].x + e, y: u[1].y + i }), f = p[v][4], d = p[v][5]; return g; }, fabric.util.getBoundsOfCurve = r; }(), function () { function t(t, e) { for (var i = s.call(arguments, 2), r = [], n = 0, o = t.length; n < o; n++)
    r[n] = i.length ? t[n][e].apply(t[n], i) : t[n][e].call(t[n]); return r; } function e(t, e) { return n(t, e, function (t, e) { return t >= e; }); } function i(t, e) { return n(t, e, function (t, e) { return t < e; }); } function r(t, e) { for (var i = t.length; i--;)
    t[i] = e; return t; } function n(t, e, i) { if (t && 0 !== t.length) {
    var r = t.length - 1, n = e ? t[r][e] : t[r];
    if (e)
        for (; r--;)
            i(t[r][e], n) && (n = t[r][e]);
    else
        for (; r--;)
            i(t[r], n) && (n = t[r]);
    return n;
} } var s = Array.prototype.slice; Array.prototype.indexOf || (Array.prototype.indexOf = function (t) { if (void 0 === this || null === this)
    throw new TypeError; var e = Object(this), i = e.length >>> 0; if (0 === i)
    return -1; var r = 0; if (arguments.length > 0 && (r = Number(arguments[1]), r !== r ? r = 0 : 0 !== r && r !== Number.POSITIVE_INFINITY && r !== Number.NEGATIVE_INFINITY && (r = (r > 0 || -1) * Math.floor(Math.abs(r)))), r >= i)
    return -1; for (var n = r >= 0 ? r : Math.max(i - Math.abs(r), 0); n < i; n++)
    if (n in e && e[n] === t)
        return n; return -1; }), Array.prototype.forEach || (Array.prototype.forEach = function (t, e) { for (var i = 0, r = this.length >>> 0; i < r; i++)
    i in this && t.call(e, this[i], i, this); }), Array.prototype.map || (Array.prototype.map = function (t, e) { for (var i = [], r = 0, n = this.length >>> 0; r < n; r++)
    r in this && (i[r] = t.call(e, this[r], r, this)); return i; }), Array.prototype.every || (Array.prototype.every = function (t, e) { for (var i = 0, r = this.length >>> 0; i < r; i++)
    if (i in this && !t.call(e, this[i], i, this))
        return !1; return !0; }), Array.prototype.some || (Array.prototype.some = function (t, e) { for (var i = 0, r = this.length >>> 0; i < r; i++)
    if (i in this && t.call(e, this[i], i, this))
        return !0; return !1; }), Array.prototype.filter || (Array.prototype.filter = function (t, e) { for (var i, r = [], n = 0, s = this.length >>> 0; n < s; n++)
    n in this && (i = this[n], t.call(e, i, n, this) && r.push(i)); return r; }), Array.prototype.reduce || (Array.prototype.reduce = function (t) { var e, i = this.length >>> 0, r = 0; if (arguments.length > 1)
    e = arguments[1];
else
    for (;;) {
        if (r in this) {
            e = this[r++];
            break;
        }
        if (++r >= i)
            throw new TypeError;
    } for (; r < i; r++)
    r in this && (e = t.call(null, e, this[r], r, this)); return e; }), fabric.util.array = { fill: r, invoke: t, min: i, max: e }; }(), function () { function t(t, i, r) { if (r)
    if (!fabric.isLikelyNode && i instanceof Element)
        t = i;
    else if (i instanceof Array)
        t = i.map(function (t) { return e(t, r); });
    else if (i instanceof Object)
        for (var n in i)
            t[n] = e(i[n], r);
    else
        t = i;
else
    for (var n in i)
        t[n] = i[n]; return t; } function e(e, i) { return t({}, e, i); } fabric.util.object = { extend: t, clone: e }; }(), function () { function t(t) { return t.replace(/-+(.)?/g, function (t, e) { return e ? e.toUpperCase() : ""; }); } function e(t, e) { return t.charAt(0).toUpperCase() + (e ? t.slice(1) : t.slice(1).toLowerCase()); } function i(t) { return t.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;"); } String.prototype.trim || (String.prototype.trim = function () { return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, ""); }), fabric.util.string = { camelize: t, capitalize: e, escapeXml: i }; }(), function () { var t = Array.prototype.slice, e = Function.prototype.apply, i = function () { }; Function.prototype.bind || (Function.prototype.bind = function (r) { var n, s = this, o = t.call(arguments, 1); return n = o.length ? function () { return e.call(s, this instanceof i ? this : r, o.concat(t.call(arguments))); } : function () { return e.call(s, this instanceof i ? this : r, arguments); }, i.prototype = this.prototype, n.prototype = new i, n; }); }(), function () { function t() { } function e(t) { var e = this.constructor.superclass.prototype[t]; return arguments.length > 1 ? e.apply(this, r.call(arguments, 1)) : e.call(this); } function i() { function i() { this.initialize.apply(this, arguments); } var s = null, a = r.call(arguments, 0); "function" == typeof a[0] && (s = a.shift()), i.superclass = s, i.subclasses = [], s && (t.prototype = s.prototype, i.prototype = new t, s.subclasses.push(i)); for (var h = 0, c = a.length; h < c; h++)
    o(i, a[h], s); return i.prototype.initialize || (i.prototype.initialize = n), i.prototype.constructor = i, i.prototype.callSuper = e, i; } var r = Array.prototype.slice, n = function () { }, s = function () { for (var t in { toString: 1 })
    if ("toString" === t)
        return !1; return !0; }(), o = function (t, e, i) { for (var r in e)
    r in t.prototype && "function" == typeof t.prototype[r] && (e[r] + "").indexOf("callSuper") > -1 ? t.prototype[r] = function (t) { return function () { var r = this.constructor.superclass; this.constructor.superclass = i; var n = e[t].apply(this, arguments); if (this.constructor.superclass = r, "initialize" !== t)
        return n; }; }(r) : t.prototype[r] = e[r], s && (e.toString !== Object.prototype.toString && (t.prototype.toString = e.toString), e.valueOf !== Object.prototype.valueOf && (t.prototype.valueOf = e.valueOf)); }; fabric.util.createClass = i; }(), function () { function t(t) { var e, i, r = Array.prototype.slice.call(arguments, 1), n = r.length; for (i = 0; i < n; i++)
    if (e = typeof t[r[i]], !/^(?:function|object|unknown)$/.test(e))
        return !1; return !0; } function e(t, e) { return { handler: e, wrappedHandler: i(t, e) }; } function i(t, e) { return function (i) { e.call(o(t), i || fabric.window.event); }; } function r(t, e) { return function (i) { if (p[t] && p[t][e])
    for (var r = p[t][e], n = 0, s = r.length; n < s; n++)
        r[n].call(this, i || fabric.window.event); }; } function n(t) { t || (t = fabric.window.event); var e = t.target || (typeof t.srcElement !== h ? t.srcElement : null), i = fabric.util.getScrollLeftTop(e); return { x: v(t) + i.left, y: b(t) + i.top }; } function s(t, e, i) { var r = "touchend" === t.type ? "changedTouches" : "touches"; return t[r] && t[r][0] ? t[r][0][e] - (t[r][0][e] - t[r][0][i]) || t[i] : t[i]; } var o, a, h = "unknown", c = function () { var t = 0; return function (e) { return e.__uniqueID || (e.__uniqueID = "uniqueID__" + t++); }; }(); !function () { var t = {}; o = function (e) { return t[e]; }, a = function (e, i) { t[e] = i; }; }(); var l, u, f = t(fabric.document.documentElement, "addEventListener", "removeEventListener") && t(fabric.window, "addEventListener", "removeEventListener"), d = t(fabric.document.documentElement, "attachEvent", "detachEvent") && t(fabric.window, "attachEvent", "detachEvent"), g = {}, p = {}; f ? (l = function (t, e, i) { t.addEventListener(e, i, !1); }, u = function (t, e, i) { t.removeEventListener(e, i, !1); }) : d ? (l = function (t, i, r) { var n = c(t); a(n, t), g[n] || (g[n] = {}), g[n][i] || (g[n][i] = []); var s = e(n, r); g[n][i].push(s), t.attachEvent("on" + i, s.wrappedHandler); }, u = function (t, e, i) { var r, n = c(t); if (g[n] && g[n][e])
    for (var s = 0, o = g[n][e].length; s < o; s++)
        r = g[n][e][s], r && r.handler === i && (t.detachEvent("on" + e, r.wrappedHandler), g[n][e][s] = null); }) : (l = function (t, e, i) { var n = c(t); if (p[n] || (p[n] = {}), !p[n][e]) {
    p[n][e] = [];
    var s = t["on" + e];
    s && p[n][e].push(s), t["on" + e] = r(n, e);
} p[n][e].push(i); }, u = function (t, e, i) { var r = c(t); if (p[r] && p[r][e])
    for (var n = p[r][e], s = 0, o = n.length; s < o; s++)
        n[s] === i && n.splice(s, 1); }), fabric.util.addListener = l, fabric.util.removeListener = u; var v = function (t) { return typeof t.clientX !== h ? t.clientX : 0; }, b = function (t) { return typeof t.clientY !== h ? t.clientY : 0; }; fabric.isTouchSupported && (v = function (t) { return s(t, "pageX", "clientX"); }, b = function (t) { return s(t, "pageY", "clientY"); }), fabric.util.getPointer = n, fabric.util.object.extend(fabric.util, fabric.Observable); }(), function () { function t(t, e) { var i = t.style; if (!i)
    return t; if ("string" == typeof e)
    return t.style.cssText += ";" + e, e.indexOf("opacity") > -1 ? s(t, e.match(/opacity:\s*(\d?\.?\d*)/)[1]) : t; for (var r in e)
    if ("opacity" === r)
        s(t, e[r]);
    else {
        var n = "float" === r || "cssFloat" === r ? "undefined" == typeof i.styleFloat ? "cssFloat" : "styleFloat" : r;
        i[n] = e[r];
    } return t; } var e = fabric.document.createElement("div"), i = "string" == typeof e.style.opacity, r = "string" == typeof e.style.filter, n = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/, s = function (t) { return t; }; i ? s = function (t, e) { return t.style.opacity = e, t; } : r && (s = function (t, e) { var i = t.style; return t.currentStyle && !t.currentStyle.hasLayout && (i.zoom = 1), n.test(i.filter) ? (e = e >= .9999 ? "" : "alpha(opacity=" + 100 * e + ")", i.filter = i.filter.replace(n, e)) : i.filter += " alpha(opacity=" + 100 * e + ")", t; }), fabric.util.setStyle = t; }(), function () { function t(t) { return "string" == typeof t ? fabric.document.getElementById(t) : t; } function e(t, e) { var i = fabric.document.createElement(t); for (var r in e)
    "class" === r ? i.className = e[r] : "for" === r ? i.htmlFor = e[r] : i.setAttribute(r, e[r]); return i; } function i(t, e) { t && (" " + t.className + " ").indexOf(" " + e + " ") === -1 && (t.className += (t.className ? " " : "") + e); } function r(t, i, r) { return "string" == typeof i && (i = e(i, r)), t.parentNode && t.parentNode.replaceChild(i, t), i.appendChild(t), i; } function n(t) { for (var e = 0, i = 0, r = fabric.document.documentElement, n = fabric.document.body || { scrollLeft: 0, scrollTop: 0 }; t && (t.parentNode || t.host) && (t = t.parentNode || t.host, t === fabric.document ? (e = n.scrollLeft || r.scrollLeft || 0, i = n.scrollTop || r.scrollTop || 0) : (e += t.scrollLeft || 0, i += t.scrollTop || 0), 1 !== t.nodeType || "fixed" !== fabric.util.getElementStyle(t, "position"));)
    ; return { left: e, top: i }; } function s(t) { var e, i, r = t && t.ownerDocument, s = { left: 0, top: 0 }, o = { left: 0, top: 0 }, a = { borderLeftWidth: "left", borderTopWidth: "top", paddingLeft: "left", paddingTop: "top" }; if (!r)
    return o; for (var h in a)
    o[a[h]] += parseInt(c(t, h), 10) || 0; return e = r.documentElement, "undefined" != typeof t.getBoundingClientRect && (s = t.getBoundingClientRect()), i = n(t), { left: s.left + i.left - (e.clientLeft || 0) + o.left, top: s.top + i.top - (e.clientTop || 0) + o.top }; } var o, a = Array.prototype.slice, h = function (t) { return a.call(t, 0); }; try {
    o = h(fabric.document.childNodes) instanceof Array;
}
catch (t) { } o || (h = function (t) { for (var e = new Array(t.length), i = t.length; i--;)
    e[i] = t[i]; return e; }); var c; c = fabric.document.defaultView && fabric.document.defaultView.getComputedStyle ? function (t, e) { var i = fabric.document.defaultView.getComputedStyle(t, null); return i ? i[e] : void 0; } : function (t, e) { var i = t.style[e]; return !i && t.currentStyle && (i = t.currentStyle[e]), i; }, function () { function t(t) { return "undefined" != typeof t.onselectstart && (t.onselectstart = fabric.util.falseFunction), r ? t.style[r] = "none" : "string" == typeof t.unselectable && (t.unselectable = "on"), t; } function e(t) { return "undefined" != typeof t.onselectstart && (t.onselectstart = null), r ? t.style[r] = "" : "string" == typeof t.unselectable && (t.unselectable = ""), t; } var i = fabric.document.documentElement.style, r = "userSelect" in i ? "userSelect" : "MozUserSelect" in i ? "MozUserSelect" : "WebkitUserSelect" in i ? "WebkitUserSelect" : "KhtmlUserSelect" in i ? "KhtmlUserSelect" : ""; fabric.util.makeElementUnselectable = t, fabric.util.makeElementSelectable = e; }(), function () { function t(t, e) { var i = fabric.document.getElementsByTagName("head")[0], r = fabric.document.createElement("script"), n = !0; r.onload = r.onreadystatechange = function (t) { if (n) {
    if ("string" == typeof this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState)
        return;
    n = !1, e(t || fabric.window.event), r = r.onload = r.onreadystatechange = null;
} }, r.src = t, i.appendChild(r); } fabric.util.getScript = t; }(), fabric.util.getById = t, fabric.util.toArray = h, fabric.util.makeElement = e, fabric.util.addClass = i, fabric.util.wrapElement = r, fabric.util.getScrollLeftTop = n, fabric.util.getElementOffset = s, fabric.util.getElementStyle = c; }(), function () { function t(t, e) { return t + (/\?/.test(t) ? "&" : "?") + e; } function e() { } function i(i, n) { n || (n = {}); var s = n.method ? n.method.toUpperCase() : "GET", o = n.onComplete || function () { }, a = r(), h = n.body || n.parameters; return a.onreadystatechange = function () { 4 === a.readyState && (o(a), a.onreadystatechange = e); }, "GET" === s && (h = null, "string" == typeof n.parameters && (i = t(i, n.parameters))), a.open(s, i, !0), "POST" !== s && "PUT" !== s || a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), a.send(h), a; } var r = function () { for (var t = [function () { return new ActiveXObject("Microsoft.XMLHTTP"); }, function () { return new ActiveXObject("Msxml2.XMLHTTP"); }, function () { return new ActiveXObject("Msxml2.XMLHTTP.3.0"); }, function () { return new XMLHttpRequest; }], e = t.length; e--;)
    try {
        var i = t[e]();
        if (i)
            return t[e];
    }
    catch (t) { } }(); fabric.util.request = i; }(), fabric.log = function () { }, fabric.warn = function () { }, "undefined" != typeof console && ["log", "warn"].forEach(function (t) { "undefined" != typeof console[t] && "function" == typeof console[t].apply && (fabric[t] = function () { return console[t].apply(console, arguments); }); }), function () { function t(t) { e(function (i) { t || (t = {}); var r, n = i || +new Date, s = t.duration || 500, o = n + s, a = t.onChange || function () { }, h = t.abort || function () { return !1; }, c = t.easing || function (t, e, i, r) { return -i * Math.cos(t / r * (Math.PI / 2)) + i + e; }, l = "startValue" in t ? t.startValue : 0, u = "endValue" in t ? t.endValue : 100, f = t.byValue || u - l; t.onStart && t.onStart(), function i(u) { r = u || +new Date; var d = r > o ? s : r - n; return h() ? void (t.onComplete && t.onComplete()) : (a(c(d, l, f, s)), r > o ? void (t.onComplete && t.onComplete()) : void e(i)); }(n); }); } function e() { return i.apply(fabric.window, arguments); } var i = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function (t) { fabric.window.setTimeout(t, 1e3 / 60); }; fabric.util.animate = t, fabric.util.requestAnimFrame = e; }(), function () { function t(t, e, i, r) { return t < Math.abs(e) ? (t = e, r = i / 4) : r = 0 === e && 0 === t ? i / (2 * Math.PI) * Math.asin(1) : i / (2 * Math.PI) * Math.asin(e / t), { a: t, c: e, p: i, s: r }; } function e(t, e, i) { return t.a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * i - t.s) * (2 * Math.PI) / t.p); } function i(t, e, i, r) { return i * ((t = t / r - 1) * t * t + 1) + e; } function r(t, e, i, r) { return t /= r / 2, t < 1 ? i / 2 * t * t * t + e : i / 2 * ((t -= 2) * t * t + 2) + e; } function n(t, e, i, r) { return i * (t /= r) * t * t * t + e; } function s(t, e, i, r) { return -i * ((t = t / r - 1) * t * t * t - 1) + e; } function o(t, e, i, r) { return t /= r / 2, t < 1 ? i / 2 * t * t * t * t + e : -i / 2 * ((t -= 2) * t * t * t - 2) + e; } function a(t, e, i, r) { return i * (t /= r) * t * t * t * t + e; } function h(t, e, i, r) { return i * ((t = t / r - 1) * t * t * t * t + 1) + e; } function c(t, e, i, r) { return t /= r / 2, t < 1 ? i / 2 * t * t * t * t * t + e : i / 2 * ((t -= 2) * t * t * t * t + 2) + e; } function l(t, e, i, r) { return -i * Math.cos(t / r * (Math.PI / 2)) + i + e; } function u(t, e, i, r) { return i * Math.sin(t / r * (Math.PI / 2)) + e; } function f(t, e, i, r) { return -i / 2 * (Math.cos(Math.PI * t / r) - 1) + e; } function d(t, e, i, r) { return 0 === t ? e : i * Math.pow(2, 10 * (t / r - 1)) + e; } function g(t, e, i, r) { return t === r ? e + i : i * (-Math.pow(2, -10 * t / r) + 1) + e; } function p(t, e, i, r) { return 0 === t ? e : t === r ? e + i : (t /= r / 2, t < 1 ? i / 2 * Math.pow(2, 10 * (t - 1)) + e : i / 2 * (-Math.pow(2, -10 * --t) + 2) + e); } function v(t, e, i, r) { return -i * (Math.sqrt(1 - (t /= r) * t) - 1) + e; } function b(t, e, i, r) { return i * Math.sqrt(1 - (t = t / r - 1) * t) + e; } function m(t, e, i, r) { return t /= r / 2, t < 1 ? -i / 2 * (Math.sqrt(1 - t * t) - 1) + e : i / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + e; } function y(i, r, n, s) { var o = 1.70158, a = 0, h = n; if (0 === i)
    return r; if (i /= s, 1 === i)
    return r + n; a || (a = .3 * s); var c = t(h, n, a, o); return -e(c, i, s) + r; } function _(e, i, r, n) { var s = 1.70158, o = 0, a = r; if (0 === e)
    return i; if (e /= n, 1 === e)
    return i + r; o || (o = .3 * n); var h = t(a, r, o, s); return h.a * Math.pow(2, -10 * e) * Math.sin((e * n - h.s) * (2 * Math.PI) / h.p) + h.c + i; } function x(i, r, n, s) { var o = 1.70158, a = 0, h = n; if (0 === i)
    return r; if (i /= s / 2, 2 === i)
    return r + n; a || (a = s * (.3 * 1.5)); var c = t(h, n, a, o); return i < 1 ? -.5 * e(c, i, s) + r : c.a * Math.pow(2, -10 * (i -= 1)) * Math.sin((i * s - c.s) * (2 * Math.PI) / c.p) * .5 + c.c + r; } function S(t, e, i, r, n) { return void 0 === n && (n = 1.70158), i * (t /= r) * t * ((n + 1) * t - n) + e; } function C(t, e, i, r, n) { return void 0 === n && (n = 1.70158), i * ((t = t / r - 1) * t * ((n + 1) * t + n) + 1) + e; } function w(t, e, i, r, n) { return void 0 === n && (n = 1.70158), t /= r / 2, t < 1 ? i / 2 * (t * t * (((n *= 1.525) + 1) * t - n)) + e : i / 2 * ((t -= 2) * t * (((n *= 1.525) + 1) * t + n) + 2) + e; } function O(t, e, i, r) { return i - T(r - t, 0, i, r) + e; } function T(t, e, i, r) { return (t /= r) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e; } function k(t, e, i, r) { return t < r / 2 ? .5 * O(2 * t, 0, i, r) + e : .5 * T(2 * t - r, 0, i, r) + .5 * i + e; } fabric.util.ease = { easeInQuad: function (t, e, i, r) { return i * (t /= r) * t + e; }, easeOutQuad: function (t, e, i, r) { return -i * (t /= r) * (t - 2) + e; }, easeInOutQuad: function (t, e, i, r) { return t /= r / 2, t < 1 ? i / 2 * t * t + e : -i / 2 * (--t * (t - 2) - 1) + e; }, easeInCubic: function (t, e, i, r) { return i * (t /= r) * t * t + e; }, easeOutCubic: i, easeInOutCubic: r, easeInQuart: n, easeOutQuart: s, easeInOutQuart: o, easeInQuint: a, easeOutQuint: h, easeInOutQuint: c, easeInSine: l, easeOutSine: u, easeInOutSine: f, easeInExpo: d, easeOutExpo: g, easeInOutExpo: p, easeInCirc: v, easeOutCirc: b, easeInOutCirc: m, easeInElastic: y, easeOutElastic: _, easeInOutElastic: x, easeInBack: S, easeOutBack: C, easeInOutBack: w, easeInBounce: O, easeOutBounce: T, easeInOutBounce: k }; }(), function (t) {
    "use strict";
    function e(t) { return t in k ? k[t] : t; }
    function i(t, e, i, r) { var n, s = "[object Array]" === Object.prototype.toString.call(e); return "fill" !== t && "stroke" !== t || "none" !== e ? "strokeDashArray" === t ? e = e.replace(/,/g, " ").split(/\s+/).map(function (t) { return parseFloat(t); }) : "transformMatrix" === t ? e = i && i.transformMatrix ? S(i.transformMatrix, v.parseTransformAttribute(e)) : v.parseTransformAttribute(e) : "visible" === t ? (e = "none" !== e && "hidden" !== e, i && i.visible === !1 && (e = !1)) : "originX" === t ? e = "start" === e ? "left" : "end" === e ? "right" : "center" : n = s ? e.map(x) : x(e, r) : e = "", !s && isNaN(n) ? e : n; }
    function r(t) { for (var e in j)
        if ("undefined" != typeof t[j[e]] && "" !== t[e]) {
            if ("undefined" == typeof t[e]) {
                if (!v.Object.prototype[e])
                    continue;
                t[e] = v.Object.prototype[e];
            }
            if (0 !== t[e].indexOf("url(")) {
                var i = new v.Color(t[e]);
                t[e] = i.setAlpha(_(i.getAlpha() * t[j[e]], 2)).toRgba();
            }
        } return t; }
    function n(t, e) { for (var i, r, n = [], s = 0; s < e.length; s++)
        i = e[s], r = t.getElementsByTagName(i), n = n.concat(Array.prototype.slice.call(r)); return n; }
    function s(t, r) { var n, s; t.replace(/;\s*$/, "").split(";").forEach(function (t) { var o = t.split(":"); n = e(o[0].trim().toLowerCase()), s = i(n, o[1].trim()), r[n] = s; }); }
    function o(t, r) { var n, s; for (var o in t)
        "undefined" != typeof t[o] && (n = e(o.toLowerCase()), s = i(n, t[o]), r[n] = s); }
    function a(t, e) { var i = {}; for (var r in v.cssRules[e])
        if (h(t, r.split(" ")))
            for (var n in v.cssRules[e][r])
                i[n] = v.cssRules[e][r][n]; return i; }
    function h(t, e) { var i, r = !0; return i = l(t, e.pop()), i && e.length && (r = c(t, e)), i && r && 0 === e.length; }
    function c(t, e) { for (var i, r = !0; t.parentNode && 1 === t.parentNode.nodeType && e.length;)
        r && (i = e.pop()), t = t.parentNode, r = l(t, i); return 0 === e.length; }
    function l(t, e) { var i, r = t.nodeName, n = t.getAttribute("class"), s = t.getAttribute("id"); if (i = new RegExp("^" + r, "i"), e = e.replace(i, ""), s && e.length && (i = new RegExp("#" + s + "(?![a-zA-Z\\-]+)", "i"), e = e.replace(i, "")), n && e.length) {
        n = n.split(" ");
        for (var o = n.length; o--;)
            i = new RegExp("\\." + n[o] + "(?![a-zA-Z\\-]+)", "i"), e = e.replace(i, "");
    } return 0 === e.length; }
    function u(t, e) { var i; if (t.getElementById && (i = t.getElementById(e)), i)
        return i; var r, n, s = t.getElementsByTagName("*"); for (n = 0; n < s.length; n++)
        if (r = s[n], e === r.getAttribute("id"))
            return r; }
    function f(t) { for (var e = n(t, ["use", "svg:use"]), i = 0; e.length && i < e.length;) {
        var r, s, o, a, h, c = e[i], l = c.getAttribute("xlink:href").substr(1), f = c.getAttribute("x") || 0, g = c.getAttribute("y") || 0, p = u(t, l).cloneNode(!0), v = (p.getAttribute("transform") || "") + " translate(" + f + ", " + g + ")", b = e.length;
        if (d(p), /^svg$/i.test(p.nodeName)) {
            var m = p.ownerDocument.createElement("g");
            for (o = 0, a = p.attributes, h = a.length; o < h; o++)
                s = a.item(o), m.setAttribute(s.nodeName, s.nodeValue);
            for (; p.firstChild;)
                m.appendChild(p.firstChild);
            p = m;
        }
        for (o = 0, a = c.attributes, h = a.length; o < h; o++)
            s = a.item(o), "x" !== s.nodeName && "y" !== s.nodeName && "xlink:href" !== s.nodeName && ("transform" === s.nodeName ? v = s.nodeValue + " " + v : p.setAttribute(s.nodeName, s.nodeValue));
        p.setAttribute("transform", v), p.setAttribute("instantiated_by_use", "1"), p.removeAttribute("id"), r = c.parentNode, r.replaceChild(p, c), e.length === b && i++;
    } }
    function d(t) { var e, i, r, n, s = t.getAttribute("viewBox"), o = 1, a = 1, h = 0, c = 0, l = t.getAttribute("width"), u = t.getAttribute("height"), f = t.getAttribute("x") || 0, d = t.getAttribute("y") || 0, g = t.getAttribute("preserveAspectRatio") || "", p = !s || !w.test(t.nodeName) || !(s = s.match(M)), b = !l || !u || "100%" === l || "100%" === u, m = p && b, y = {}, _ = ""; if (y.width = 0, y.height = 0, y.toBeParsed = m, m)
        return y; if (p)
        return y.width = x(l), y.height = x(u), y; if (h = -parseFloat(s[1]), c = -parseFloat(s[2]), e = parseFloat(s[3]), i = parseFloat(s[4]), b ? (y.width = e, y.height = i) : (y.width = x(l), y.height = x(u), o = y.width / e, a = y.height / i), g = v.util.parsePreserveAspectRatioAttribute(g), "none" !== g.alignX && (a = o = o > a ? a : o), 1 === o && 1 === a && 0 === h && 0 === c && 0 === f && 0 === d)
        return y; if ((f || d) && (_ = " translate(" + x(f) + " " + x(d) + ") "), r = _ + " matrix(" + o + " 0 0 " + a + " " + h * o + " " + c * a + ") ", "svg" === t.nodeName) {
        for (n = t.ownerDocument.createElement("g"); t.firstChild;)
            n.appendChild(t.firstChild);
        t.appendChild(n);
    }
    else
        n = t, r = n.getAttribute("transform") + r; return n.setAttribute("transform", r), y; }
    function g(t) { var e = t.objects, i = t.options; return e = e.map(function (t) { return v[m(t.type)].fromObject(t); }), { objects: e, options: i }; }
    function p(t, e, i) { e[i] && e[i].toSVG && t.push('\t<pattern x="0" y="0" id="', i, 'Pattern" ', 'width="', e[i].source.width, '" height="', e[i].source.height, '" patternUnits="userSpaceOnUse">\n', '\t\t<image x="0" y="0" ', 'width="', e[i].source.width, '" height="', e[i].source.height, '" xlink:href="', e[i].source.src, '"></image>\n\t</pattern>\n'); }
    var v = t.fabric || (t.fabric = {}), b = v.util.object.extend, m = v.util.string.capitalize, y = v.util.object.clone, _ = v.util.toFixed, x = v.util.parseUnit, S = v.util.multiplyTransformMatrices, C = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i, w = /^(symbol|image|marker|pattern|view|svg)$/i, O = /^(?:pattern|defs|symbol|metadata)$/i, T = /^(symbol|g|a|svg)$/i, k = { cx: "left", x: "left", r: "radius", cy: "top", y: "top", display: "visible", visibility: "visible", transform: "transformMatrix", "fill-opacity": "fillOpacity", "fill-rule": "fillRule", "font-family": "fontFamily", "font-size": "fontSize", "font-style": "fontStyle", "font-weight": "fontWeight", "stroke-dasharray": "strokeDashArray", "stroke-linecap": "strokeLineCap", "stroke-linejoin": "strokeLineJoin", "stroke-miterlimit": "strokeMiterLimit", "stroke-opacity": "strokeOpacity", "stroke-width": "strokeWidth", "text-decoration": "textDecoration", "text-anchor": "originX" }, j = { stroke: "strokeOpacity", fill: "fillOpacity" };
    v.cssRules = {}, v.gradientDefs = {}, v.parseTransformAttribute = function () {
        function t(t, e) { var i = e[0], r = 3 === e.length ? e[1] : 0, n = 3 === e.length ? e[2] : 0; t[0] = Math.cos(i), t[1] = Math.sin(i), t[2] = -Math.sin(i), t[3] = Math.cos(i), t[4] = r - (t[0] * r + t[2] * n), t[5] = n - (t[1] * r + t[3] * n); }
        function e(t, e) { var i = e[0], r = 2 === e.length ? e[1] : e[0]; t[0] = i, t[3] = r; }
        function i(t, e) {
            t[2] = Math.tan(v.util.degreesToRadians(e[0]));
        }
        function r(t, e) { t[1] = Math.tan(v.util.degreesToRadians(e[0])); }
        function n(t, e) { t[4] = e[0], 2 === e.length && (t[5] = e[1]); }
        var s = [1, 0, 0, 1, 0, 0], o = v.reNum, a = "(?:\\s+,?\\s*|,\\s*)", h = "(?:(skewX)\\s*\\(\\s*(" + o + ")\\s*\\))", c = "(?:(skewY)\\s*\\(\\s*(" + o + ")\\s*\\))", l = "(?:(rotate)\\s*\\(\\s*(" + o + ")(?:" + a + "(" + o + ")" + a + "(" + o + "))?\\s*\\))", u = "(?:(scale)\\s*\\(\\s*(" + o + ")(?:" + a + "(" + o + "))?\\s*\\))", f = "(?:(translate)\\s*\\(\\s*(" + o + ")(?:" + a + "(" + o + "))?\\s*\\))", d = "(?:(matrix)\\s*\\(\\s*(" + o + ")" + a + "(" + o + ")" + a + "(" + o + ")" + a + "(" + o + ")" + a + "(" + o + ")" + a + "(" + o + ")\\s*\\))", g = "(?:" + d + "|" + f + "|" + u + "|" + l + "|" + h + "|" + c + ")", p = "(?:" + g + "(?:" + a + "*" + g + ")*)", b = "^\\s*(?:" + p + "?)\\s*$", m = new RegExp(b), y = new RegExp(g, "g");
        return function (o) { var a = s.concat(), h = []; if (!o || o && !m.test(o))
            return a; o.replace(y, function (o) { var c = new RegExp(g).exec(o).filter(function (t) { return !!t; }), l = c[1], u = c.slice(2).map(parseFloat); switch (l) {
            case "translate":
                n(a, u);
                break;
            case "rotate":
                u[0] = v.util.degreesToRadians(u[0]), t(a, u);
                break;
            case "scale":
                e(a, u);
                break;
            case "skewX":
                i(a, u);
                break;
            case "skewY":
                r(a, u);
                break;
            case "matrix": a = u;
        } h.push(a.concat()), a = s.concat(); }); for (var c = h[0]; h.length > 1;)
            h.shift(), c = v.util.multiplyTransformMatrices(c, h[0]); return c; };
    }();
    var M = new RegExp("^\\s*(" + v.reNum + "+)\\s*,?\\s*(" + v.reNum + "+)\\s*,?\\s*(" + v.reNum + "+)\\s*,?\\s*(" + v.reNum + "+)\\s*$");
    v.parseSVGDocument = function () { function t(t, e) { for (; t && (t = t.parentNode);)
        if (t.nodeName && e.test(t.nodeName.replace("svg:", "")) && !t.getAttribute("instantiated_by_use"))
            return !0; return !1; } return function (e, i, r) { if (e) {
        f(e);
        var n = new Date, s = v.Object.__uid++, o = d(e), a = v.util.toArray(e.getElementsByTagName("*"));
        if (o.svgUid = s, 0 === a.length && v.isLikelyNode) {
            a = e.selectNodes('//*[name(.)!="svg"]');
            for (var h = [], c = 0, l = a.length; c < l; c++)
                h[c] = a[c];
            a = h;
        }
        var u = a.filter(function (e) { return d(e), C.test(e.nodeName.replace("svg:", "")) && !t(e, O); });
        if (!u || u && !u.length)
            return void (i && i([], {}));
        v.gradientDefs[s] = v.getGradientDefs(e), v.cssRules[s] = v.getCSSRules(e), v.parseElements(u, function (t) { v.documentParsingTime = new Date - n, i && i(t, o); }, y(o), r);
    } }; }();
    var A = { has: function (t, e) { e(!1); }, get: function () { }, set: function () { } }, P = new RegExp("(normal|italic)?\\s*(normal|small-caps)?\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*(" + v.reNum + "(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|" + v.reNum + "))?\\s+(.*)");
    b(v, { parseFontDeclaration: function (t, e) { var i = t.match(P); if (i) {
            var r = i[1], n = i[3], s = i[4], o = i[5], a = i[6];
            r && (e.fontStyle = r), n && (e.fontWeight = isNaN(parseFloat(n)) ? n : parseFloat(n)), s && (e.fontSize = x(s)), a && (e.fontFamily = a), o && (e.lineHeight = "normal" === o ? 1 : o);
        } }, getGradientDefs: function (t) { var e, i, r, s = ["linearGradient", "radialGradient", "svg:linearGradient", "svg:radialGradient"], o = n(t, s), a = 0, h = {}, c = {}; for (a = o.length; a--;)
            e = o[a], r = e.getAttribute("xlink:href"), i = e.getAttribute("id"), r && (c[i] = r.substr(1)), h[i] = e; for (i in c) {
            var l = h[c[i]].cloneNode(!0);
            for (e = h[i]; l.firstChild;)
                e.appendChild(l.firstChild);
        } return h; }, parseAttributes: function (t, n, s) { if (t) {
            var o, h, c = {};
            "undefined" == typeof s && (s = t.getAttribute("svgUid")), t.parentNode && T.test(t.parentNode.nodeName) && (c = v.parseAttributes(t.parentNode, n, s)), h = c && c.fontSize || t.getAttribute("font-size") || v.Text.DEFAULT_SVG_FONT_SIZE;
            var l = n.reduce(function (r, n) { return o = t.getAttribute(n), o && (n = e(n), o = i(n, o, c, h), r[n] = o), r; }, {});
            return l = b(l, b(a(t, s), v.parseStyleAttribute(t))), l.font && v.parseFontDeclaration(l.font, l), r(b(c, l));
        } }, parseElements: function (t, e, i, r) { new v.ElementsParser(t, e, i, r).parse(); }, parseStyleAttribute: function (t) { var e = {}, i = t.getAttribute("style"); return i ? ("string" == typeof i ? s(i, e) : o(i, e), e) : e; }, parsePointsAttribute: function (t) { if (!t)
            return null; t = t.replace(/,/g, " ").trim(), t = t.split(/\s+/); var e, i, r = []; for (e = 0, i = t.length; e < i; e += 2)
            r.push({ x: parseFloat(t[e]), y: parseFloat(t[e + 1]) }); return r; }, getCSSRules: function (t) { for (var r, n = t.getElementsByTagName("style"), s = {}, o = 0, a = n.length; o < a; o++) {
            var h = n[o].textContent || n[o].text;
            h = h.replace(/\/\*[\s\S]*?\*\//g, ""), "" !== h.trim() && (r = h.match(/[^{]*\{[\s\S]*?\}/g), r = r.map(function (t) { return t.trim(); }), r.forEach(function (t) { for (var r = t.match(/([\s\S]*?)\s*\{([^}]*)\}/), n = {}, o = r[2].trim(), a = o.replace(/;$/, "").split(/\s*;\s*/), h = 0, c = a.length; h < c; h++) {
                var l = a[h].split(/\s*:\s*/), u = e(l[0]), f = i(u, l[1], l[0]);
                n[u] = f;
            } t = r[1], t.split(",").forEach(function (t) { t = t.replace(/^svg/i, "").trim(), "" !== t && (s[t] ? v.util.object.extend(s[t], n) : s[t] = v.util.object.clone(n)); }); }));
        } return s; }, loadSVGFromURL: function (t, e, i) { function r(r) { var n = r.responseXML; n && !n.documentElement && v.window.ActiveXObject && r.responseText && (n = new ActiveXObject("Microsoft.XMLDOM"), n.async = "false", n.loadXML(r.responseText.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i, ""))), n && n.documentElement || e && e(null), v.parseSVGDocument(n.documentElement, function (i, r) { A.set(t, { objects: v.util.array.invoke(i, "toObject"), options: r }), e && e(i, r); }, i); } t = t.replace(/^\n\s*/, "").trim(), A.has(t, function (i) { i ? A.get(t, function (t) { var i = g(t); e(i.objects, i.options); }) : new v.util.request(t, { method: "get", onComplete: r }); }); }, loadSVGFromString: function (t, e, i) { t = t.trim(); var r; if ("undefined" != typeof DOMParser) {
            var n = new DOMParser;
            n && n.parseFromString && (r = n.parseFromString(t, "text/xml"));
        }
        else
            v.window.ActiveXObject && (r = new ActiveXObject("Microsoft.XMLDOM"), r.async = "false", r.loadXML(t.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i, ""))); v.parseSVGDocument(r.documentElement, function (t, i) { e(t, i); }, i); }, createSVGFontFacesMarkup: function (t) { for (var e, i, r, n, s, o, a, h = "", c = {}, l = v.fontPaths, u = 0, f = t.length; u < f; u++)
            if (e = t[u], i = e.fontFamily, e.type.indexOf("text") !== -1 && !c[i] && l[i] && (c[i] = !0, e.styles)) {
                r = e.styles;
                for (s in r) {
                    n = r[s];
                    for (a in n)
                        o = n[a], i = o.fontFamily, !c[i] && l[i] && (c[i] = !0);
                }
            } for (var d in c)
            h += ["\t\t@font-face {\n", "\t\t\tfont-family: '", d, "';\n", "\t\t\tsrc: url('", l[d], "');\n", "\t\t}\n"].join(""); return h && (h = ['\t<style type="text/css">', "<![CDATA[\n", h, "]]>", "</style>\n"].join("")), h; }, createSVGRefElementsMarkup: function (t) { var e = []; return p(e, t, "backgroundColor"), p(e, t, "overlayColor"), e.join(""); } });
}("undefined" != typeof exports ? exports : this), fabric.ElementsParser = function (t, e, i, r) { this.elements = t, this.callback = e, this.options = i, this.reviver = r, this.svgUid = i && i.svgUid || 0; }, fabric.ElementsParser.prototype.parse = function () { this.instances = new Array(this.elements.length), this.numElements = this.elements.length, this.createObjects(); }, fabric.ElementsParser.prototype.createObjects = function () { for (var t = 0, e = this.elements.length; t < e; t++)
    this.elements[t].setAttribute("svgUid", this.svgUid), function (t, e) { setTimeout(function () { t.createObject(t.elements[e], e); }, 0); }(this, t); }, fabric.ElementsParser.prototype.createObject = function (t, e) { var i = fabric[fabric.util.string.capitalize(t.tagName.replace("svg:", ""))]; if (i && i.fromElement)
    try {
        this._createObject(i, t, e);
    }
    catch (t) {
        fabric.log(t);
    }
else
    this.checkIfDone(); }, fabric.ElementsParser.prototype._createObject = function (t, e, i) { if (t.async)
    t.fromElement(e, this.createCallback(i, e), this.options);
else {
    var r = t.fromElement(e, this.options);
    this.resolveGradient(r, "fill"), this.resolveGradient(r, "stroke"), this.reviver && this.reviver(e, r), this.instances[i] = r, this.checkIfDone();
} }, fabric.ElementsParser.prototype.createCallback = function (t, e) { var i = this; return function (r) { i.resolveGradient(r, "fill"), i.resolveGradient(r, "stroke"), i.reviver && i.reviver(e, r), i.instances[t] = r, i.checkIfDone(); }; }, fabric.ElementsParser.prototype.resolveGradient = function (t, e) { var i = t.get(e); if (/^url\(/.test(i)) {
    var r = i.slice(5, i.length - 1);
    fabric.gradientDefs[this.svgUid][r] && t.set(e, fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][r], t));
} }, fabric.ElementsParser.prototype.checkIfDone = function () { 0 === --this.numElements && (this.instances = this.instances.filter(function (t) { return null != t; }), this.callback(this.instances)); }, function (t) {
    "use strict";
    function e(t, e) { this.x = t, this.y = e; }
    var i = t.fabric || (t.fabric = {});
    return i.Point ? void i.warn("fabric.Point is already defined") : (i.Point = e, void (e.prototype = { type: "point", constructor: e, add: function (t) { return new e(this.x + t.x, this.y + t.y); }, addEquals: function (t) { return this.x += t.x, this.y += t.y, this; }, scalarAdd: function (t) { return new e(this.x + t, this.y + t); }, scalarAddEquals: function (t) { return this.x += t, this.y += t, this; }, subtract: function (t) { return new e(this.x - t.x, this.y - t.y); }, subtractEquals: function (t) { return this.x -= t.x, this.y -= t.y, this; }, scalarSubtract: function (t) { return new e(this.x - t, this.y - t); }, scalarSubtractEquals: function (t) { return this.x -= t, this.y -= t, this; }, multiply: function (t) { return new e(this.x * t, this.y * t); }, multiplyEquals: function (t) { return this.x *= t, this.y *= t, this; }, divide: function (t) { return new e(this.x / t, this.y / t); }, divideEquals: function (t) { return this.x /= t, this.y /= t, this; }, eq: function (t) { return this.x === t.x && this.y === t.y; }, lt: function (t) { return this.x < t.x && this.y < t.y; }, lte: function (t) { return this.x <= t.x && this.y <= t.y; }, gt: function (t) { return this.x > t.x && this.y > t.y; }, gte: function (t) { return this.x >= t.x && this.y >= t.y; }, lerp: function (t, i) { return "undefined" == typeof i && (i = .5), i = Math.max(Math.min(1, i), 0), new e(this.x + (t.x - this.x) * i, this.y + (t.y - this.y) * i); }, distanceFrom: function (t) { var e = this.x - t.x, i = this.y - t.y; return Math.sqrt(e * e + i * i); }, midPointFrom: function (t) { return this.lerp(t); }, min: function (t) { return new e(Math.min(this.x, t.x), Math.min(this.y, t.y)); }, max: function (t) { return new e(Math.max(this.x, t.x), Math.max(this.y, t.y)); }, toString: function () { return this.x + "," + this.y; }, setXY: function (t, e) { return this.x = t, this.y = e, this; }, setX: function (t) { return this.x = t, this; }, setY: function (t) { return this.y = t, this; }, setFromPoint: function (t) { return this.x = t.x, this.y = t.y, this; }, swap: function (t) { var e = this.x, i = this.y; this.x = t.x, this.y = t.y, t.x = e, t.y = i; }, clone: function () { return new e(this.x, this.y); } }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    function e(t) { this.status = t, this.points = []; }
    var i = t.fabric || (t.fabric = {});
    return i.Intersection ? void i.warn("fabric.Intersection is already defined") : (i.Intersection = e, i.Intersection.prototype = { constructor: e, appendPoint: function (t) { return this.points.push(t), this; }, appendPoints: function (t) { return this.points = this.points.concat(t), this; } }, i.Intersection.intersectLineLine = function (t, r, n, s) { var o, a = (s.x - n.x) * (t.y - n.y) - (s.y - n.y) * (t.x - n.x), h = (r.x - t.x) * (t.y - n.y) - (r.y - t.y) * (t.x - n.x), c = (s.y - n.y) * (r.x - t.x) - (s.x - n.x) * (r.y - t.y); if (0 !== c) {
        var l = a / c, u = h / c;
        0 <= l && l <= 1 && 0 <= u && u <= 1 ? (o = new e("Intersection"), o.appendPoint(new i.Point(t.x + l * (r.x - t.x), t.y + l * (r.y - t.y)))) : o = new e;
    }
    else
        o = new e(0 === a || 0 === h ? "Coincident" : "Parallel"); return o; }, i.Intersection.intersectLinePolygon = function (t, i, r) { for (var n, s, o, a = new e, h = r.length, c = 0; c < h; c++)
        n = r[c], s = r[(c + 1) % h], o = e.intersectLineLine(t, i, n, s), a.appendPoints(o.points); return a.points.length > 0 && (a.status = "Intersection"), a; }, i.Intersection.intersectPolygonPolygon = function (t, i) { for (var r = new e, n = t.length, s = 0; s < n; s++) {
        var o = t[s], a = t[(s + 1) % n], h = e.intersectLinePolygon(o, a, i);
        r.appendPoints(h.points);
    } return r.points.length > 0 && (r.status = "Intersection"), r; }, void (i.Intersection.intersectPolygonRectangle = function (t, r, n) { var s = r.min(n), o = r.max(n), a = new i.Point(o.x, s.y), h = new i.Point(s.x, o.y), c = e.intersectLinePolygon(s, a, t), l = e.intersectLinePolygon(a, o, t), u = e.intersectLinePolygon(o, h, t), f = e.intersectLinePolygon(h, s, t), d = new e; return d.appendPoints(c.points), d.appendPoints(l.points), d.appendPoints(u.points), d.appendPoints(f.points), d.points.length > 0 && (d.status = "Intersection"), d; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    function e(t) { t ? this._tryParsingColor(t) : this.setSource([0, 0, 0, 1]); }
    function i(t, e, i) { return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t; }
    var r = t.fabric || (t.fabric = {});
    return r.Color ? void r.warn("fabric.Color is already defined.") : (r.Color = e, r.Color.prototype = { _tryParsingColor: function (t) { var i; t in e.colorNameMap && (t = e.colorNameMap[t]), "transparent" === t && (i = [255, 255, 255, 0]), i || (i = e.sourceFromHex(t)), i || (i = e.sourceFromRgb(t)), i || (i = e.sourceFromHsl(t)), i || (i = [0, 0, 0, 1]), i && this.setSource(i); }, _rgbToHsl: function (t, e, i) { t /= 255, e /= 255, i /= 255; var n, s, o, a = r.util.array.max([t, e, i]), h = r.util.array.min([t, e, i]); if (o = (a + h) / 2, a === h)
            n = s = 0;
        else {
            var c = a - h;
            switch (s = o > .5 ? c / (2 - a - h) : c / (a + h), a) {
                case t:
                    n = (e - i) / c + (e < i ? 6 : 0);
                    break;
                case e:
                    n = (i - t) / c + 2;
                    break;
                case i: n = (t - e) / c + 4;
            }
            n /= 6;
        } return [Math.round(360 * n), Math.round(100 * s), Math.round(100 * o)]; }, getSource: function () { return this._source; }, setSource: function (t) { this._source = t; }, toRgb: function () { var t = this.getSource(); return "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")"; }, toRgba: function () { var t = this.getSource(); return "rgba(" + t[0] + "," + t[1] + "," + t[2] + "," + t[3] + ")"; }, toHsl: function () { var t = this.getSource(), e = this._rgbToHsl(t[0], t[1], t[2]); return "hsl(" + e[0] + "," + e[1] + "%," + e[2] + "%)"; }, toHsla: function () { var t = this.getSource(), e = this._rgbToHsl(t[0], t[1], t[2]); return "hsla(" + e[0] + "," + e[1] + "%," + e[2] + "%," + t[3] + ")"; }, toHex: function () { var t, e, i, r = this.getSource(); return t = r[0].toString(16), t = 1 === t.length ? "0" + t : t, e = r[1].toString(16), e = 1 === e.length ? "0" + e : e, i = r[2].toString(16), i = 1 === i.length ? "0" + i : i, t.toUpperCase() + e.toUpperCase() + i.toUpperCase(); }, getAlpha: function () { return this.getSource()[3]; }, setAlpha: function (t) { var e = this.getSource(); return e[3] = t, this.setSource(e), this; }, toGrayscale: function () { var t = this.getSource(), e = parseInt((.3 * t[0] + .59 * t[1] + .11 * t[2]).toFixed(0), 10), i = t[3]; return this.setSource([e, e, e, i]), this; }, toBlackWhite: function (t) { var e = this.getSource(), i = (.3 * e[0] + .59 * e[1] + .11 * e[2]).toFixed(0), r = e[3]; return t = t || 127, i = Number(i) < Number(t) ? 0 : 255, this.setSource([i, i, i, r]), this; }, overlayWith: function (t) { t instanceof e || (t = new e(t)); for (var i = [], r = this.getAlpha(), n = .5, s = this.getSource(), o = t.getSource(), a = 0; a < 3; a++)
            i.push(Math.round(s[a] * (1 - n) + o[a] * n)); return i[3] = r, this.setSource(i), this; } }, r.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/, r.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/, r.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i, r.Color.colorNameMap = { aqua: "#00FFFF", black: "#000000", blue: "#0000FF", fuchsia: "#FF00FF", gray: "#808080", grey: "#808080", green: "#008000", lime: "#00FF00", maroon: "#800000", navy: "#000080", olive: "#808000", orange: "#FFA500", purple: "#800080", red: "#FF0000", silver: "#C0C0C0", teal: "#008080", white: "#FFFFFF", yellow: "#FFFF00" }, r.Color.fromRgb = function (t) { return e.fromSource(e.sourceFromRgb(t)); }, r.Color.sourceFromRgb = function (t) { var i = t.match(e.reRGBa); if (i) {
        var r = parseInt(i[1], 10) / (/%$/.test(i[1]) ? 100 : 1) * (/%$/.test(i[1]) ? 255 : 1), n = parseInt(i[2], 10) / (/%$/.test(i[2]) ? 100 : 1) * (/%$/.test(i[2]) ? 255 : 1), s = parseInt(i[3], 10) / (/%$/.test(i[3]) ? 100 : 1) * (/%$/.test(i[3]) ? 255 : 1);
        return [parseInt(r, 10), parseInt(n, 10), parseInt(s, 10), i[4] ? parseFloat(i[4]) : 1];
    } }, r.Color.fromRgba = e.fromRgb, r.Color.fromHsl = function (t) { return e.fromSource(e.sourceFromHsl(t)); }, r.Color.sourceFromHsl = function (t) { var r = t.match(e.reHSLa); if (r) {
        var n, s, o, a = (parseFloat(r[1]) % 360 + 360) % 360 / 360, h = parseFloat(r[2]) / (/%$/.test(r[2]) ? 100 : 1), c = parseFloat(r[3]) / (/%$/.test(r[3]) ? 100 : 1);
        if (0 === h)
            n = s = o = c;
        else {
            var l = c <= .5 ? c * (h + 1) : c + h - c * h, u = 2 * c - l;
            n = i(u, l, a + 1 / 3), s = i(u, l, a), o = i(u, l, a - 1 / 3);
        }
        return [Math.round(255 * n), Math.round(255 * s), Math.round(255 * o), r[4] ? parseFloat(r[4]) : 1];
    } }, r.Color.fromHsla = e.fromHsl, r.Color.fromHex = function (t) { return e.fromSource(e.sourceFromHex(t)); }, r.Color.sourceFromHex = function (t) { if (t.match(e.reHex)) {
        var i = t.slice(t.indexOf("#") + 1), r = 3 === i.length || 4 === i.length, n = 8 === i.length || 4 === i.length, s = r ? i.charAt(0) + i.charAt(0) : i.substring(0, 2), o = r ? i.charAt(1) + i.charAt(1) : i.substring(2, 4), a = r ? i.charAt(2) + i.charAt(2) : i.substring(4, 6), h = n ? r ? i.charAt(3) + i.charAt(3) : i.substring(6, 8) : "FF";
        return [parseInt(s, 16), parseInt(o, 16), parseInt(a, 16), parseFloat((parseInt(h, 16) / 255).toFixed(2))];
    } }, void (r.Color.fromSource = function (t) { var i = new e; return i.setSource(t), i; }));
}("undefined" != typeof exports ? exports : this), function () { function t(t) { var e, i, r, n = t.getAttribute("style"), s = t.getAttribute("offset") || 0; if (s = parseFloat(s) / (/%$/.test(s) ? 100 : 1), s = s < 0 ? 0 : s > 1 ? 1 : s, n) {
    var o = n.split(/\s*;\s*/);
    "" === o[o.length - 1] && o.pop();
    for (var a = o.length; a--;) {
        var h = o[a].split(/\s*:\s*/), c = h[0].trim(), l = h[1].trim();
        "stop-color" === c ? e = l : "stop-opacity" === c && (r = l);
    }
} return e || (e = t.getAttribute("stop-color") || "rgb(0,0,0)"), r || (r = t.getAttribute("stop-opacity")), e = new fabric.Color(e), i = e.getAlpha(), r = isNaN(parseFloat(r)) ? 1 : parseFloat(r), r *= i, { offset: s, color: e.toRgb(), opacity: r }; } function e(t) { return { x1: t.getAttribute("x1") || 0, y1: t.getAttribute("y1") || 0, x2: t.getAttribute("x2") || "100%", y2: t.getAttribute("y2") || 0 }; } function i(t) { return { x1: t.getAttribute("fx") || t.getAttribute("cx") || "50%", y1: t.getAttribute("fy") || t.getAttribute("cy") || "50%", r1: 0, x2: t.getAttribute("cx") || "50%", y2: t.getAttribute("cy") || "50%", r2: t.getAttribute("r") || "50%" }; } function r(t, e, i) { var r, n = 0, s = 1, o = ""; for (var a in e)
    "Infinity" === e[a] ? e[a] = 1 : "-Infinity" === e[a] && (e[a] = 0), r = parseFloat(e[a], 10), s = "string" == typeof e[a] && /^\d+%$/.test(e[a]) ? .01 : 1, "x1" === a || "x2" === a || "r2" === a ? (s *= "objectBoundingBox" === i ? t.width : 1, n = "objectBoundingBox" === i ? t.left || 0 : 0) : "y1" !== a && "y2" !== a || (s *= "objectBoundingBox" === i ? t.height : 1, n = "objectBoundingBox" === i ? t.top || 0 : 0), e[a] = r * s + n; if ("ellipse" === t.type && null !== e.r2 && "objectBoundingBox" === i && t.rx !== t.ry) {
    var h = t.ry / t.rx;
    o = " scale(1, " + h + ")", e.y1 && (e.y1 /= h), e.y2 && (e.y2 /= h);
} return o; } fabric.Gradient = fabric.util.createClass({ offsetX: 0, offsetY: 0, initialize: function (t) { t || (t = {}); var e = {}; this.id = fabric.Object.__uid++, this.type = t.type || "linear", e = { x1: t.coords.x1 || 0, y1: t.coords.y1 || 0, x2: t.coords.x2 || 0, y2: t.coords.y2 || 0 }, "radial" === this.type && (e.r1 = t.coords.r1 || 0, e.r2 = t.coords.r2 || 0), this.coords = e, this.colorStops = t.colorStops.slice(), t.gradientTransform && (this.gradientTransform = t.gradientTransform), this.offsetX = t.offsetX || this.offsetX, this.offsetY = t.offsetY || this.offsetY; }, addColorStop: function (t) { for (var e in t) {
        var i = new fabric.Color(t[e]);
        this.colorStops.push({ offset: e, color: i.toRgb(), opacity: i.getAlpha() });
    } return this; }, toObject: function () { return { type: this.type, coords: this.coords, colorStops: this.colorStops, offsetX: this.offsetX, offsetY: this.offsetY, gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform }; }, toSVG: function (t) { var e, i, r = fabric.util.object.clone(this.coords); if (this.colorStops.sort(function (t, e) { return t.offset - e.offset; }), !t.group || "path-group" !== t.group.type)
        for (var n in r)
            "x1" === n || "x2" === n || "r2" === n ? r[n] += this.offsetX - t.width / 2 : "y1" !== n && "y2" !== n || (r[n] += this.offsetY - t.height / 2); i = 'id="SVGID_' + this.id + '" gradientUnits="userSpaceOnUse"', this.gradientTransform && (i += ' gradientTransform="matrix(' + this.gradientTransform.join(" ") + ')" '), "linear" === this.type ? e = ["<linearGradient ", i, ' x1="', r.x1, '" y1="', r.y1, '" x2="', r.x2, '" y2="', r.y2, '">\n'] : "radial" === this.type && (e = ["<radialGradient ", i, ' cx="', r.x2, '" cy="', r.y2, '" r="', r.r2, '" fx="', r.x1, '" fy="', r.y1, '">\n']); for (var s = 0; s < this.colorStops.length; s++)
        e.push("<stop ", 'offset="', 100 * this.colorStops[s].offset + "%", '" style="stop-color:', this.colorStops[s].color, null !== this.colorStops[s].opacity ? ";stop-opacity: " + this.colorStops[s].opacity : ";", '"/>\n'); return e.push("linear" === this.type ? "</linearGradient>\n" : "</radialGradient>\n"), e.join(""); }, toLive: function (t, e) { var i, r, n = fabric.util.object.clone(this.coords); if (this.type) {
        if (e.group && "path-group" === e.group.type)
            for (r in n)
                "x1" === r || "x2" === r ? n[r] += -this.offsetX + e.width / 2 : "y1" !== r && "y2" !== r || (n[r] += -this.offsetY + e.height / 2);
        "linear" === this.type ? i = t.createLinearGradient(n.x1, n.y1, n.x2, n.y2) : "radial" === this.type && (i = t.createRadialGradient(n.x1, n.y1, n.r1, n.x2, n.y2, n.r2));
        for (var s = 0, o = this.colorStops.length; s < o; s++) {
            var a = this.colorStops[s].color, h = this.colorStops[s].opacity, c = this.colorStops[s].offset;
            "undefined" != typeof h && (a = new fabric.Color(a).setAlpha(h).toRgba()), i.addColorStop(parseFloat(c), a);
        }
        return i;
    } } }), fabric.util.object.extend(fabric.Gradient, { fromElement: function (n, s) { var o, a, h, c = n.getElementsByTagName("stop"), l = n.getAttribute("gradientUnits") || "objectBoundingBox", u = n.getAttribute("gradientTransform"), f = []; o = "linearGradient" === n.nodeName || "LINEARGRADIENT" === n.nodeName ? "linear" : "radial", "linear" === o ? a = e(n) : "radial" === o && (a = i(n)); for (var d = c.length; d--;)
        f.push(t(c[d])); h = r(s, a, l); var g = new fabric.Gradient({ type: o, coords: a, colorStops: f, offsetX: -s.left, offsetY: -s.top }); return (u || "" !== h) && (g.gradientTransform = fabric.parseTransformAttribute((u || "") + h)), g; }, forObject: function (t, e) { return e || (e = {}), r(t, e.coords, "userSpaceOnUse"), new fabric.Gradient(e); } }); }(), fabric.Pattern = fabric.util.createClass({ repeat: "repeat", offsetX: 0, offsetY: 0, initialize: function (t) { if (t || (t = {}), this.id = fabric.Object.__uid++, t.source)
        if ("string" == typeof t.source)
            if ("undefined" != typeof fabric.util.getFunctionBody(t.source))
                this.source = new Function(fabric.util.getFunctionBody(t.source));
            else {
                var e = this;
                this.source = fabric.util.createImage(), fabric.util.loadImage(t.source, function (t) { e.source = t; });
            }
        else
            this.source = t.source; t.repeat && (this.repeat = t.repeat), t.offsetX && (this.offsetX = t.offsetX), t.offsetY && (this.offsetY = t.offsetY); }, toObject: function () { var t; return "function" == typeof this.source ? t = String(this.source) : "string" == typeof this.source.src ? t = this.source.src : "object" == typeof this.source && this.source.toDataURL && (t = this.source.toDataURL()), { source: t, repeat: this.repeat, offsetX: this.offsetX, offsetY: this.offsetY }; }, toSVG: function (t) { var e = "function" == typeof this.source ? this.source() : this.source, i = e.width / t.getWidth(), r = e.height / t.getHeight(), n = this.offsetX / t.getWidth(), s = this.offsetY / t.getHeight(), o = ""; return "repeat-x" !== this.repeat && "no-repeat" !== this.repeat || (r = 1), "repeat-y" !== this.repeat && "no-repeat" !== this.repeat || (i = 1), e.src ? o = e.src : e.toDataURL && (o = e.toDataURL()), '<pattern id="SVGID_' + this.id + '" x="' + n + '" y="' + s + '" width="' + i + '" height="' + r + '">\n<image x="0" y="0" width="' + e.width + '" height="' + e.height + '" xlink:href="' + o + '"></image>\n</pattern>\n'; }, toLive: function (t) { var e = "function" == typeof this.source ? this.source() : this.source; if (!e)
        return ""; if ("undefined" != typeof e.src) {
        if (!e.complete)
            return "";
        if (0 === e.naturalWidth || 0 === e.naturalHeight)
            return "";
    } return t.createPattern(e, this.repeat); } }), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.toFixed;
    return e.Shadow ? void e.warn("fabric.Shadow is already defined.") : (e.Shadow = e.util.createClass({ color: "rgb(0,0,0)", blur: 0, offsetX: 0, offsetY: 0, affectStroke: !1, includeDefaultValues: !0, initialize: function (t) { "string" == typeof t && (t = this._parseShadow(t)); for (var i in t)
            this[i] = t[i]; this.id = e.Object.__uid++; }, _parseShadow: function (t) { var i = t.trim(), r = e.Shadow.reOffsetsAndBlur.exec(i) || [], n = i.replace(e.Shadow.reOffsetsAndBlur, "") || "rgb(0,0,0)"; return { color: n.trim(), offsetX: parseInt(r[1], 10) || 0, offsetY: parseInt(r[2], 10) || 0, blur: parseInt(r[3], 10) || 0 }; }, toString: function () { return [this.offsetX, this.offsetY, this.blur, this.color].join("px "); }, toSVG: function (t) { var r = 40, n = 40, s = e.Object.NUM_FRACTION_DIGITS, o = e.util.rotateVector({ x: this.offsetX, y: this.offsetY }, e.util.degreesToRadians(-t.angle)), a = 20; return t.width && t.height && (r = 100 * i((Math.abs(o.x) + this.blur) / t.width, s) + a, n = 100 * i((Math.abs(o.y) + this.blur) / t.height, s) + a), t.flipX && (o.x *= -1), t.flipY && (o.y *= -1), '<filter id="SVGID_' + this.id + '" y="-' + n + '%" height="' + (100 + 2 * n) + '%" x="-' + r + '%" width="' + (100 + 2 * r) + '%" >\n\t<feGaussianBlur in="SourceAlpha" stdDeviation="' + i(this.blur ? this.blur / 2 : 0, s) + '"></feGaussianBlur>\n\t<feOffset dx="' + i(o.x, s) + '" dy="' + i(o.y, s) + '" result="oBlur" ></feOffset>\n\t<feFlood flood-color="' + this.color + '"/>\n\t<feComposite in2="oBlur" operator="in" />\n\t<feMerge>\n\t\t<feMergeNode></feMergeNode>\n\t\t<feMergeNode in="SourceGraphic"></feMergeNode>\n\t</feMerge>\n</filter>\n'; }, toObject: function () { if (this.includeDefaultValues)
            return { color: this.color, blur: this.blur, offsetX: this.offsetX, offsetY: this.offsetY, affectStroke: this.affectStroke }; var t = {}, i = e.Shadow.prototype; return ["color", "blur", "offsetX", "offsetY", "affectStroke"].forEach(function (e) { this[e] !== i[e] && (t[e] = this[e]); }, this), t; } }), void (e.Shadow.reOffsetsAndBlur = /(?:\s|^)(-?\d+(?:px)?(?:\s?|$))?(-?\d+(?:px)?(?:\s?|$))?(\d+(?:px)?)?(?:\s?|$)(?:$|\s)/));
}("undefined" != typeof exports ? exports : this), function () {
    "use strict";
    if (fabric.StaticCanvas)
        return void fabric.warn("fabric.StaticCanvas is already defined.");
    var t = fabric.util.object.extend, e = fabric.util.getElementOffset, i = fabric.util.removeFromArray, r = fabric.util.toFixed, n = new Error("Could not initialize `canvas` element");
    fabric.StaticCanvas = fabric.util.createClass({ initialize: function (t, e) { e || (e = {}), this._initStatic(t, e); }, backgroundColor: "", backgroundImage: null, overlayColor: "", overlayImage: null, includeDefaultValues: !0, stateful: !0, renderOnAddRemove: !0, clipTo: null, controlsAboveOverlay: !1, allowTouchScrolling: !1, imageSmoothingEnabled: !0, viewportTransform: [1, 0, 0, 1, 0, 0], backgroundVpt: !0, overlayVpt: !0, onBeforeScaleRotate: function () { }, enableRetinaScaling: !0, _initStatic: function (t, e) { var i = fabric.StaticCanvas.prototype.renderAll.bind(this); this._objects = [], this._createLowerCanvas(t), this._initOptions(e), this._setImageSmoothing(), this.interactive || this._initRetinaScaling(), e.overlayImage && this.setOverlayImage(e.overlayImage, i), e.backgroundImage && this.setBackgroundImage(e.backgroundImage, i), e.backgroundColor && this.setBackgroundColor(e.backgroundColor, i), e.overlayColor && this.setOverlayColor(e.overlayColor, i), this.calcOffset(); }, _isRetinaScaling: function () { return 1 !== fabric.devicePixelRatio && this.enableRetinaScaling; }, getRetinaScaling: function () { return this._isRetinaScaling() ? fabric.devicePixelRatio : 1; }, _initRetinaScaling: function () { this._isRetinaScaling() && (this.lowerCanvasEl.setAttribute("width", this.width * fabric.devicePixelRatio), this.lowerCanvasEl.setAttribute("height", this.height * fabric.devicePixelRatio), this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio)); }, calcOffset: function () { return this._offset = e(this.lowerCanvasEl), this; }, setOverlayImage: function (t, e, i) { return this.__setBgOverlayImage("overlayImage", t, e, i); }, setBackgroundImage: function (t, e, i) { return this.__setBgOverlayImage("backgroundImage", t, e, i); }, setOverlayColor: function (t, e) { return this.__setBgOverlayColor("overlayColor", t, e); }, setBackgroundColor: function (t, e) { return this.__setBgOverlayColor("backgroundColor", t, e); }, _setImageSmoothing: function () { var t = this.getContext(); t.imageSmoothingEnabled = t.imageSmoothingEnabled || t.webkitImageSmoothingEnabled || t.mozImageSmoothingEnabled || t.msImageSmoothingEnabled || t.oImageSmoothingEnabled, t.imageSmoothingEnabled = this.imageSmoothingEnabled; }, __setBgOverlayImage: function (t, e, i, r) { return "string" == typeof e ? fabric.util.loadImage(e, function (e) { e && (this[t] = new fabric.Image(e, r)), i && i(e); }, this, r && r.crossOrigin) : (r && e.setOptions(r), this[t] = e, i && i(e)), this; }, __setBgOverlayColor: function (t, e, i) { if (e && e.source) {
            var r = this;
            fabric.util.loadImage(e.source, function (n) { r[t] = new fabric.Pattern({ source: n, repeat: e.repeat, offsetX: e.offsetX, offsetY: e.offsetY }), i && i(); });
        }
        else
            this[t] = e, i && i(); return this; }, _createCanvasElement: function (t) { var e = fabric.util.createCanvasElement(t); if (e.style || (e.style = {}), !e)
            throw n; if ("undefined" == typeof e.getContext)
            throw n; return e; }, _initOptions: function (t) { for (var e in t)
            this[e] = t[e]; this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0, this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0, this.lowerCanvasEl.style && (this.lowerCanvasEl.width = this.width, this.lowerCanvasEl.height = this.height, this.lowerCanvasEl.style.width = this.width + "px", this.lowerCanvasEl.style.height = this.height + "px", this.viewportTransform = this.viewportTransform.slice()); }, _createLowerCanvas: function (t) { this.lowerCanvasEl = fabric.util.getById(t) || this._createCanvasElement(t), fabric.util.addClass(this.lowerCanvasEl, "lower-canvas"), this.interactive && this._applyCanvasStyle(this.lowerCanvasEl), this.contextContainer = this.lowerCanvasEl.getContext("2d"); }, getWidth: function () { return this.width; }, getHeight: function () { return this.height; }, setWidth: function (t, e) { return this.setDimensions({ width: t }, e); }, setHeight: function (t, e) { return this.setDimensions({ height: t }, e); }, setDimensions: function (t, e) { var i; e = e || {}; for (var r in t)
            i = t[r], e.cssOnly || (this._setBackstoreDimension(r, t[r]), i += "px"), e.backstoreOnly || this._setCssDimension(r, i); return this._initRetinaScaling(), this._setImageSmoothing(), this.calcOffset(), e.cssOnly || this.renderAll(), this; }, _setBackstoreDimension: function (t, e) { return this.lowerCanvasEl[t] = e, this.upperCanvasEl && (this.upperCanvasEl[t] = e), this.cacheCanvasEl && (this.cacheCanvasEl[t] = e), this[t] = e, this; }, _setCssDimension: function (t, e) { return this.lowerCanvasEl.style[t] = e, this.upperCanvasEl && (this.upperCanvasEl.style[t] = e), this.wrapperEl && (this.wrapperEl.style[t] = e), this; }, getZoom: function () { return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]); }, setViewportTransform: function (t) { var e, i = this._activeGroup; this.viewportTransform = t; for (var r = 0, n = this._objects.length; r < n; r++)
            e = this._objects[r], e.group || e.setCoords(); return i && i.setCoords(), this.renderAll(), this; }, zoomToPoint: function (t, e) { var i = t, r = this.viewportTransform.slice(0); t = fabric.util.transformPoint(t, fabric.util.invertTransform(this.viewportTransform)), r[0] = e, r[3] = e; var n = fabric.util.transformPoint(t, r); return r[4] += i.x - n.x, r[5] += i.y - n.y, this.setViewportTransform(r); }, setZoom: function (t) { return this.zoomToPoint(new fabric.Point(0, 0), t), this; }, absolutePan: function (t) { var e = this.viewportTransform.slice(0); return e[4] = -t.x, e[5] = -t.y, this.setViewportTransform(e); }, relativePan: function (t) { return this.absolutePan(new fabric.Point(-t.x - this.viewportTransform[4], -t.y - this.viewportTransform[5])); }, getElement: function () { return this.lowerCanvasEl; }, _onObjectAdded: function (t) { this.stateful && t.setupState(), t._set("canvas", this), t.setCoords(), this.fire("object:added", { target: t }), t.fire("added"); }, _onObjectRemoved: function (t) { this.fire("object:removed", { target: t }), t.fire("removed"), delete t.canvas; }, clearContext: function (t) { return t.clearRect(0, 0, this.width, this.height), this; }, getContext: function () { return this.contextContainer; }, clear: function () { return this._objects.length = 0, this.backgroundImage = null, this.overlayImage = null, this.backgroundColor = "", this.overlayColor = "", this._hasITextHandlers && (this.off("selection:cleared", this._canvasITextSelectionClearedHanlder), this.off("object:selected", this._canvasITextSelectionClearedHanlder), this.off("mouse:up", this._mouseUpITextHandler), this._iTextInstances = null, this._hasITextHandlers = !1), this.clearContext(this.contextContainer), this.fire("canvas:cleared"), this.renderAll(), this; }, renderAll: function () { var t = this.contextContainer; return this.renderCanvas(t, this._objects), this; }, renderCanvas: function (t, e) { this.clearContext(t), this.fire("before:render"), this.clipTo && fabric.util.clipContext(this, t), this._renderBackground(t), t.save(), t.transform.apply(t, this.viewportTransform), this._renderObjects(t, e), t.restore(), !this.controlsAboveOverlay && this.interactive && this.drawControls(t), this.clipTo && t.restore(), this._renderOverlay(t), this.controlsAboveOverlay && this.interactive && this.drawControls(t), this.fire("after:render"); }, _renderObjects: function (t, e) { for (var i = 0, r = e.length; i < r; ++i)
            e[i] && e[i].render(t); }, _renderBackgroundOrOverlay: function (t, e) { var i = this[e + "Color"]; i && (t.fillStyle = i.toLive ? i.toLive(t) : i, t.fillRect(i.offsetX || 0, i.offsetY || 0, this.width, this.height)), i = this[e + "Image"], i && (this[e + "Vpt"] && (t.save(), t.transform.apply(t, this.viewportTransform)), i.render(t), this[e + "Vpt"] && t.restore()); }, _renderBackground: function (t) { this._renderBackgroundOrOverlay(t, "background"); }, _renderOverlay: function (t) { this._renderBackgroundOrOverlay(t, "overlay"); }, getCenter: function () { return { top: this.getHeight() / 2, left: this.getWidth() / 2 }; }, centerObjectH: function (t) { return this._centerObject(t, new fabric.Point(this.getCenter().left, t.getCenterPoint().y)); }, centerObjectV: function (t) { return this._centerObject(t, new fabric.Point(t.getCenterPoint().x, this.getCenter().top)); }, centerObject: function (t) { var e = this.getCenter(); return this._centerObject(t, new fabric.Point(e.left, e.top)); }, viewportCenterObject: function (t) { var e = this.getVpCenter(); return this._centerObject(t, e); }, viewportCenterObjectH: function (t) {
            var e = this.getVpCenter();
            return this._centerObject(t, new fabric.Point(e.x, t.getCenterPoint().y)),
                this;
        }, viewportCenterObjectV: function (t) { var e = this.getVpCenter(); return this._centerObject(t, new fabric.Point(t.getCenterPoint().x, e.y)); }, getVpCenter: function () { var t = this.getCenter(), e = fabric.util.invertTransform(this.viewportTransform); return fabric.util.transformPoint({ x: t.left, y: t.top }, e); }, _centerObject: function (t, e) { return t.setPositionByOrigin(e, "center", "center"), this.renderAll(), this; }, toDatalessJSON: function (t) { return this.toDatalessObject(t); }, toObject: function (t) { return this._toObjectMethod("toObject", t); }, toDatalessObject: function (t) { return this._toObjectMethod("toDatalessObject", t); }, _toObjectMethod: function (e, i) { var r = { objects: this._toObjects(e, i) }; return t(r, this.__serializeBgOverlay(i)), fabric.util.populateWithProperties(this, r, i), r; }, _toObjects: function (t, e) { return this.getObjects().filter(function (t) { return !t.excludeFromExport; }).map(function (i) { return this._toObject(i, t, e); }, this); }, _toObject: function (t, e, i) { var r; this.includeDefaultValues || (r = t.includeDefaultValues, t.includeDefaultValues = !1); var n = t[e](i); return this.includeDefaultValues || (t.includeDefaultValues = r), n; }, __serializeBgOverlay: function (t) { var e = { background: this.backgroundColor && this.backgroundColor.toObject ? this.backgroundColor.toObject(t) : this.backgroundColor }; return this.overlayColor && (e.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(t) : this.overlayColor), this.backgroundImage && (e.backgroundImage = this.backgroundImage.toObject(t)), this.overlayImage && (e.overlayImage = this.overlayImage.toObject(t)), e; }, svgViewportTransformation: !0, toSVG: function (t, e) { t || (t = {}); var i = []; return this._setSVGPreamble(i, t), this._setSVGHeader(i, t), this._setSVGBgOverlayColor(i, "backgroundColor"), this._setSVGBgOverlayImage(i, "backgroundImage", e), this._setSVGObjects(i, e), this._setSVGBgOverlayColor(i, "overlayColor"), this._setSVGBgOverlayImage(i, "overlayImage", e), i.push("</svg>"), i.join(""); }, _setSVGPreamble: function (t, e) { e.suppressPreamble || t.push('<?xml version="1.0" encoding="', e.encoding || "UTF-8", '" standalone="no" ?>\n', '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ', '"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n'); }, _setSVGHeader: function (t, e) { var i, n = e.width || this.width, s = e.height || this.height, o = 'viewBox="0 0 ' + this.width + " " + this.height + '" ', a = fabric.Object.NUM_FRACTION_DIGITS; e.viewBox ? o = 'viewBox="' + e.viewBox.x + " " + e.viewBox.y + " " + e.viewBox.width + " " + e.viewBox.height + '" ' : this.svgViewportTransformation && (i = this.viewportTransform, o = 'viewBox="' + r(-i[4] / i[0], a) + " " + r(-i[5] / i[3], a) + " " + r(this.width / i[0], a) + " " + r(this.height / i[3], a) + '" '), t.push("<svg ", 'xmlns="http://www.w3.org/2000/svg" ', 'xmlns:xlink="http://www.w3.org/1999/xlink" ', 'version="1.1" ', 'width="', n, '" ', 'height="', s, '" ', this.backgroundColor && !this.backgroundColor.toLive ? 'style="background-color: ' + this.backgroundColor + '" ' : null, o, 'xml:space="preserve">\n', "<desc>Created with Fabric.js ", fabric.version, "</desc>\n", "<defs>", fabric.createSVGFontFacesMarkup(this.getObjects()), fabric.createSVGRefElementsMarkup(this), "</defs>\n"); }, _setSVGObjects: function (t, e) { for (var i, r = 0, n = this.getObjects(), s = n.length; r < s; r++)
            i = n[r], i.excludeFromExport || this._setSVGObject(t, i, e); }, _setSVGObject: function (t, e, i) { t.push(e.toSVG(i)); }, _setSVGBgOverlayImage: function (t, e, i) { this[e] && this[e].toSVG && t.push(this[e].toSVG(i)); }, _setSVGBgOverlayColor: function (t, e) { this[e] && this[e].source ? t.push('<rect x="', this[e].offsetX, '" y="', this[e].offsetY, '" ', 'width="', "repeat-y" === this[e].repeat || "no-repeat" === this[e].repeat ? this[e].source.width : this.width, '" height="', "repeat-x" === this[e].repeat || "no-repeat" === this[e].repeat ? this[e].source.height : this.height, '" fill="url(#' + e + 'Pattern)"', "></rect>\n") : this[e] && "overlayColor" === e && t.push('<rect x="0" y="0" ', 'width="', this.width, '" height="', this.height, '" fill="', this[e], '"', "></rect>\n"); }, sendToBack: function (t) { if (!t)
            return this; var e, r, n, s = this._activeGroup; if (t === s)
            for (n = s._objects, e = n.length; e--;)
                r = n[e], i(this._objects, r), this._objects.unshift(r);
        else
            i(this._objects, t), this._objects.unshift(t); return this.renderAll && this.renderAll(); }, bringToFront: function (t) { if (!t)
            return this; var e, r, n, s = this._activeGroup; if (t === s)
            for (n = s._objects, e = 0; e < n.length; e++)
                r = n[e], i(this._objects, r), this._objects.push(r);
        else
            i(this._objects, t), this._objects.push(t); return this.renderAll && this.renderAll(); }, sendBackwards: function (t, e) { if (!t)
            return this; var r, n, s, o, a, h = this._activeGroup; if (t === h)
            for (a = h._objects, r = 0; r < a.length; r++)
                n = a[r], s = this._objects.indexOf(n), 0 !== s && (o = s - 1, i(this._objects, n), this._objects.splice(o, 0, n));
        else
            s = this._objects.indexOf(t), 0 !== s && (o = this._findNewLowerIndex(t, s, e), i(this._objects, t), this._objects.splice(o, 0, t)); return this.renderAll && this.renderAll(), this; }, _findNewLowerIndex: function (t, e, i) { var r; if (i) {
            r = e;
            for (var n = e - 1; n >= 0; --n) {
                var s = t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t);
                if (s) {
                    r = n;
                    break;
                }
            }
        }
        else
            r = e - 1; return r; }, bringForward: function (t, e) { if (!t)
            return this; var r, n, s, o, a, h = this._activeGroup; if (t === h)
            for (a = h._objects, r = a.length; r--;)
                n = a[r], s = this._objects.indexOf(n), s !== this._objects.length - 1 && (o = s + 1, i(this._objects, n), this._objects.splice(o, 0, n));
        else
            s = this._objects.indexOf(t), s !== this._objects.length - 1 && (o = this._findNewUpperIndex(t, s, e), i(this._objects, t), this._objects.splice(o, 0, t)); return this.renderAll && this.renderAll(), this; }, _findNewUpperIndex: function (t, e, i) { var r; if (i) {
            r = e;
            for (var n = e + 1; n < this._objects.length; ++n) {
                var s = t.intersectsWithObject(this._objects[n]) || t.isContainedWithinObject(this._objects[n]) || this._objects[n].isContainedWithinObject(t);
                if (s) {
                    r = n;
                    break;
                }
            }
        }
        else
            r = e + 1; return r; }, moveTo: function (t, e) { return i(this._objects, t), this._objects.splice(e, 0, t), this.renderAll && this.renderAll(); }, dispose: function () { return this.clear(), this; }, toString: function () { return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this.getObjects().length + " }>"; } }), t(fabric.StaticCanvas.prototype, fabric.Observable), t(fabric.StaticCanvas.prototype, fabric.Collection), t(fabric.StaticCanvas.prototype, fabric.DataURLExporter), t(fabric.StaticCanvas, { EMPTY_JSON: '{"objects": [], "background": "white"}', supports: function (t) { var e = fabric.util.createCanvasElement(); if (!e || !e.getContext)
            return null; var i = e.getContext("2d"); if (!i)
            return null; switch (t) {
            case "getImageData": return "undefined" != typeof i.getImageData;
            case "setLineDash": return "undefined" != typeof i.setLineDash;
            case "toDataURL": return "undefined" != typeof e.toDataURL;
            case "toDataURLWithQuality":
                try {
                    return e.toDataURL("image/jpeg", 0), !0;
                }
                catch (t) { }
                return !1;
            default: return null;
        } } }), fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;
}(), fabric.BaseBrush = fabric.util.createClass({ color: "rgb(0, 0, 0)", width: 1, shadow: null, strokeLineCap: "round", strokeLineJoin: "round", strokeDashArray: null, setShadow: function (t) { return this.shadow = new fabric.Shadow(t), this; }, _setBrushStyles: function () { var t = this.canvas.contextTop; t.strokeStyle = this.color, t.lineWidth = this.width, t.lineCap = this.strokeLineCap, t.lineJoin = this.strokeLineJoin, this.strokeDashArray && fabric.StaticCanvas.supports("setLineDash") && t.setLineDash(this.strokeDashArray); }, _setShadow: function () { if (this.shadow) {
        var t = this.canvas.contextTop;
        t.shadowColor = this.shadow.color, t.shadowBlur = this.shadow.blur, t.shadowOffsetX = this.shadow.offsetX, t.shadowOffsetY = this.shadow.offsetY;
    } }, _resetShadow: function () { var t = this.canvas.contextTop; t.shadowColor = "", t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0; } }), function () { fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, { initialize: function (t) { this.canvas = t, this._points = []; }, onMouseDown: function (t) { this._prepareForDrawing(t), this._captureDrawingPath(t), this._render(); }, onMouseMove: function (t) { this._captureDrawingPath(t), this.canvas.clearContext(this.canvas.contextTop), this._render(); }, onMouseUp: function () { this._finalizeAndAddPath(); }, _prepareForDrawing: function (t) { var e = new fabric.Point(t.x, t.y); this._reset(), this._addPoint(e), this.canvas.contextTop.moveTo(e.x, e.y); }, _addPoint: function (t) { this._points.push(t); }, _reset: function () { this._points.length = 0, this._setBrushStyles(), this._setShadow(); }, _captureDrawingPath: function (t) { var e = new fabric.Point(t.x, t.y); this._addPoint(e); }, _render: function () { var t = this.canvas.contextTop, e = this.canvas.viewportTransform, i = this._points[0], r = this._points[1]; t.save(), t.transform(e[0], e[1], e[2], e[3], e[4], e[5]), t.beginPath(), 2 === this._points.length && i.x === r.x && i.y === r.y && (i.x -= .5, r.x += .5), t.moveTo(i.x, i.y); for (var n = 1, s = this._points.length; n < s; n++) {
        var o = i.midPointFrom(r);
        t.quadraticCurveTo(i.x, i.y, o.x, o.y), i = this._points[n], r = this._points[n + 1];
    } t.lineTo(i.x, i.y), t.stroke(), t.restore(); }, convertPointsToSVGPath: function (t) { var e = [], i = new fabric.Point(t[0].x, t[0].y), r = new fabric.Point(t[1].x, t[1].y); e.push("M ", t[0].x, " ", t[0].y, " "); for (var n = 1, s = t.length; n < s; n++) {
        var o = i.midPointFrom(r);
        e.push("Q ", i.x, " ", i.y, " ", o.x, " ", o.y, " "), i = new fabric.Point(t[n].x, t[n].y), n + 1 < t.length && (r = new fabric.Point(t[n + 1].x, t[n + 1].y));
    } return e.push("L ", i.x, " ", i.y, " "), e; }, createPath: function (t) { var e = new fabric.Path(t, { fill: null, stroke: this.color, strokeWidth: this.width, strokeLineCap: this.strokeLineCap, strokeLineJoin: this.strokeLineJoin, strokeDashArray: this.strokeDashArray, originX: "center", originY: "center" }); return this.shadow && (this.shadow.affectStroke = !0, e.setShadow(this.shadow)), e; }, _finalizeAndAddPath: function () { var t = this.canvas.contextTop; t.closePath(); var e = this.convertPointsToSVGPath(this._points).join(""); if ("M 0 0 Q 0 0 0 0 L 0 0" === e)
        return void this.canvas.renderAll(); var i = this.createPath(e); this.canvas.add(i), i.setCoords(), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderAll(), this.canvas.fire("path:created", { path: i }); } }); }(), fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, { width: 10, initialize: function (t) { this.canvas = t, this.points = []; }, drawDot: function (t) { var e = this.addPoint(t), i = this.canvas.contextTop, r = this.canvas.viewportTransform; i.save(), i.transform(r[0], r[1], r[2], r[3], r[4], r[5]), i.fillStyle = e.fill, i.beginPath(), i.arc(e.x, e.y, e.radius, 0, 2 * Math.PI, !1), i.closePath(), i.fill(), i.restore(); }, onMouseDown: function (t) { this.points.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.drawDot(t); }, onMouseMove: function (t) { this.drawDot(t); }, onMouseUp: function () { var t = this.canvas.renderOnAddRemove; this.canvas.renderOnAddRemove = !1; for (var e = [], i = 0, r = this.points.length; i < r; i++) {
        var n = this.points[i], s = new fabric.Circle({ radius: n.radius, left: n.x, top: n.y, originX: "center", originY: "center", fill: n.fill });
        this.shadow && s.setShadow(this.shadow), e.push(s);
    } var o = new fabric.Group(e, { originX: "center", originY: "center" }); o.canvas = this.canvas, this.canvas.add(o), this.canvas.fire("path:created", { path: o }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = t, this.canvas.renderAll(); }, addPoint: function (t) { var e = new fabric.Point(t.x, t.y), i = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2, r = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba(); return e.radius = i, e.fill = r, this.points.push(e), e; } }), fabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, { width: 10, density: 20, dotWidth: 1, dotWidthVariance: 1, randomOpacity: !1, optimizeOverlapping: !0, initialize: function (t) { this.canvas = t, this.sprayChunks = []; }, onMouseDown: function (t) { this.sprayChunks.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.addSprayChunk(t), this.render(); }, onMouseMove: function (t) { this.addSprayChunk(t), this.render(); }, onMouseUp: function () { var t = this.canvas.renderOnAddRemove; this.canvas.renderOnAddRemove = !1; for (var e = [], i = 0, r = this.sprayChunks.length; i < r; i++)
        for (var n = this.sprayChunks[i], s = 0, o = n.length; s < o; s++) {
            var a = new fabric.Rect({ width: n[s].width, height: n[s].width, left: n[s].x + 1, top: n[s].y + 1, originX: "center", originY: "center", fill: this.color });
            this.shadow && a.setShadow(this.shadow), e.push(a);
        } this.optimizeOverlapping && (e = this._getOptimizedRects(e)); var h = new fabric.Group(e, { originX: "center", originY: "center" }); h.canvas = this.canvas, this.canvas.add(h), this.canvas.fire("path:created", { path: h }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = t, this.canvas.renderAll(); }, _getOptimizedRects: function (t) { for (var e, i = {}, r = 0, n = t.length; r < n; r++)
        e = t[r].left + "" + t[r].top, i[e] || (i[e] = t[r]); var s = []; for (e in i)
        s.push(i[e]); return s; }, render: function () { var t = this.canvas.contextTop; t.fillStyle = this.color; var e = this.canvas.viewportTransform; t.save(), t.transform(e[0], e[1], e[2], e[3], e[4], e[5]); for (var i = 0, r = this.sprayChunkPoints.length; i < r; i++) {
        var n = this.sprayChunkPoints[i];
        "undefined" != typeof n.opacity && (t.globalAlpha = n.opacity), t.fillRect(n.x, n.y, n.width, n.width);
    } t.restore(); }, addSprayChunk: function (t) { this.sprayChunkPoints = []; for (var e, i, r, n = this.width / 2, s = 0; s < this.density; s++) {
        e = fabric.util.getRandomInt(t.x - n, t.x + n), i = fabric.util.getRandomInt(t.y - n, t.y + n), r = this.dotWidthVariance ? fabric.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance) : this.dotWidth;
        var o = new fabric.Point(e, i);
        o.width = r, this.randomOpacity && (o.opacity = fabric.util.getRandomInt(0, 100) / 100), this.sprayChunkPoints.push(o);
    } this.sprayChunks.push(this.sprayChunkPoints); } }), fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, { getPatternSrc: function () { var t = 20, e = 5, i = fabric.document.createElement("canvas"), r = i.getContext("2d"); return i.width = i.height = t + e, r.fillStyle = this.color, r.beginPath(), r.arc(t / 2, t / 2, t / 2, 0, 2 * Math.PI, !1), r.closePath(), r.fill(), i; }, getPatternSrcFunction: function () { return String(this.getPatternSrc).replace("this.color", '"' + this.color + '"'); }, getPattern: function () { return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), "repeat"); }, _setBrushStyles: function () { this.callSuper("_setBrushStyles"), this.canvas.contextTop.strokeStyle = this.getPattern(); }, createPath: function (t) { var e = this.callSuper("createPath", t), i = e._getLeftTopCoords().scalarAdd(e.strokeWidth / 2); return e.stroke = new fabric.Pattern({ source: this.source || this.getPatternSrcFunction(), offsetX: -i.x, offsetY: -i.y }), e; } }), function () { var t = fabric.util.getPointer, e = fabric.util.degreesToRadians, i = fabric.util.radiansToDegrees, r = Math.atan2, n = Math.abs, s = fabric.StaticCanvas.supports("setLineDash"), o = .5; fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, { initialize: function (t, e) { e || (e = {}), this._initStatic(t, e), this._initInteractive(), this._createCacheCanvas(); }, uniScaleTransform: !1, uniScaleKey: "shiftKey", centeredScaling: !1, centeredRotation: !1, centeredKey: "altKey", altActionKey: "shiftKey", interactive: !0, selection: !0, selectionKey: "shiftKey", altSelectionKey: null, selectionColor: "rgba(100, 100, 255, 0.3)", selectionDashArray: [], selectionBorderColor: "rgba(255, 255, 255, 0.3)", selectionLineWidth: 1, hoverCursor: "move", moveCursor: "move", defaultCursor: "default", freeDrawingCursor: "crosshair", rotationCursor: "crosshair", containerClass: "canvas-container", perPixelTargetFind: !1, targetFindTolerance: 0, skipTargetFind: !1, isDrawingMode: !1, preserveObjectStacking: !1, stopContextMenu: !1, fireRightClick: !1, _initInteractive: function () { this._currentTransform = null, this._groupSelector = null, this._initWrapperElement(), this._createUpperCanvas(), this._initEventListeners(), this._initRetinaScaling(), this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this), this.calcOffset(); }, _chooseObjectsToRender: function () { var t, e = this.getActiveGroup(), i = this.getActiveObject(), r = [], n = []; if (!e && !i || this.preserveObjectStacking)
        r = this._objects;
    else {
        for (var s = 0, o = this._objects.length; s < o; s++)
            t = this._objects[s], e && e.contains(t) || t === i ? n.push(t) : r.push(t);
        e && (e._set("_objects", n), r.push(e)), i && r.push(i);
    } return r; }, renderAll: function () { !this.selection || this._groupSelector || this.isDrawingMode || this.clearContext(this.contextTop); var t = this.contextContainer; return this.renderCanvas(t, this._chooseObjectsToRender()), this; }, renderTop: function () { var t = this.contextTop; return this.clearContext(t), this.selection && this._groupSelector && this._drawSelection(t), this.fire("after:render"), this; }, _resetCurrentTransform: function () { var t = this._currentTransform; t.target.set({ scaleX: t.original.scaleX, scaleY: t.original.scaleY, skewX: t.original.skewX, skewY: t.original.skewY, left: t.original.left, top: t.original.top }), this._shouldCenterTransform(t.target) ? "rotate" === t.action ? this._setOriginToCenter(t.target) : ("center" !== t.originX && ("right" === t.originX ? t.mouseXSign = -1 : t.mouseXSign = 1), "center" !== t.originY && ("bottom" === t.originY ? t.mouseYSign = -1 : t.mouseYSign = 1), t.originX = "center", t.originY = "center") : (t.originX = t.original.originX, t.originY = t.original.originY); }, containsPoint: function (t, e, i) { var r, n = !0, s = i || this.getPointer(t, n); return r = e.group && e.group === this.getActiveGroup() ? this._normalizePointer(e.group, s) : { x: s.x, y: s.y }, e.containsPoint(r) || e._findTargetCorner(s); }, _normalizePointer: function (t, e) { var i = t.calcTransformMatrix(), r = fabric.util.invertTransform(i), n = this.viewportTransform, s = this.restorePointerVpt(e), o = fabric.util.transformPoint(s, r); return fabric.util.transformPoint(o, n); }, isTargetTransparent: function (t, e, i) { var r = t.hasBorders, n = t.transparentCorners, s = this.contextCache, o = t.selectionBackgroundColor; t.hasBorders = t.transparentCorners = !1, t.selectionBackgroundColor = "", s.save(), s.transform.apply(s, this.viewportTransform), t.render(s), s.restore(), t.active && t._renderControls(s), t.hasBorders = r, t.transparentCorners = n, t.selectionBackgroundColor = o; var a = fabric.util.isTransparent(s, e, i, this.targetFindTolerance); return this.clearContext(s), a; }, _shouldClearSelection: function (t, e) { var i = this.getActiveGroup(), r = this.getActiveObject(); return !e || e && i && !i.contains(e) && i !== e && !t[this.selectionKey] || e && !e.evented || e && !e.selectable && r && r !== e; }, _shouldCenterTransform: function (t) { if (t) {
        var e, i = this._currentTransform;
        return "scale" === i.action || "scaleX" === i.action || "scaleY" === i.action ? e = this.centeredScaling || t.centeredScaling : "rotate" === i.action && (e = this.centeredRotation || t.centeredRotation), e ? !i.altKey : i.altKey;
    } }, _getOriginFromCorner: function (t, e) { var i = { x: t.originX, y: t.originY }; return "ml" === e || "tl" === e || "bl" === e ? i.x = "right" : "mr" !== e && "tr" !== e && "br" !== e || (i.x = "left"), "tl" === e || "mt" === e || "tr" === e ? i.y = "bottom" : "bl" !== e && "mb" !== e && "br" !== e || (i.y = "top"), i; }, _getActionFromCorner: function (t, e, i) { if (!e)
        return "drag"; switch (e) {
        case "mtr": return "rotate";
        case "ml":
        case "mr": return i[this.altActionKey] ? "skewY" : "scaleX";
        case "mt":
        case "mb": return i[this.altActionKey] ? "skewX" : "scaleY";
        default: return "scale";
    } }, _setupCurrentTransform: function (t, i) { if (i) {
        var r = this.getPointer(t), n = i._findTargetCorner(this.getPointer(t, !0)), s = this._getActionFromCorner(i, n, t), o = this._getOriginFromCorner(i, n);
        this._currentTransform = { target: i, action: s, corner: n, scaleX: i.scaleX, scaleY: i.scaleY, skewX: i.skewX, skewY: i.skewY, offsetX: r.x - i.left, offsetY: r.y - i.top, originX: o.x, originY: o.y, ex: r.x, ey: r.y, lastX: r.x, lastY: r.y, left: i.left, top: i.top, theta: e(i.angle), width: i.width * i.scaleX, mouseXSign: 1, mouseYSign: 1, shiftKey: t.shiftKey, altKey: t[this.centeredKey] }, this._currentTransform.original = { left: i.left, top: i.top, scaleX: i.scaleX, scaleY: i.scaleY, skewX: i.skewX, skewY: i.skewY, originX: o.x, originY: o.y }, this._resetCurrentTransform();
    } }, _translateObject: function (t, e) { var i = this._currentTransform, r = i.target, n = t - i.offsetX, s = e - i.offsetY, o = !r.get("lockMovementX") && r.left !== n, a = !r.get("lockMovementY") && r.top !== s; return o && r.set("left", n), a && r.set("top", s), o || a; }, _changeSkewTransformOrigin: function (t, e, i) { var r = "originX", n = { 0: "center" }, s = e.target.skewX, o = "left", a = "right", h = "mt" === e.corner || "ml" === e.corner ? 1 : -1, c = 1; t = t > 0 ? 1 : -1, "y" === i && (s = e.target.skewY, o = "top", a = "bottom", r = "originY"), n[-1] = o, n[1] = a, e.target.flipX && (c *= -1), e.target.flipY && (c *= -1), 0 === s ? (e.skewSign = -h * t * c, e[r] = n[-t]) : (s = s > 0 ? 1 : -1, e.skewSign = s, e[r] = n[s * h * c]); }, _skewObject: function (t, e, i) { var r = this._currentTransform, n = r.target, s = !1, o = n.get("lockSkewingX"), a = n.get("lockSkewingY"); if (o && "x" === i || a && "y" === i)
        return !1; var h, c, l = n.getCenterPoint(), u = n.toLocalPoint(new fabric.Point(t, e), "center", "center")[i], f = n.toLocalPoint(new fabric.Point(r.lastX, r.lastY), "center", "center")[i], d = n._getTransformedDimensions(); return this._changeSkewTransformOrigin(u - f, r, i), h = n.toLocalPoint(new fabric.Point(t, e), r.originX, r.originY)[i], c = n.translateToOriginPoint(l, r.originX, r.originY), s = this._setObjectSkew(h, r, i, d), r.lastX = t, r.lastY = e, n.setPositionByOrigin(c, r.originX, r.originY), s; }, _setObjectSkew: function (t, e, i, r) { var n, s, o, a, h, c, l, u, f, d = e.target, g = !1, p = e.skewSign; return "x" === i ? (a = "y", h = "Y", c = "X", u = 0, f = d.skewY) : (a = "x", h = "X", c = "Y", u = d.skewX, f = 0), o = d._getTransformedDimensions(u, f), l = 2 * Math.abs(t) - o[i], l <= 2 ? n = 0 : (n = p * Math.atan(l / d["scale" + c] / (o[a] / d["scale" + h])), n = fabric.util.radiansToDegrees(n)), g = d["skew" + c] !== n, d.set("skew" + c, n), 0 !== d["skew" + h] && (s = d._getTransformedDimensions(), n = r[a] / s[a] * d["scale" + h], d.set("scale" + h, n)), g; }, _scaleObject: function (t, e, i) { var r = this._currentTransform, n = r.target, s = n.get("lockScalingX"), o = n.get("lockScalingY"), a = n.get("lockScalingFlip"); if (s && o)
        return !1; var h = n.translateToOriginPoint(n.getCenterPoint(), r.originX, r.originY), c = n.toLocalPoint(new fabric.Point(t, e), r.originX, r.originY), l = n._getTransformedDimensions(), u = !1; return this._setLocalMouse(c, r), u = this._setObjectScale(c, r, s, o, i, a, l), n.setPositionByOrigin(h, r.originX, r.originY), u; }, _setObjectScale: function (t, e, i, r, n, s, o) { var a, h, c, l, u = e.target, f = !1, d = !1, g = !1; return c = t.x * u.scaleX / o.x, l = t.y * u.scaleY / o.y, a = u.scaleX !== c, h = u.scaleY !== l, s && c <= 0 && c < u.scaleX && (f = !0), s && l <= 0 && l < u.scaleY && (d = !0), "equally" !== n || i || r ? n ? "x" !== n || u.get("lockUniScaling") ? "y" !== n || u.get("lockUniScaling") || d || r || u.set("scaleY", l) && (g = g || h) : f || i || u.set("scaleX", c) && (g = g || a) : (f || i || u.set("scaleX", c) && (g = g || a), d || r || u.set("scaleY", l) && (g = g || h)) : f || d || (g = this._scaleObjectEqually(t, u, e, o)), e.newScaleX = c, e.newScaleY = l, f || d || this._flipObject(e, n), g; }, _scaleObjectEqually: function (t, e, i, r) { var n, s = t.y + t.x, o = r.y * i.original.scaleY / e.scaleY + r.x * i.original.scaleX / e.scaleX; return i.newScaleX = i.original.scaleX * s / o, i.newScaleY = i.original.scaleY * s / o, n = i.newScaleX !== e.scaleX || i.newScaleY !== e.scaleY, e.set("scaleX", i.newScaleX), e.set("scaleY", i.newScaleY), n; }, _flipObject: function (t, e) { t.newScaleX < 0 && "y" !== e && ("left" === t.originX ? t.originX = "right" : "right" === t.originX && (t.originX = "left")), t.newScaleY < 0 && "x" !== e && ("top" === t.originY ? t.originY = "bottom" : "bottom" === t.originY && (t.originY = "top")); }, _setLocalMouse: function (t, e) { var i = e.target; "right" === e.originX ? t.x *= -1 : "center" === e.originX && (t.x *= 2 * e.mouseXSign, t.x < 0 && (e.mouseXSign = -e.mouseXSign)), "bottom" === e.originY ? t.y *= -1 : "center" === e.originY && (t.y *= 2 * e.mouseYSign, t.y < 0 && (e.mouseYSign = -e.mouseYSign)), n(t.x) > i.padding ? t.x < 0 ? t.x += i.padding : t.x -= i.padding : t.x = 0, n(t.y) > i.padding ? t.y < 0 ? t.y += i.padding : t.y -= i.padding : t.y = 0; }, _rotateObject: function (t, e) { var n = this._currentTransform; if (n.target.get("lockRotation"))
        return !1; var s = r(n.ey - n.top, n.ex - n.left), o = r(e - n.top, t - n.left), a = i(o - s + n.theta); return a < 0 && (a = 360 + a), n.target.angle = a % 360, !0; }, setCursor: function (t) { this.upperCanvasEl.style.cursor = t; }, _resetObjectTransform: function (t) { t.scaleX = 1, t.scaleY = 1, t.skewX = 0, t.skewY = 0, t.setAngle(0); }, _drawSelection: function (t) { var e = this._groupSelector, i = e.left, r = e.top, a = n(i), h = n(r); if (this.selectionColor && (t.fillStyle = this.selectionColor, t.fillRect(e.ex - (i > 0 ? 0 : -i), e.ey - (r > 0 ? 0 : -r), a, h)), this.selectionLineWidth && this.selectionBorderColor)
        if (t.lineWidth = this.selectionLineWidth, t.strokeStyle = this.selectionBorderColor, this.selectionDashArray.length > 1 && !s) {
            var c = e.ex + o - (i > 0 ? 0 : a), l = e.ey + o - (r > 0 ? 0 : h);
            t.beginPath(), fabric.util.drawDashedLine(t, c, l, c + a, l, this.selectionDashArray), fabric.util.drawDashedLine(t, c, l + h - 1, c + a, l + h - 1, this.selectionDashArray), fabric.util.drawDashedLine(t, c, l, c, l + h, this.selectionDashArray), fabric.util.drawDashedLine(t, c + a - 1, l, c + a - 1, l + h, this.selectionDashArray), t.closePath(), t.stroke();
        }
        else
            fabric.Object.prototype._setLineDash.call(this, t, this.selectionDashArray), t.strokeRect(e.ex + o - (i > 0 ? 0 : a), e.ey + o - (r > 0 ? 0 : h), a, h); }, findTarget: function (t, e) { if (!this.skipTargetFind) {
        var i, r = !0, n = this.getPointer(t, r), s = this.getActiveGroup(), o = this.getActiveObject();
        if (s && !e && this._checkTarget(n, s))
            return this._fireOverOutEvents(s, t), s;
        if (o && o._findTargetCorner(n))
            return this._fireOverOutEvents(o, t), o;
        if (o && this._checkTarget(n, o)) {
            if (!this.preserveObjectStacking)
                return this._fireOverOutEvents(o, t), o;
            i = o;
        }
        this.targets = [];
        var a = this._searchPossibleTargets(this._objects, n);
        return t[this.altSelectionKey] && a && i && a !== i && (a = i), this._fireOverOutEvents(a, t), a;
    } }, _fireOverOutEvents: function (t, e) { t ? this._hoveredTarget !== t && (this._hoveredTarget && (this.fire("mouse:out", { target: this._hoveredTarget, e: e }), this._hoveredTarget.fire("mouseout")), this.fire("mouse:over", { target: t, e: e }), t.fire("mouseover"), this._hoveredTarget = t) : this._hoveredTarget && (this.fire("mouse:out", { target: this._hoveredTarget, e: e }), this._hoveredTarget.fire("mouseout"), this._hoveredTarget = null); }, _checkTarget: function (t, e) { if (e && e.visible && e.evented && this.containsPoint(null, e, t)) {
        if (!this.perPixelTargetFind && !e.perPixelTargetFind || e.isEditing)
            return !0;
        var i = this.isTargetTransparent(e, t.x, t.y);
        if (!i)
            return !0;
    } }, _searchPossibleTargets: function (t, e) { for (var i, r, n, s = t.length; s--;)
        if (this._checkTarget(e, t[s])) {
            i = t[s], "group" === i.type && i.subTargetCheck && (r = this._normalizePointer(i, e), n = this._searchPossibleTargets(i._objects, r), n && this.targets.push(n));
            break;
        } return i; }, restorePointerVpt: function (t) { return fabric.util.transformPoint(t, fabric.util.invertTransform(this.viewportTransform)); }, getPointer: function (e, i, r) { r || (r = this.upperCanvasEl); var n, s = t(e), o = r.getBoundingClientRect(), a = o.width || 0, h = o.height || 0; return a && h || ("top" in o && "bottom" in o && (h = Math.abs(o.top - o.bottom)), "right" in o && "left" in o && (a = Math.abs(o.right - o.left))), this.calcOffset(), s.x = s.x - this._offset.left, s.y = s.y - this._offset.top, i || (s = this.restorePointerVpt(s)), n = 0 === a || 0 === h ? { width: 1, height: 1 } : { width: r.width / a, height: r.height / h }, { x: s.x * n.width, y: s.y * n.height }; }, _createUpperCanvas: function () { var t = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, ""); this.upperCanvasEl = this._createCanvasElement(), fabric.util.addClass(this.upperCanvasEl, "upper-canvas " + t), this.wrapperEl.appendChild(this.upperCanvasEl), this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl), this._applyCanvasStyle(this.upperCanvasEl), this.contextTop = this.upperCanvasEl.getContext("2d"); }, _createCacheCanvas: function () { this.cacheCanvasEl = this._createCanvasElement(), this.cacheCanvasEl.setAttribute("width", this.width), this.cacheCanvasEl.setAttribute("height", this.height), this.contextCache = this.cacheCanvasEl.getContext("2d"); }, _initWrapperElement: function () { this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, "div", { class: this.containerClass }), fabric.util.setStyle(this.wrapperEl, { width: this.getWidth() + "px", height: this.getHeight() + "px", position: "relative" }), fabric.util.makeElementUnselectable(this.wrapperEl); }, _applyCanvasStyle: function (t) { var e = this.getWidth() || t.width, i = this.getHeight() || t.height; fabric.util.setStyle(t, { position: "absolute", width: e + "px", height: i + "px", left: 0, top: 0 }), t.width = e, t.height = i, fabric.util.makeElementUnselectable(t); }, _copyCanvasStyle: function (t, e) { e.style.cssText = t.style.cssText; }, getSelectionContext: function () { return this.contextTop; }, getSelectionElement: function () { return this.upperCanvasEl; }, _setActiveObject: function (t) { this._activeObject && this._activeObject.set("active", !1), this._activeObject = t, t.set("active", !0); }, setActiveObject: function (t, e) { return this._setActiveObject(t), this.renderAll(), this.fire("object:selected", { target: t, e: e }), t.fire("selected", { e: e }), this; }, getActiveObject: function () { return this._activeObject; }, _onObjectRemoved: function (t) { this.getActiveObject() === t && (this.fire("before:selection:cleared", { target: t }), this._discardActiveObject(), this.fire("selection:cleared", { target: t }), t.fire("deselected")), this.callSuper("_onObjectRemoved", t); }, _discardActiveObject: function () { this._activeObject && this._activeObject.set("active", !1), this._activeObject = null; }, discardActiveObject: function (t) { var e = this._activeObject; return this.fire("before:selection:cleared", { target: e, e: t }), this._discardActiveObject(), this.fire("selection:cleared", { e: t }), e && e.fire("deselected", { e: t }), this; }, _setActiveGroup: function (t) { this._activeGroup = t, t && t.set("active", !0); }, setActiveGroup: function (t, e) { return this._setActiveGroup(t), t && (this.fire("object:selected", { target: t, e: e }), t.fire("selected", { e: e })), this; }, getActiveGroup: function () { return this._activeGroup; }, _discardActiveGroup: function () { var t = this.getActiveGroup(); t && t.destroy(), this.setActiveGroup(null); }, discardActiveGroup: function (t) { var e = this.getActiveGroup(); return this.fire("before:selection:cleared", { e: t, target: e }), this._discardActiveGroup(), this.fire("selection:cleared", { e: t }), this; }, deactivateAll: function () { for (var t = this.getObjects(), e = 0, i = t.length; e < i; e++)
        t[e].set("active", !1); return this._discardActiveGroup(), this._discardActiveObject(), this; }, deactivateAllWithDispatch: function (t) { var e = this.getActiveGroup(), i = this.getActiveObject(); return (i || e) && this.fire("before:selection:cleared", { target: i || e, e: t }), this.deactivateAll(), (i || e) && (this.fire("selection:cleared", { e: t, target: i }), i && i.fire("deselected")), this; }, dispose: function () { this.callSuper("dispose"); var t = this.wrapperEl; return this.removeListeners(), t.removeChild(this.upperCanvasEl), t.removeChild(this.lowerCanvasEl), delete this.upperCanvasEl, t.parentNode && t.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl), delete this.wrapperEl, this; }, clear: function () { return this.discardActiveGroup(), this.discardActiveObject(), this.clearContext(this.contextTop), this.callSuper("clear"); }, drawControls: function (t) { var e = this.getActiveGroup(); e ? e._renderControls(t) : this._drawObjectsControls(t); }, _drawObjectsControls: function (t) { for (var e = 0, i = this._objects.length; e < i; ++e)
        this._objects[e] && this._objects[e].active && this._objects[e]._renderControls(t); }, _toObject: function (t, e, i) { var r = this._realizeGroupTransformOnObject(t), n = this.callSuper("_toObject", t, e, i); return this._unwindGroupTransformOnObject(t, r), n; }, _realizeGroupTransformOnObject: function (t) { var e = ["angle", "flipX", "flipY", "height", "left", "scaleX", "scaleY", "top", "width"]; if (t.group && t.group === this.getActiveGroup()) {
        var i = {};
        return e.forEach(function (e) { i[e] = t[e]; }), this.getActiveGroup().realizeTransform(t), i;
    } return null; }, _unwindGroupTransformOnObject: function (t, e) { e && t.set(e); }, _setSVGObject: function (t, e, i) { var r; r = this._realizeGroupTransformOnObject(e), this.callSuper("_setSVGObject", t, e, i), this._unwindGroupTransformOnObject(e, r); } }); for (var a in fabric.StaticCanvas)
    "prototype" !== a && (fabric.Canvas[a] = fabric.StaticCanvas[a]); fabric.isTouchSupported && (fabric.Canvas.prototype._setCursorFromEvent = function () { }), fabric.Element = fabric.Canvas; }(), function () {
    var t = { mt: 0, tr: 1, mr: 2, br: 3, mb: 4, bl: 5, ml: 6, tl: 7 }, e = fabric.util.addListener, i = fabric.util.removeListener;
    fabric.util.object.extend(fabric.Canvas.prototype, { cursorMap: ["n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize"], _initEventListeners: function () { this._bindEvents(), e(fabric.window, "resize", this._onResize), e(this.upperCanvasEl, "mousedown", this._onMouseDown), e(this.upperCanvasEl, "mousemove", this._onMouseMove), e(this.upperCanvasEl, "mouseout", this._onMouseOut), e(this.upperCanvasEl, "wheel", this._onMouseWheel), e(this.upperCanvasEl, "contextmenu", this._onContextMenu), e(this.upperCanvasEl, "touchstart", this._onMouseDown), e(this.upperCanvasEl, "touchmove", this._onMouseMove), "undefined" != typeof eventjs && "add" in eventjs && (eventjs.add(this.upperCanvasEl, "gesture", this._onGesture), eventjs.add(this.upperCanvasEl, "drag", this._onDrag), eventjs.add(this.upperCanvasEl, "orientation", this._onOrientationChange), eventjs.add(this.upperCanvasEl, "shake", this._onShake), eventjs.add(this.upperCanvasEl, "longpress", this._onLongPress)); }, _bindEvents: function () {
            this._onMouseDown = this._onMouseDown.bind(this), this._onMouseMove = this._onMouseMove.bind(this), this._onMouseUp = this._onMouseUp.bind(this), this._onResize = this._onResize.bind(this), this._onGesture = this._onGesture.bind(this), this._onDrag = this._onDrag.bind(this),
                this._onShake = this._onShake.bind(this), this._onLongPress = this._onLongPress.bind(this), this._onOrientationChange = this._onOrientationChange.bind(this), this._onMouseWheel = this._onMouseWheel.bind(this), this._onMouseOut = this._onMouseOut.bind(this), this._onContextMenu = this._onContextMenu.bind(this);
        }, removeListeners: function () { i(fabric.window, "resize", this._onResize), i(this.upperCanvasEl, "mousedown", this._onMouseDown), i(this.upperCanvasEl, "mousemove", this._onMouseMove), i(this.upperCanvasEl, "mouseout", this._onMouseOut), i(this.upperCanvasEl, "wheel", this._onMouseWheel), i(this.upperCanvasEl, "contextmenu", this._onContextMenu), i(this.upperCanvasEl, "touchstart", this._onMouseDown), i(this.upperCanvasEl, "touchmove", this._onMouseMove), "undefined" != typeof eventjs && "remove" in eventjs && (eventjs.remove(this.upperCanvasEl, "gesture", this._onGesture), eventjs.remove(this.upperCanvasEl, "drag", this._onDrag), eventjs.remove(this.upperCanvasEl, "orientation", this._onOrientationChange), eventjs.remove(this.upperCanvasEl, "shake", this._onShake), eventjs.remove(this.upperCanvasEl, "longpress", this._onLongPress)); }, _onGesture: function (t, e) { this.__onTransformGesture && this.__onTransformGesture(t, e); }, _onDrag: function (t, e) { this.__onDrag && this.__onDrag(t, e); }, _onMouseWheel: function (t) { this.__onMouseWheel(t); }, _onMouseOut: function (t) { var e = this._hoveredTarget; this.fire("mouse:out", { target: e, e: t }), this._hoveredTarget = null, e && e.fire("mouseout", { e: t }); }, _onOrientationChange: function (t, e) { this.__onOrientationChange && this.__onOrientationChange(t, e); }, _onShake: function (t, e) { this.__onShake && this.__onShake(t, e); }, _onLongPress: function (t, e) { this.__onLongPress && this.__onLongPress(t, e); }, _onContextMenu: function (t) { return this.stopContextMenu && (t.stopPropagation(), t.preventDefault()), !1; }, _onMouseDown: function (t) { this.__onMouseDown(t), e(fabric.document, "touchend", this._onMouseUp), e(fabric.document, "touchmove", this._onMouseMove), i(this.upperCanvasEl, "mousemove", this._onMouseMove), i(this.upperCanvasEl, "touchmove", this._onMouseMove), "touchstart" === t.type ? i(this.upperCanvasEl, "mousedown", this._onMouseDown) : (e(fabric.document, "mouseup", this._onMouseUp), e(fabric.document, "mousemove", this._onMouseMove)); }, _onMouseUp: function (t) { if (this.__onMouseUp(t), i(fabric.document, "mouseup", this._onMouseUp), i(fabric.document, "touchend", this._onMouseUp), i(fabric.document, "mousemove", this._onMouseMove), i(fabric.document, "touchmove", this._onMouseMove), e(this.upperCanvasEl, "mousemove", this._onMouseMove), e(this.upperCanvasEl, "touchmove", this._onMouseMove), "touchend" === t.type) {
            var r = this;
            setTimeout(function () { e(r.upperCanvasEl, "mousedown", r._onMouseDown); }, 400);
        } }, _onMouseMove: function (t) { !this.allowTouchScrolling && t.preventDefault && t.preventDefault(), this.__onMouseMove(t); }, _onResize: function () { this.calcOffset(); }, _shouldRender: function (t, e) { var i = this.getActiveGroup() || this.getActiveObject(); return !!(t && (t.isMoving || t !== i) || !t && i || !t && !i && !this._groupSelector || e && this._previousPointer && this.selection && (e.x !== this._previousPointer.x || e.y !== this._previousPointer.y)); }, __onMouseUp: function (t) { var e, i = !0, r = this._currentTransform, n = this._groupSelector, s = !n || 0 === n.left && 0 === n.top; if (this.isDrawingMode && this._isCurrentlyDrawing)
            return void this._onMouseUpInDrawingMode(t); r && (this._finalizeCurrentTransform(), i = !r.actionPerformed), e = i ? this.findTarget(t, !0) : r.target; var o = this._shouldRender(e, this.getPointer(t)); e || !s ? this._maybeGroupObjects(t) : (this._groupSelector = null, this._currentTransform = null), e && (e.isMoving = !1), this._handleCursorAndEvent(t, e, "up"), e && (e.__corner = 0), o && this.renderAll(); }, _handleCursorAndEvent: function (t, e, i) { this._setCursorFromEvent(t, e), this._handleEvent(t, i, e ? e : null); }, _handleEvent: function (t, e, i) { var r = void 0 === typeof i ? this.findTarget(t) : i, n = this.targets || [], s = { e: t, target: r, subTargets: n }; this.fire("mouse:" + e, s), r && r.fire("mouse" + e, s); for (var o = 0; o < n.length; o++)
            n[o].fire("mouse" + e, s); }, _finalizeCurrentTransform: function () { var t = this._currentTransform, e = t.target; e._scaling && (e._scaling = !1), e.setCoords(), this._restoreOriginXY(e), (t.actionPerformed || this.stateful && e.hasStateChanged()) && (this.fire("object:modified", { target: e }), e.fire("modified")); }, _restoreOriginXY: function (t) { if (this._previousOriginX && this._previousOriginY) {
            var e = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY);
            t.originX = this._previousOriginX, t.originY = this._previousOriginY, t.left = e.x, t.top = e.y, this._previousOriginX = null, this._previousOriginY = null;
        } }, _onMouseDownInDrawingMode: function (t) { this._isCurrentlyDrawing = !0, this.discardActiveObject(t).renderAll(), this.clipTo && fabric.util.clipContext(this, this.contextTop); var e = this.getPointer(t); this.freeDrawingBrush.onMouseDown(e), this._handleEvent(t, "down"); }, _onMouseMoveInDrawingMode: function (t) { if (this._isCurrentlyDrawing) {
            var e = this.getPointer(t);
            this.freeDrawingBrush.onMouseMove(e);
        } this.setCursor(this.freeDrawingCursor), this._handleEvent(t, "move"); }, _onMouseUpInDrawingMode: function (t) { this._isCurrentlyDrawing = !1, this.clipTo && this.contextTop.restore(), this.freeDrawingBrush.onMouseUp(), this._handleEvent(t, "up"); }, __onMouseDown: function (t) { var e = "which" in t ? 3 === t.which : 2 === t.button; if (e)
            return void (this.fireRightClick && this._handleEvent(t, "down", i ? i : null)); if (this.isDrawingMode)
            return void this._onMouseDownInDrawingMode(t); if (!this._currentTransform) {
            var i = this.findTarget(t), r = this.getPointer(t, !0);
            this._previousPointer = r;
            var n = this._shouldRender(i, r), s = this._shouldGroup(t, i);
            this._shouldClearSelection(t, i) ? this._clearSelection(t, i, r) : s && (this._handleGrouping(t, i), i = this.getActiveGroup()), i && (!i.selectable || !i.__corner && s || (this._beforeTransform(t, i), this._setupCurrentTransform(t, i)), i !== this.getActiveGroup() && i !== this.getActiveObject() && (this.deactivateAll(), i.selectable && this.setActiveObject(i, t))), this._handleEvent(t, "down", i ? i : null), n && this.renderAll();
        } }, _beforeTransform: function (t, e) { this.stateful && e.saveState(), e._findTargetCorner(this.getPointer(t)) && this.onBeforeScaleRotate(e); }, _clearSelection: function (t, e, i) { this.deactivateAllWithDispatch(t), e && e.selectable ? this.setActiveObject(e, t) : this.selection && (this._groupSelector = { ex: i.x, ey: i.y, top: 0, left: 0 }); }, _setOriginToCenter: function (t) { this._previousOriginX = this._currentTransform.target.originX, this._previousOriginY = this._currentTransform.target.originY; var e = t.getCenterPoint(); t.originX = "center", t.originY = "center", t.left = e.x, t.top = e.y, this._currentTransform.left = t.left, this._currentTransform.top = t.top; }, _setCenterToOrigin: function (t) { var e = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY); t.originX = this._previousOriginX, t.originY = this._previousOriginY, t.left = e.x, t.top = e.y, this._previousOriginX = null, this._previousOriginY = null; }, __onMouseMove: function (t) { var e, i; if (this.isDrawingMode)
            return void this._onMouseMoveInDrawingMode(t); if (!("undefined" != typeof t.touches && t.touches.length > 1)) {
            var r = this._groupSelector;
            r ? (i = this.getPointer(t, !0), r.left = i.x - r.ex, r.top = i.y - r.ey, this.renderTop()) : this._currentTransform ? this._transformObject(t) : (e = this.findTarget(t), this._setCursorFromEvent(t, e)), this._handleEvent(t, "move", e ? e : null);
        } }, __onMouseWheel: function (t) { this.fire("mouse:wheel", { e: t }); }, _transformObject: function (t) { var e = this.getPointer(t), i = this._currentTransform; i.reset = !1, i.target.isMoving = !0, this._beforeScaleTransform(t, i), this._performTransformAction(t, i, e), i.actionPerformed && this.renderAll(); }, _performTransformAction: function (t, e, i) { var r = i.x, n = i.y, s = e.target, o = e.action, a = !1; "rotate" === o ? (a = this._rotateObject(r, n)) && this._fire("rotating", s, t) : "scale" === o ? (a = this._onScale(t, e, r, n)) && this._fire("scaling", s, t) : "scaleX" === o ? (a = this._scaleObject(r, n, "x")) && this._fire("scaling", s, t) : "scaleY" === o ? (a = this._scaleObject(r, n, "y")) && this._fire("scaling", s, t) : "skewX" === o ? (a = this._skewObject(r, n, "x")) && this._fire("skewing", s, t) : "skewY" === o ? (a = this._skewObject(r, n, "y")) && this._fire("skewing", s, t) : (a = this._translateObject(r, n), a && (this._fire("moving", s, t), this.setCursor(s.moveCursor || this.moveCursor))), e.actionPerformed = a; }, _fire: function (t, e, i) { this.fire("object:" + t, { target: e, e: i }), e.fire(t, { e: i }); }, _beforeScaleTransform: function (t, e) { if ("scale" === e.action || "scaleX" === e.action || "scaleY" === e.action) {
            var i = this._shouldCenterTransform(e.target);
            (i && ("center" !== e.originX || "center" !== e.originY) || !i && "center" === e.originX && "center" === e.originY) && (this._resetCurrentTransform(), e.reset = !0);
        } }, _onScale: function (t, e, i, r) { return !t[this.uniScaleKey] && !this.uniScaleTransform || e.target.get("lockUniScaling") ? (e.reset || "scale" !== e.currentAction || this._resetCurrentTransform(), e.currentAction = "scaleEqually", this._scaleObject(i, r, "equally")) : (e.currentAction = "scale", this._scaleObject(i, r)); }, _setCursorFromEvent: function (t, e) { if (!e)
            return this.setCursor(this.defaultCursor), !1; var i = e.hoverCursor || this.hoverCursor; if (e.selectable) {
            var r = this.getActiveGroup(), n = e._findTargetCorner && (!r || !r.contains(e)) && e._findTargetCorner(this.getPointer(t, !0));
            n ? this._setCornerCursor(n, e, t) : this.setCursor(i);
        }
        else
            this.setCursor(i); return !0; }, _setCornerCursor: function (e, i, r) { if (e in t)
            this.setCursor(this._getRotatedCornerCursor(e, i, r));
        else {
            if ("mtr" !== e || !i.hasRotatingPoint)
                return this.setCursor(this.defaultCursor), !1;
            this.setCursor(this.rotationCursor);
        } }, _getRotatedCornerCursor: function (e, i, r) { var n = Math.round(i.getAngle() % 360 / 45); return n < 0 && (n += 8), n += t[e], r[this.altActionKey] && t[e] % 2 === 0 && (n += 2), n %= 8, this.cursorMap[n]; } });
}(), function () { var t = Math.min, e = Math.max; fabric.util.object.extend(fabric.Canvas.prototype, { _shouldGroup: function (t, e) { var i = this.getActiveObject(); return t[this.selectionKey] && e && e.selectable && (this.getActiveGroup() || i && i !== e) && this.selection; }, _handleGrouping: function (t, e) { var i = this.getActiveGroup(); (e !== i || (e = this.findTarget(t, !0))) && (i ? this._updateActiveGroup(e, t) : this._createActiveGroup(e, t), this._activeGroup && this._activeGroup.saveCoords()); }, _updateActiveGroup: function (t, e) { var i = this.getActiveGroup(); if (i.contains(t)) {
        if (i.removeWithUpdate(t), t.set("active", !1), 1 === i.size())
            return this.discardActiveGroup(e), void this.setActiveObject(i.item(0));
    }
    else
        i.addWithUpdate(t); this.fire("selection:created", { target: i, e: e }), i.set("active", !0); }, _createActiveGroup: function (t, e) { if (this._activeObject && t !== this._activeObject) {
        var i = this._createGroup(t);
        i.addWithUpdate(), this.setActiveGroup(i), this._activeObject = null, this.fire("selection:created", { target: i, e: e });
    } t.set("active", !0); }, _createGroup: function (t) { var e = this.getObjects(), i = e.indexOf(this._activeObject) < e.indexOf(t), r = i ? [this._activeObject, t] : [t, this._activeObject]; return this._activeObject.isEditing && this._activeObject.exitEditing(), new fabric.Group(r, { canvas: this }); }, _groupSelectedObjects: function (t) { var e = this._collectObjects(); 1 === e.length ? this.setActiveObject(e[0], t) : e.length > 1 && (e = new fabric.Group(e.reverse(), { canvas: this }), e.addWithUpdate(), this.setActiveGroup(e, t), e.saveCoords(), this.fire("selection:created", { target: e }), this.renderAll()); }, _collectObjects: function () { for (var i, r = [], n = this._groupSelector.ex, s = this._groupSelector.ey, o = n + this._groupSelector.left, a = s + this._groupSelector.top, h = new fabric.Point(t(n, o), t(s, a)), c = new fabric.Point(e(n, o), e(s, a)), l = n === o && s === a, u = this._objects.length; u-- && (i = this._objects[u], !(i && i.selectable && i.visible && (i.intersectsWithRect(h, c) || i.isContainedWithinRect(h, c) || i.containsPoint(h) || i.containsPoint(c)) && (i.set("active", !0), r.push(i), l)));)
        ; return r; }, _maybeGroupObjects: function (t) { this.selection && this._groupSelector && this._groupSelectedObjects(t); var e = this.getActiveGroup(); e && (e.setObjectsCoords().setCoords(), e.isMoving = !1, this.setCursor(this.defaultCursor)), this._groupSelector = null, this._currentTransform = null; } }); }(), function () { var t = fabric.StaticCanvas.supports("toDataURLWithQuality"); fabric.util.object.extend(fabric.StaticCanvas.prototype, { toDataURL: function (t) { t || (t = {}); var e = t.format || "png", i = t.quality || 1, r = t.multiplier || 1, n = { left: t.left || 0, top: t.top || 0, width: t.width || 0, height: t.height || 0 }; return this.__toDataURLWithMultiplier(e, i, n, r); }, __toDataURLWithMultiplier: function (t, e, i, r) { var n = this.getWidth(), s = this.getHeight(), o = (i.width || this.getWidth()) * r, a = (i.height || this.getHeight()) * r, h = this.getZoom(), c = h * r, l = this.viewportTransform, u = (l[4] - i.left) * r, f = (l[5] - i.top) * r, d = [c, 0, 0, c, u, f], g = this.interactive; this.viewportTransform = d, this.interactive && (this.interactive = !1), n !== o || s !== a ? this.setDimensions({ width: o, height: a }) : this.renderAll(); var p = this.__toDataURL(t, e, i); return g && (this.interactive = g), this.viewportTransform = l, this.setDimensions({ width: n, height: s }), p; }, __toDataURL: function (e, i) { var r = this.contextContainer.canvas; "jpg" === e && (e = "jpeg"); var n = t ? r.toDataURL("image/" + e, i) : r.toDataURL("image/" + e); return n; }, toDataURLWithMultiplier: function (t, e, i) { return this.toDataURL({ format: t, multiplier: e, quality: i }); } }); }(), fabric.util.object.extend(fabric.StaticCanvas.prototype, { loadFromDatalessJSON: function (t, e, i) { return this.loadFromJSON(t, e, i); }, loadFromJSON: function (t, e, i) { if (t) {
        var r = "string" == typeof t ? JSON.parse(t) : fabric.util.object.clone(t);
        this.clear();
        var n = this;
        return this._enlivenObjects(r.objects, function () { n._setBgOverlay(r, function () { delete r.objects, delete r.backgroundImage, delete r.overlayImage, delete r.background, delete r.overlay; for (var t in r)
            n[t] = r[t]; e && e(); }); }, i), this;
    } }, _setBgOverlay: function (t, e) { var i = this, r = { backgroundColor: !1, overlayColor: !1, backgroundImage: !1, overlayImage: !1 }; if (!(t.backgroundImage || t.overlayImage || t.background || t.overlay))
        return void (e && e()); var n = function () { r.backgroundImage && r.overlayImage && r.backgroundColor && r.overlayColor && (i.renderAll(), e && e()); }; this.__setBgOverlay("backgroundImage", t.backgroundImage, r, n), this.__setBgOverlay("overlayImage", t.overlayImage, r, n), this.__setBgOverlay("backgroundColor", t.background, r, n), this.__setBgOverlay("overlayColor", t.overlay, r, n), n(); }, __setBgOverlay: function (t, e, i, r) { var n = this; return e ? void ("backgroundImage" === t || "overlayImage" === t ? fabric.Image.fromObject(e, function (e) { n[t] = e, i[t] = !0, r && r(); }) : this["set" + fabric.util.string.capitalize(t, !0)](e, function () { i[t] = !0, r && r(); })) : void (i[t] = !0); }, _enlivenObjects: function (t, e, i) { var r = this; if (!t || 0 === t.length)
        return void (e && e()); var n = this.renderOnAddRemove; this.renderOnAddRemove = !1, fabric.util.enlivenObjects(t, function (t) { t.forEach(function (t, e) { r.insertAt(t, e); }), r.renderOnAddRemove = n, e && e(); }, null, i); }, _toDataURL: function (t, e) { this.clone(function (i) { e(i.toDataURL(t)); }); }, _toDataURLWithMultiplier: function (t, e, i) { this.clone(function (r) { i(r.toDataURLWithMultiplier(t, e)); }); }, clone: function (t, e) { var i = JSON.stringify(this.toJSON(e)); this.cloneWithoutData(function (e) { e.loadFromJSON(i, function () { t && t(e); }); }); }, cloneWithoutData: function (t) { var e = fabric.document.createElement("canvas"); e.width = this.getWidth(), e.height = this.getHeight(); var i = new fabric.Canvas(e); i.clipTo = this.clipTo, this.backgroundImage ? (i.setBackgroundImage(this.backgroundImage.src, function () { i.renderAll(), t && t(i); }), i.backgroundImageOpacity = this.backgroundImageOpacity, i.backgroundImageStretch = this.backgroundImageStretch) : t && t(i); } }), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.toFixed, n = e.util.string.capitalize, s = e.util.degreesToRadians, o = e.StaticCanvas.supports("setLineDash");
    e.Object || (e.Object = e.util.createClass({ type: "object", originX: "left", originY: "top", top: 0, left: 0, width: 0, height: 0, scaleX: 1, scaleY: 1, flipX: !1, flipY: !1, opacity: 1, angle: 0, skewX: 0, skewY: 0, cornerSize: 13, transparentCorners: !0, hoverCursor: null, moveCursor: null, padding: 0, borderColor: "rgba(102,153,255,0.75)", borderDashArray: null, cornerColor: "rgba(102,153,255,0.5)", cornerStrokeColor: null, cornerStyle: "rect", cornerDashArray: null, centeredScaling: !1, centeredRotation: !0, fill: "rgb(0,0,0)", fillRule: "nonzero", globalCompositeOperation: "source-over", backgroundColor: "", selectionBackgroundColor: "", stroke: null, strokeWidth: 1, strokeDashArray: null, strokeLineCap: "butt", strokeLineJoin: "miter", strokeMiterLimit: 10, shadow: null, borderOpacityWhenMoving: .4, borderScaleFactor: 1, transformMatrix: null, minScaleLimit: .01, selectable: !0, evented: !0, visible: !0, hasControls: !0, hasBorders: !0, hasRotatingPoint: !0, rotatingPointOffset: 40, perPixelTargetFind: !1, includeDefaultValues: !0, clipTo: null, lockMovementX: !1, lockMovementY: !1, lockRotation: !1, lockScalingX: !1, lockScalingY: !1, lockUniScaling: !1, lockSkewingX: !1, lockSkewingY: !1, lockScalingFlip: !1, excludeFromExport: !1, stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor skewX skewY".split(" "), initialize: function (t) { t && this.setOptions(t); }, _initGradient: function (t) { !t.fill || !t.fill.colorStops || t.fill instanceof e.Gradient || this.set("fill", new e.Gradient(t.fill)), !t.stroke || !t.stroke.colorStops || t.stroke instanceof e.Gradient || this.set("stroke", new e.Gradient(t.stroke)); }, _initPattern: function (t) { !t.fill || !t.fill.source || t.fill instanceof e.Pattern || this.set("fill", new e.Pattern(t.fill)), !t.stroke || !t.stroke.source || t.stroke instanceof e.Pattern || this.set("stroke", new e.Pattern(t.stroke)); }, _initClipping: function (t) { if (t.clipTo && "string" == typeof t.clipTo) {
            var i = e.util.getFunctionBody(t.clipTo);
            "undefined" != typeof i && (this.clipTo = new Function("ctx", i));
        } }, setOptions: function (t) { for (var e in t)
            this.set(e, t[e]); this._initGradient(t), this._initPattern(t), this._initClipping(t); }, transform: function (t, e) { this.group && !this.group._transformDone && this.group === this.canvas._activeGroup && this.group.transform(t); var i = e ? this._getLeftTopCoords() : this.getCenterPoint(); t.translate(i.x, i.y), t.rotate(s(this.angle)), t.scale(this.scaleX * (this.flipX ? -1 : 1), this.scaleY * (this.flipY ? -1 : 1)), t.transform(1, 0, Math.tan(s(this.skewX)), 1, 0, 0), t.transform(1, Math.tan(s(this.skewY)), 0, 1, 0, 0); }, toObject: function (t) { var i = e.Object.NUM_FRACTION_DIGITS, n = { type: this.type, originX: this.originX, originY: this.originY, left: r(this.left, i), top: r(this.top, i), width: r(this.width, i), height: r(this.height, i), fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill, stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke, strokeWidth: r(this.strokeWidth, i), strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray, strokeLineCap: this.strokeLineCap, strokeLineJoin: this.strokeLineJoin, strokeMiterLimit: r(this.strokeMiterLimit, i), scaleX: r(this.scaleX, i), scaleY: r(this.scaleY, i), angle: r(this.getAngle(), i), flipX: this.flipX, flipY: this.flipY, opacity: r(this.opacity, i), shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow, visible: this.visible, clipTo: this.clipTo && String(this.clipTo), backgroundColor: this.backgroundColor, fillRule: this.fillRule, globalCompositeOperation: this.globalCompositeOperation, transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix, skewX: r(this.skewX, i), skewY: r(this.skewY, i) }; return this.includeDefaultValues || (n = this._removeDefaultValues(n)), e.util.populateWithProperties(this, n, t), n; }, toDatalessObject: function (t) { return this.toObject(t); }, _removeDefaultValues: function (t) { var i = e.util.getKlass(t.type).prototype, r = i.stateProperties; return r.forEach(function (e) { t[e] === i[e] && delete t[e]; var r = "[object Array]" === Object.prototype.toString.call(t[e]) && "[object Array]" === Object.prototype.toString.call(i[e]); r && 0 === t[e].length && 0 === i[e].length && delete t[e]; }), t; }, toString: function () { return "#<fabric." + n(this.type) + ">"; }, get: function (t) { return this[t]; }, getObjectScaling: function () { var t = this.scaleX, e = this.scaleY; if (this.group) {
            var i = this.group.getObjectScaling();
            t *= i.scaleX, e *= i.scaleY;
        } return { scaleX: t, scaleY: e }; }, _setObject: function (t) { for (var e in t)
            this._set(e, t[e]); }, set: function (t, e) { return "object" == typeof t ? this._setObject(t) : "function" == typeof e && "clipTo" !== t ? this._set(t, e(this.get(t))) : this._set(t, e), this; }, _set: function (t, i) { var r = "scaleX" === t || "scaleY" === t; return r && (i = this._constrainScale(i)), "scaleX" === t && i < 0 ? (this.flipX = !this.flipX, i *= -1) : "scaleY" === t && i < 0 ? (this.flipY = !this.flipY, i *= -1) : "shadow" !== t || !i || i instanceof e.Shadow || (i = new e.Shadow(i)), this[t] = i, "width" !== t && "height" !== t || (this.minScaleLimit = Math.min(.1, 1 / Math.max(this.width, this.height))), this; }, setOnGroup: function () { }, toggle: function (t) { var e = this.get(t); return "boolean" == typeof e && this.set(t, !e), this; }, setSourcePath: function (t) { return this.sourcePath = t, this; }, getViewportTransform: function () { return this.canvas && this.canvas.viewportTransform ? this.canvas.viewportTransform : [1, 0, 0, 1, 0, 0]; }, render: function (t, i) { 0 === this.width && 0 === this.height || !this.visible || (t.save(), this._setupCompositeOperation(t), this.drawSelectionBackground(t), i || this.transform(t), this._setOpacity(t), this._setShadow(t), this._renderBackground(t), this._setStrokeStyles(t), this._setFillStyles(t), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.clipTo && e.util.clipContext(this, t), this._render(t, i), this.clipTo && t.restore(), t.restore()); }, _renderBackground: function (t) { this.backgroundColor && (t.fillStyle = this.backgroundColor, t.fillRect(-this.width / 2, -this.height / 2, this.width, this.height), this._removeShadow(t)); }, _setOpacity: function (t) { this.group && this.group._setOpacity(t), t.globalAlpha *= this.opacity; }, _setStrokeStyles: function (t) { this.stroke && (t.lineWidth = this.strokeWidth, t.lineCap = this.strokeLineCap, t.lineJoin = this.strokeLineJoin, t.miterLimit = this.strokeMiterLimit, t.strokeStyle = this.stroke.toLive ? this.stroke.toLive(t, this) : this.stroke); }, _setFillStyles: function (t) { this.fill && (t.fillStyle = this.fill.toLive ? this.fill.toLive(t, this) : this.fill); }, _setLineDash: function (t, e, i) { e && (1 & e.length && e.push.apply(e, e), o ? t.setLineDash(e) : i && i(t)); }, _renderControls: function (t, i) { if (!(!this.active || i || this.group && this.group !== this.canvas.getActiveGroup())) {
            var r, n = this.getViewportTransform(), o = this.calcTransformMatrix();
            o = e.util.multiplyTransformMatrices(n, o), r = e.util.qrDecompose(o), t.save(), t.translate(r.translateX, r.translateY), t.lineWidth = 1 * this.borderScaleFactor, t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, this.group && this.group === this.canvas.getActiveGroup() ? (t.rotate(s(r.angle)), this.drawBordersInGroup(t, r)) : (t.rotate(s(this.angle)), this.drawBorders(t)), this.drawControls(t), t.restore();
        } }, _setShadow: function (t) { if (this.shadow) {
            var i = this.canvas && this.canvas.viewportTransform[0] || 1, r = this.canvas && this.canvas.viewportTransform[3] || 1, n = this.getObjectScaling();
            this.canvas && this.canvas._isRetinaScaling() && (i *= e.devicePixelRatio, r *= e.devicePixelRatio), t.shadowColor = this.shadow.color, t.shadowBlur = this.shadow.blur * (i + r) * (n.scaleX + n.scaleY) / 4, t.shadowOffsetX = this.shadow.offsetX * i * n.scaleX, t.shadowOffsetY = this.shadow.offsetY * r * n.scaleY;
        } }, _removeShadow: function (t) { this.shadow && (t.shadowColor = "", t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0); }, _renderFill: function (t) { if (this.fill) {
            if (t.save(), this.fill.gradientTransform) {
                var e = this.fill.gradientTransform;
                t.transform.apply(t, e);
            }
            this.fill.toLive && t.translate(-this.width / 2 + this.fill.offsetX || 0, -this.height / 2 + this.fill.offsetY || 0), "evenodd" === this.fillRule ? t.fill("evenodd") : t.fill(), t.restore();
        } }, _renderStroke: function (t) { if (this.stroke && 0 !== this.strokeWidth) {
            if (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this._setLineDash(t, this.strokeDashArray, this._renderDashedStroke), this.stroke.gradientTransform) {
                var e = this.stroke.gradientTransform;
                t.transform.apply(t, e);
            }
            this.stroke.toLive && t.translate(-this.width / 2 + this.stroke.offsetX || 0, -this.height / 2 + this.stroke.offsetY || 0), t.stroke(), t.restore();
        } }, clone: function (t, i) { return this.constructor.fromObject ? this.constructor.fromObject(this.toObject(i), t) : new e.Object(this.toObject(i)); }, cloneAsImage: function (t, i) { var r = this.toDataURL(i); return e.util.loadImage(r, function (i) { t && t(new e.Image(i)); }), this; }, toDataURL: function (t) { t || (t = {}); var i = e.util.createCanvasElement(), r = this.getBoundingRect(); i.width = r.width, i.height = r.height, e.util.wrapElement(i, "div"); var n = new e.StaticCanvas(i, { enableRetinaScaling: t.enableRetinaScaling }); "jpg" === t.format && (t.format = "jpeg"), "jpeg" === t.format && (n.backgroundColor = "#fff"); var s = { active: this.get("active"), left: this.getLeft(), top: this.getTop() }; this.set("active", !1), this.setPositionByOrigin(new e.Point(n.getWidth() / 2, n.getHeight() / 2), "center", "center"); var o = this.canvas; n.add(this); var a = n.toDataURL(t); return this.set(s).setCoords(), this.canvas = o, n.dispose(), n = null, a; }, isType: function (t) { return this.type === t; }, complexity: function () { return 0; }, toJSON: function (t) { return this.toObject(t); }, setGradient: function (t, i) { i || (i = {}); var r = { colorStops: [] }; r.type = i.type || (i.r1 || i.r2 ? "radial" : "linear"), r.coords = { x1: i.x1, y1: i.y1, x2: i.x2, y2: i.y2 }, (i.r1 || i.r2) && (r.coords.r1 = i.r1, r.coords.r2 = i.r2), i.gradientTransform && (r.gradientTransform = i.gradientTransform); for (var n in i.colorStops) {
            var s = new e.Color(i.colorStops[n]);
            r.colorStops.push({ offset: n, color: s.toRgb(), opacity: s.getAlpha() });
        } return this.set(t, e.Gradient.forObject(this, r)); }, setPatternFill: function (t) { return this.set("fill", new e.Pattern(t)); }, setShadow: function (t) { return this.set("shadow", t ? new e.Shadow(t) : null); }, setColor: function (t) { return this.set("fill", t), this; }, setAngle: function (t) { var e = ("center" !== this.originX || "center" !== this.originY) && this.centeredRotation; return e && this._setOriginToCenter(), this.set("angle", t), e && this._resetOrigin(), this; }, centerH: function () { return this.canvas && this.canvas.centerObjectH(this), this; }, viewportCenterH: function () { return this.canvas && this.canvas.viewportCenterObjectH(this), this; }, centerV: function () { return this.canvas && this.canvas.centerObjectV(this), this; }, viewportCenterV: function () { return this.canvas && this.canvas.viewportCenterObjectV(this), this; }, center: function () { return this.canvas && this.canvas.centerObject(this), this; }, viewportCenter: function () { return this.canvas && this.canvas.viewportCenterObject(this), this; }, remove: function () { return this.canvas && this.canvas.remove(this), this; }, getLocalPointer: function (t, i) { i = i || this.canvas.getPointer(t); var r = new e.Point(i.x, i.y), n = this._getLeftTopCoords(); return this.angle && (r = e.util.rotatePoint(r, n, e.util.degreesToRadians(-this.angle))), { x: r.x - n.x, y: r.y - n.y }; }, _setupCompositeOperation: function (t) { this.globalCompositeOperation && (t.globalCompositeOperation = this.globalCompositeOperation); } }), e.util.createAccessors(e.Object), e.Object.prototype.rotate = e.Object.prototype.setAngle, i(e.Object.prototype, e.Observable), e.Object.NUM_FRACTION_DIGITS = 2, e.Object.__uid = 0);
}("undefined" != typeof exports ? exports : this), function () { var t = fabric.util.degreesToRadians, e = { left: -.5, center: 0, right: .5 }, i = { top: -.5, center: 0, bottom: .5 }; fabric.util.object.extend(fabric.Object.prototype, { translateToGivenOrigin: function (t, r, n, s, o) { var a, h, c, l = t.x, u = t.y; return "string" == typeof r ? r = e[r] : r -= .5, "string" == typeof s ? s = e[s] : s -= .5, a = s - r, "string" == typeof n ? n = i[n] : n -= .5, "string" == typeof o ? o = i[o] : o -= .5, h = o - n, (a || h) && (c = this._getTransformedDimensions(), l = t.x + a * c.x, u = t.y + h * c.y), new fabric.Point(l, u); }, translateToCenterPoint: function (e, i, r) { var n = this.translateToGivenOrigin(e, i, r, "center", "center"); return this.angle ? fabric.util.rotatePoint(n, e, t(this.angle)) : n; }, translateToOriginPoint: function (e, i, r) { var n = this.translateToGivenOrigin(e, "center", "center", i, r); return this.angle ? fabric.util.rotatePoint(n, e, t(this.angle)) : n; }, getCenterPoint: function () { var t = new fabric.Point(this.left, this.top); return this.translateToCenterPoint(t, this.originX, this.originY); }, getPointByOrigin: function (t, e) { var i = this.getCenterPoint(); return this.translateToOriginPoint(i, t, e); }, toLocalPoint: function (e, i, r) { var n, s, o = this.getCenterPoint(); return n = "undefined" != typeof i && "undefined" != typeof r ? this.translateToGivenOrigin(o, "center", "center", i, r) : new fabric.Point(this.left, this.top), s = new fabric.Point(e.x, e.y), this.angle && (s = fabric.util.rotatePoint(s, o, -t(this.angle))), s.subtractEquals(n); }, setPositionByOrigin: function (t, e, i) { var r = this.translateToCenterPoint(t, e, i), n = this.translateToOriginPoint(r, this.originX, this.originY); this.set("left", n.x), this.set("top", n.y); }, adjustPosition: function (i) { var r, n, s = t(this.angle), o = this.getWidth(), a = Math.cos(s) * o, h = Math.sin(s) * o; r = "string" == typeof this.originX ? e[this.originX] : this.originX - .5, n = "string" == typeof i ? e[i] : i - .5, this.left += a * (n - r), this.top += h * (n - r), this.setCoords(), this.originX = i; }, _setOriginToCenter: function () { this._originalOriginX = this.originX, this._originalOriginY = this.originY; var t = this.getCenterPoint(); this.originX = "center", this.originY = "center", this.left = t.x, this.top = t.y; }, _resetOrigin: function () { var t = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY); this.originX = this._originalOriginX, this.originY = this._originalOriginY, this.left = t.x, this.top = t.y, this._originalOriginX = null, this._originalOriginY = null; }, _getLeftTopCoords: function () { return this.translateToOriginPoint(this.getCenterPoint(), "left", "top"); } }); }(), function () {
    function t(t) { return [new fabric.Point(t.tl.x, t.tl.y), new fabric.Point(t.tr.x, t.tr.y), new fabric.Point(t.br.x, t.br.y), new fabric.Point(t.bl.x, t.bl.y)]; }
    var e = fabric.util.degreesToRadians, i = fabric.util.multiplyTransformMatrices;
    fabric.util.object.extend(fabric.Object.prototype, { oCoords: null, intersectsWithRect: function (e, i) { var r = t(this.oCoords), n = fabric.Intersection.intersectPolygonRectangle(r, e, i); return "Intersection" === n.status; }, intersectsWithObject: function (e) { var i = fabric.Intersection.intersectPolygonPolygon(t(this.oCoords), t(e.oCoords)); return "Intersection" === i.status || e.isContainedWithinObject(this) || this.isContainedWithinObject(e); }, isContainedWithinObject: function (e) { for (var i = t(this.oCoords), r = 0; r < 4; r++)
            if (!e.containsPoint(i[r]))
                return !1; return !0; }, isContainedWithinRect: function (t, e) { var i = this.getBoundingRect(); return i.left >= t.x && i.left + i.width <= e.x && i.top >= t.y && i.top + i.height <= e.y; }, containsPoint: function (t) { this.oCoords || this.setCoords(); var e = this._getImageLines(this.oCoords), i = this._findCrossPoints(t, e); return 0 !== i && i % 2 === 1; }, _getImageLines: function (t) { return { topline: { o: t.tl, d: t.tr }, rightline: { o: t.tr, d: t.br }, bottomline: { o: t.br, d: t.bl }, leftline: { o: t.bl, d: t.tl } }; }, _findCrossPoints: function (t, e) { var i, r, n, s, o, a, h = 0; for (var c in e)
            if (a = e[c], !(a.o.y < t.y && a.d.y < t.y || a.o.y >= t.y && a.d.y >= t.y || (a.o.x === a.d.x && a.o.x >= t.x ? o = a.o.x : (i = 0, r = (a.d.y - a.o.y) / (a.d.x - a.o.x), n = t.y - i * t.x, s = a.o.y - r * a.o.x, o = -(n - s) / (i - r)), o >= t.x && (h += 1), 2 !== h)))
                break; return h; }, getBoundingRectWidth: function () { return this.getBoundingRect().width; }, getBoundingRectHeight: function () { return this.getBoundingRect().height; }, getBoundingRect: function () { return this.oCoords || this.setCoords(), fabric.util.makeBoundingBoxFromPoints([this.oCoords.tl, this.oCoords.tr, this.oCoords.br, this.oCoords.bl]); }, getWidth: function () { return this._getTransformedDimensions().x; }, getHeight: function () { return this._getTransformedDimensions().y; }, _constrainScale: function (t) { return Math.abs(t) < this.minScaleLimit ? t < 0 ? -this.minScaleLimit : this.minScaleLimit : t; }, scale: function (t) { return t = this._constrainScale(t), t < 0 && (this.flipX = !this.flipX, this.flipY = !this.flipY, t *= -1), this.scaleX = t, this.scaleY = t, this.setCoords(), this; }, scaleToWidth: function (t) { var e = this.getBoundingRect().width / this.getWidth(); return this.scale(t / this.width / e); }, scaleToHeight: function (t) { var e = this.getBoundingRect().height / this.getHeight(); return this.scale(t / this.height / e); }, setCoords: function () { var t = e(this.angle), i = this.getViewportTransform(), r = this._calculateCurrentDimensions(), n = r.x, s = r.y; n < 0 && (n = Math.abs(n)); var o = Math.sin(t), a = Math.cos(t), h = n > 0 ? Math.atan(s / n) : 0, c = n / Math.cos(h) / 2, l = Math.cos(h + t) * c, u = Math.sin(h + t) * c, f = fabric.util.transformPoint(this.getCenterPoint(), i), d = new fabric.Point(f.x - l, f.y - u), g = new fabric.Point(d.x + n * a, d.y + n * o), p = new fabric.Point(d.x - s * o, d.y + s * a), v = new fabric.Point(f.x + l, f.y + u), b = new fabric.Point((d.x + p.x) / 2, (d.y + p.y) / 2), m = new fabric.Point((g.x + d.x) / 2, (g.y + d.y) / 2), y = new fabric.Point((v.x + g.x) / 2, (v.y + g.y) / 2), _ = new fabric.Point((v.x + p.x) / 2, (v.y + p.y) / 2), x = new fabric.Point(m.x + o * this.rotatingPointOffset, m.y - a * this.rotatingPointOffset); return this.oCoords = { tl: d, tr: g, br: v, bl: p, ml: b, mt: m, mr: y, mb: _, mtr: x }, this._setCornerCoords && this._setCornerCoords(), this; }, _calcRotateMatrix: function () {
            if (this.angle) {
                var t = e(this.angle), i = Math.cos(t), r = Math.sin(t);
                return [i, r, -r, i, 0, 0];
            }
            return [1, 0, 0, 1, 0, 0];
        }, calcTransformMatrix: function () { var t = this.getCenterPoint(), e = [1, 0, 0, 1, t.x, t.y], r = this._calcRotateMatrix(), n = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, !0), s = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0]; return s = i(s, e), s = i(s, r), s = i(s, n); }, _calcDimensionsTransformMatrix: function (t, r, n) { var s = [1, 0, Math.tan(e(t)), 1], o = [1, Math.tan(e(r)), 0, 1], a = this.scaleX * (n && this.flipX ? -1 : 1), h = this.scaleY * (n && this.flipY ? -1 : 1), c = [a, 0, 0, h], l = i(c, s, !0); return i(l, o, !0); } });
}(), fabric.util.object.extend(fabric.Object.prototype, { sendToBack: function () { return this.group ? fabric.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas.sendToBack(this), this; }, bringToFront: function () { return this.group ? fabric.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas.bringToFront(this), this; }, sendBackwards: function (t) { return this.group ? fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, t) : this.canvas.sendBackwards(this, t), this; }, bringForward: function (t) { return this.group ? fabric.StaticCanvas.prototype.bringForward.call(this.group, this, t) : this.canvas.bringForward(this, t), this; }, moveTo: function (t) { return this.group ? fabric.StaticCanvas.prototype.moveTo.call(this.group, this, t) : this.canvas.moveTo(this, t), this; } }), function () { function t(t, e) { if (e) {
    if (e.toLive)
        return t + ": url(#SVGID_" + e.id + "); ";
    var i = new fabric.Color(e), r = t + ": " + i.toRgb() + "; ", n = i.getAlpha();
    return 1 !== n && (r += t + "-opacity: " + n.toString() + "; "), r;
} return t + ": none; "; } fabric.util.object.extend(fabric.Object.prototype, { getSvgStyles: function (e) { var i = this.fillRule, r = this.strokeWidth ? this.strokeWidth : "0", n = this.strokeDashArray ? this.strokeDashArray.join(" ") : "none", s = this.strokeLineCap ? this.strokeLineCap : "butt", o = this.strokeLineJoin ? this.strokeLineJoin : "miter", a = this.strokeMiterLimit ? this.strokeMiterLimit : "4", h = "undefined" != typeof this.opacity ? this.opacity : "1", c = this.visible ? "" : " visibility: hidden;", l = e ? "" : this.getSvgFilter(), u = t("fill", this.fill), f = t("stroke", this.stroke); return [f, "stroke-width: ", r, "; ", "stroke-dasharray: ", n, "; ", "stroke-linecap: ", s, "; ", "stroke-linejoin: ", o, "; ", "stroke-miterlimit: ", a, "; ", u, "fill-rule: ", i, "; ", "opacity: ", h, ";", l, c].join(""); }, getSvgFilter: function () { return this.shadow ? "filter: url(#SVGID_" + this.shadow.id + ");" : ""; }, getSvgId: function () { return this.id ? 'id="' + this.id + '" ' : ""; }, getSvgTransform: function () { if (this.group && "path-group" === this.group.type)
        return ""; var t = fabric.util.toFixed, e = this.getAngle(), i = this.getSkewX() % 360, r = this.getSkewY() % 360, n = this.getCenterPoint(), s = fabric.Object.NUM_FRACTION_DIGITS, o = "path-group" === this.type ? "" : "translate(" + t(n.x, s) + " " + t(n.y, s) + ")", a = 0 !== e ? " rotate(" + t(e, s) + ")" : "", h = 1 === this.scaleX && 1 === this.scaleY ? "" : " scale(" + t(this.scaleX, s) + " " + t(this.scaleY, s) + ")", c = 0 !== i ? " skewX(" + t(i, s) + ")" : "", l = 0 !== r ? " skewY(" + t(r, s) + ")" : "", u = "path-group" === this.type ? this.width : 0, f = this.flipX ? " matrix(-1 0 0 1 " + u + " 0) " : "", d = "path-group" === this.type ? this.height : 0, g = this.flipY ? " matrix(1 0 0 -1 0 " + d + ")" : ""; return [o, a, h, f, g, c, l].join(""); }, getSvgTransformMatrix: function () { return this.transformMatrix ? " matrix(" + this.transformMatrix.join(" ") + ") " : ""; }, _createBaseSVGMarkup: function () { var t = []; return this.fill && this.fill.toLive && t.push(this.fill.toSVG(this, !1)), this.stroke && this.stroke.toLive && t.push(this.stroke.toSVG(this, !1)), this.shadow && t.push(this.shadow.toSVG(this)), t; } }); }(), function () { function t(t, e, r) { var n = {}, s = !0; r.forEach(function (e) { n[e] = t[e]; }), i(t[e], n, s); } function e(t, i) { if (!fabric.isLikelyNode && t instanceof Element)
    return t === i; if (t instanceof Array) {
    if (t.length !== i.length)
        return !1;
    var r = i.concat().sort(), n = t.concat().sort();
    return !n.some(function (t, i) { return !e(r[i], t); });
} if (t instanceof Object) {
    for (var s in t)
        if (!e(t[s], i[s]))
            return !1;
    return !0;
} return t === i; } var i = fabric.util.object.extend; fabric.util.object.extend(fabric.Object.prototype, { hasStateChanged: function () { return !e(this.originalState, this); }, saveState: function (e) { return t(this, "originalState", this.stateProperties), e && e.stateProperties && t(this, "originalState", e.stateProperties), this; }, setupState: function (t) { return this.originalState = {}, this.saveState(t), this; } }); }(), function () { var t = fabric.util.degreesToRadians, e = function () { return "undefined" != typeof G_vmlCanvasManager; }; fabric.util.object.extend(fabric.Object.prototype, { _controlsVisibility: null, _findTargetCorner: function (t) { if (!this.hasControls || !this.active)
        return !1; var e, i, r = t.x, n = t.y; this.__corner = 0; for (var s in this.oCoords)
        if (this.isControlVisible(s) && ("mtr" !== s || this.hasRotatingPoint) && (!this.get("lockUniScaling") || "mt" !== s && "mr" !== s && "mb" !== s && "ml" !== s) && (i = this._getImageLines(this.oCoords[s].corner), e = this._findCrossPoints({ x: r, y: n }, i), 0 !== e && e % 2 === 1))
            return this.__corner = s, s; return !1; }, _setCornerCoords: function () { var e, i, r = this.oCoords, n = t(45 - this.angle), s = .707106 * this.cornerSize, o = s * Math.cos(n), a = s * Math.sin(n); for (var h in r)
        e = r[h].x, i = r[h].y, r[h].corner = { tl: { x: e - a, y: i - o }, tr: { x: e + o, y: i - a }, bl: { x: e - o, y: i + a }, br: { x: e + a, y: i + o } }; }, _getNonTransformedDimensions: function () { var t = this.strokeWidth, e = this.width, i = this.height, r = !0, n = !0; return "line" === this.type && "butt" === this.strokeLineCap && (n = e, r = i), n && (i += i < 0 ? -t : t), r && (e += e < 0 ? -t : t), { x: e, y: i }; }, _getTransformedDimensions: function (t, e) { "undefined" == typeof t && (t = this.skewX), "undefined" == typeof e && (e = this.skewY); var i, r, n = this._getNonTransformedDimensions(), s = n.x / 2, o = n.y / 2, a = [{ x: -s, y: -o }, { x: s, y: -o }, { x: -s, y: o }, { x: s, y: o }], h = this._calcDimensionsTransformMatrix(t, e, !1); for (i = 0; i < a.length; i++)
        a[i] = fabric.util.transformPoint(a[i], h); return r = fabric.util.makeBoundingBoxFromPoints(a), { x: r.width, y: r.height }; }, _calculateCurrentDimensions: function () { var t = this.getViewportTransform(), e = this._getTransformedDimensions(), i = e.x, r = e.y, n = fabric.util.transformPoint(new fabric.Point(i, r), t, !0); return n.scalarAdd(2 * this.padding); }, drawSelectionBackground: function (e) { if (!this.selectionBackgroundColor || this.group || !this.active)
        return this; e.save(); var i = this.getCenterPoint(), r = this._calculateCurrentDimensions(), n = this.canvas.viewportTransform; return e.translate(i.x, i.y), e.scale(1 / n[0], 1 / n[3]), e.rotate(t(this.angle)), e.fillStyle = this.selectionBackgroundColor, e.fillRect(-r.x / 2, -r.y / 2, r.x, r.y), e.restore(), this; }, drawBorders: function (t) { if (!this.hasBorders)
        return this; var e = this._calculateCurrentDimensions(), i = 1 / this.borderScaleFactor, r = e.x + i, n = e.y + i; if (t.save(), t.strokeStyle = this.borderColor, this._setLineDash(t, this.borderDashArray, null), t.strokeRect(-r / 2, -n / 2, r, n), this.hasRotatingPoint && this.isControlVisible("mtr") && !this.get("lockRotation") && this.hasControls) {
        var s = -n / 2;
        t.beginPath(), t.moveTo(0, s), t.lineTo(0, s - this.rotatingPointOffset), t.closePath(), t.stroke();
    } return t.restore(), this; }, drawBordersInGroup: function (t, e) { if (!this.hasBorders)
        return this; var i = this._getNonTransformedDimensions(), r = fabric.util.customTransformMatrix(e.scaleX, e.scaleY, e.skewX), n = fabric.util.transformPoint(i, r), s = 1 / this.borderScaleFactor, o = n.x + s + 2 * this.padding, a = n.y + s + 2 * this.padding; return t.save(), this._setLineDash(t, this.borderDashArray, null), t.strokeStyle = this.borderColor, t.strokeRect(-o / 2, -a / 2, o, a), t.restore(), this; }, drawControls: function (t) { if (!this.hasControls)
        return this; var e = this._calculateCurrentDimensions(), i = e.x, r = e.y, n = this.cornerSize, s = -(i + n) / 2, o = -(r + n) / 2, a = this.transparentCorners ? "stroke" : "fill"; return t.save(), t.strokeStyle = t.fillStyle = this.cornerColor, this.transparentCorners || (t.strokeStyle = this.cornerStrokeColor), this._setLineDash(t, this.cornerDashArray, null), this._drawControl("tl", t, a, s, o), this._drawControl("tr", t, a, s + i, o), this._drawControl("bl", t, a, s, o + r), this._drawControl("br", t, a, s + i, o + r), this.get("lockUniScaling") || (this._drawControl("mt", t, a, s + i / 2, o), this._drawControl("mb", t, a, s + i / 2, o + r), this._drawControl("mr", t, a, s + i, o + r / 2), this._drawControl("ml", t, a, s, o + r / 2)), this.hasRotatingPoint && this._drawControl("mtr", t, a, s + i / 2, o - this.rotatingPointOffset), t.restore(), this; }, _drawControl: function (t, i, r, n, s) { if (this.isControlVisible(t)) {
        var o = this.cornerSize, a = !this.transparentCorners && this.cornerStrokeColor;
        switch (this.cornerStyle) {
            case "circle":
                i.beginPath(), i.arc(n + o / 2, s + o / 2, o / 2, 0, 2 * Math.PI, !1), i[r](), a && i.stroke();
                break;
            default: e() || this.transparentCorners || i.clearRect(n, s, o, o), i[r + "Rect"](n, s, o, o), a && i.strokeRect(n, s, o, o);
        }
    } }, isControlVisible: function (t) { return this._getControlsVisibility()[t]; }, setControlVisible: function (t, e) { return this._getControlsVisibility()[t] = e, this; }, setControlsVisibility: function (t) { t || (t = {}); for (var e in t)
        this.setControlVisible(e, t[e]); return this; }, _getControlsVisibility: function () { return this._controlsVisibility || (this._controlsVisibility = { tl: !0, tr: !0, br: !0, bl: !0, ml: !0, mt: !0, mr: !0, mb: !0, mtr: !0 }), this._controlsVisibility; } }); }(), fabric.util.object.extend(fabric.StaticCanvas.prototype, { FX_DURATION: 500, fxCenterObjectH: function (t, e) { e = e || {}; var i = function () { }, r = e.onComplete || i, n = e.onChange || i, s = this; return fabric.util.animate({ startValue: t.get("left"), endValue: this.getCenter().left, duration: this.FX_DURATION, onChange: function (e) { t.set("left", e), s.renderAll(), n(); }, onComplete: function () { t.setCoords(), r(); } }), this; }, fxCenterObjectV: function (t, e) { e = e || {}; var i = function () { }, r = e.onComplete || i, n = e.onChange || i, s = this; return fabric.util.animate({ startValue: t.get("top"), endValue: this.getCenter().top, duration: this.FX_DURATION, onChange: function (e) { t.set("top", e), s.renderAll(), n(); }, onComplete: function () { t.setCoords(), r(); } }), this; }, fxRemove: function (t, e) { e = e || {}; var i = function () { }, r = e.onComplete || i, n = e.onChange || i, s = this; return fabric.util.animate({ startValue: t.get("opacity"), endValue: 0, duration: this.FX_DURATION, onStart: function () { t.set("active", !1); }, onChange: function (e) { t.set("opacity", e), s.renderAll(), n(); }, onComplete: function () { s.remove(t), r(); } }), this; } }), fabric.util.object.extend(fabric.Object.prototype, { animate: function () { if (arguments[0] && "object" == typeof arguments[0]) {
        var t, e, i = [];
        for (t in arguments[0])
            i.push(t);
        for (var r = 0, n = i.length; r < n; r++)
            t = i[r], e = r !== n - 1, this._animate(t, arguments[0][t], arguments[1], e);
    }
    else
        this._animate.apply(this, arguments); return this; }, _animate: function (t, e, i, r) { var n, s = this; e = e.toString(), i = i ? fabric.util.object.clone(i) : {}, ~t.indexOf(".") && (n = t.split(".")); var o = n ? this.get(n[0])[n[1]] : this.get(t); "from" in i || (i.from = o), e = ~e.indexOf("=") ? o + parseFloat(e.replace("=", "")) : parseFloat(e), fabric.util.animate({ startValue: i.from, endValue: e, byValue: i.by, easing: i.easing, duration: i.duration, abort: i.abort && function () { return i.abort.call(s); }, onChange: function (e) { n ? s[n[0]][n[1]] = e : s.set(t, e), r || i.onChange && i.onChange(); }, onComplete: function () { r || (s.setCoords(), i.onComplete && i.onComplete()); } }); } }), function (t) {
    "use strict";
    function e(t, e) { var i = t.origin, r = t.axis1, n = t.axis2, s = t.dimension, o = e.nearest, a = e.center, h = e.farthest; return function () { switch (this.get(i)) {
        case o: return Math.min(this.get(r), this.get(n));
        case a: return Math.min(this.get(r), this.get(n)) + .5 * this.get(s);
        case h: return Math.max(this.get(r), this.get(n));
    } }; }
    var i = t.fabric || (t.fabric = {}), r = i.util.object.extend, n = { x1: 1, x2: 1, y1: 1, y2: 1 }, s = i.StaticCanvas.supports("setLineDash");
    return i.Line ? void i.warn("fabric.Line is already defined") : (i.Line = i.util.createClass(i.Object, { type: "line", x1: 0, y1: 0, x2: 0, y2: 0, initialize: function (t, e) { e = e || {}, t || (t = [0, 0, 0, 0]), this.callSuper("initialize", e), this.set("x1", t[0]), this.set("y1", t[1]), this.set("x2", t[2]), this.set("y2", t[3]), this._setWidthHeight(e); }, _setWidthHeight: function (t) { t || (t = {}), this.width = Math.abs(this.x2 - this.x1), this.height = Math.abs(this.y2 - this.y1), this.left = "left" in t ? t.left : this._getLeftToOriginX(), this.top = "top" in t ? t.top : this._getTopToOriginY(); }, _set: function (t, e) { return this.callSuper("_set", t, e), "undefined" != typeof n[t] && this._setWidthHeight(), this; }, _getLeftToOriginX: e({ origin: "originX", axis1: "x1", axis2: "x2", dimension: "width" }, { nearest: "left", center: "center", farthest: "right" }), _getTopToOriginY: e({ origin: "originY", axis1: "y1", axis2: "y2", dimension: "height" }, { nearest: "top", center: "center", farthest: "bottom" }), _render: function (t, e) { if (t.beginPath(), e) {
            var i = this.getCenterPoint();
            t.translate(i.x - this.strokeWidth / 2, i.y - this.strokeWidth / 2);
        } if (!this.strokeDashArray || this.strokeDashArray && s) {
            var r = this.calcLinePoints();
            t.moveTo(r.x1, r.y1), t.lineTo(r.x2, r.y2);
        } t.lineWidth = this.strokeWidth; var n = t.strokeStyle; t.strokeStyle = this.stroke || t.fillStyle, this.stroke && this._renderStroke(t), t.strokeStyle = n; }, _renderDashedStroke: function (t) { var e = this.calcLinePoints(); t.beginPath(), i.util.drawDashedLine(t, e.x1, e.y1, e.x2, e.y2, this.strokeDashArray), t.closePath(); }, toObject: function (t) { return r(this.callSuper("toObject", t), this.calcLinePoints()); }, calcLinePoints: function () { var t = this.x1 <= this.x2 ? -1 : 1, e = this.y1 <= this.y2 ? -1 : 1, i = t * this.width * .5, r = e * this.height * .5, n = t * this.width * -.5, s = e * this.height * -.5; return { x1: i, x2: n, y1: r, y2: s }; }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 }; return this.group && "path-group" === this.group.type || (i = this.calcLinePoints()), e.push("<line ", this.getSvgId(), 'x1="', i.x1, '" y1="', i.y1, '" x2="', i.x2, '" y2="', i.y2, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '"/>\n'), t ? t(e.join("")) : e.join(""); }, complexity: function () { return 1; } }), i.Line.ATTRIBUTE_NAMES = i.SHARED_ATTRIBUTES.concat("x1 y1 x2 y2".split(" ")), i.Line.fromElement = function (t, e) { var n = i.parseAttributes(t, i.Line.ATTRIBUTE_NAMES), s = [n.x1 || 0, n.y1 || 0, n.x2 || 0, n.y2 || 0]; return new i.Line(s, r(n, e)); }, void (i.Line.fromObject = function (t, e) { var r = [t.x1, t.y1, t.x2, t.y2], n = new i.Line(r, t); return e && e(n), n; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    function e(t) { return "radius" in t && t.radius >= 0; }
    var i = t.fabric || (t.fabric = {}), r = Math.PI, n = i.util.object.extend;
    return i.Circle ? void i.warn("fabric.Circle is already defined.") : (i.Circle = i.util.createClass(i.Object, { type: "circle", radius: 0, startAngle: 0, endAngle: 2 * r, initialize: function (t) { t = t || {}, this.callSuper("initialize", t), this.set("radius", t.radius || 0), this.startAngle = t.startAngle || this.startAngle, this.endAngle = t.endAngle || this.endAngle; }, _set: function (t, e) { return this.callSuper("_set", t, e), "radius" === t && this.setRadius(e), this; }, toObject: function (t) { return n(this.callSuper("toObject", t), { radius: this.get("radius"), startAngle: this.startAngle, endAngle: this.endAngle }); }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = 0, n = 0, s = (this.endAngle - this.startAngle) % (2 * r); if (0 === s)
            this.group && "path-group" === this.group.type && (i = this.left + this.radius, n = this.top + this.radius), e.push("<circle ", this.getSvgId(), 'cx="' + i + '" cy="' + n + '" ', 'r="', this.radius, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), " ", this.getSvgTransformMatrix(), '"/>\n');
        else {
            var o = Math.cos(this.startAngle) * this.radius, a = Math.sin(this.startAngle) * this.radius, h = Math.cos(this.endAngle) * this.radius, c = Math.sin(this.endAngle) * this.radius, l = s > r ? "1" : "0";
            e.push('<path d="M ' + o + " " + a, " A " + this.radius + " " + this.radius, " 0 ", +l + " 1", " " + h + " " + c, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), " ", this.getSvgTransformMatrix(), '"/>\n');
        } return t ? t(e.join("")) : e.join(""); }, _render: function (t, e) { t.beginPath(), t.arc(e ? this.left + this.radius : 0, e ? this.top + this.radius : 0, this.radius, this.startAngle, this.endAngle, !1), this._renderFill(t), this._renderStroke(t); }, getRadiusX: function () { return this.get("radius") * this.get("scaleX"); }, getRadiusY: function () { return this.get("radius") * this.get("scaleY"); }, setRadius: function (t) { return this.radius = t, this.set("width", 2 * t).set("height", 2 * t); }, complexity: function () { return 1; } }), i.Circle.ATTRIBUTE_NAMES = i.SHARED_ATTRIBUTES.concat("cx cy r".split(" ")), i.Circle.fromElement = function (t, r) { r || (r = {}); var s = i.parseAttributes(t, i.Circle.ATTRIBUTE_NAMES); if (!e(s))
        throw new Error("value of `r` attribute is required and can not be negative"); s.left = s.left || 0, s.top = s.top || 0; var o = new i.Circle(n(s, r)); return o.left -= o.radius, o.top -= o.radius, o; }, void (i.Circle.fromObject = function (t, e) { var r = new i.Circle(t); return e && e(r), r; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {});
    return e.Triangle ? void e.warn("fabric.Triangle is already defined") : (e.Triangle = e.util.createClass(e.Object, { type: "triangle", initialize: function (t) { t = t || {}, this.callSuper("initialize", t), this.set("width", t.width || 100).set("height", t.height || 100); }, _render: function (t) { var e = this.width / 2, i = this.height / 2; t.beginPath(), t.moveTo(-e, i), t.lineTo(0, -i), t.lineTo(e, i), t.closePath(), this._renderFill(t), this._renderStroke(t); }, _renderDashedStroke: function (t) { var i = this.width / 2, r = this.height / 2; t.beginPath(), e.util.drawDashedLine(t, -i, r, 0, -r, this.strokeDashArray), e.util.drawDashedLine(t, 0, -r, i, r, this.strokeDashArray), e.util.drawDashedLine(t, i, r, -i, r, this.strokeDashArray), t.closePath(); }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = this.width / 2, r = this.height / 2, n = [-i + " " + r, "0 " + -r, i + " " + r].join(","); return e.push("<polygon ", this.getSvgId(), 'points="', n, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'), t ? t(e.join("")) : e.join(""); }, complexity: function () { return 1; } }), void (e.Triangle.fromObject = function (t, i) { var r = new e.Triangle(t); return i && i(r), r; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = 2 * Math.PI, r = e.util.object.extend;
    return e.Ellipse ? void e.warn("fabric.Ellipse is already defined.") : (e.Ellipse = e.util.createClass(e.Object, { type: "ellipse", rx: 0, ry: 0, initialize: function (t) { t = t || {}, this.callSuper("initialize", t), this.set("rx", t.rx || 0), this.set("ry", t.ry || 0); }, _set: function (t, e) { switch (this.callSuper("_set", t, e), t) {
            case "rx":
                this.rx = e, this.set("width", 2 * e);
                break;
            case "ry": this.ry = e, this.set("height", 2 * e);
        } return this; }, getRx: function () { return this.get("rx") * this.get("scaleX"); }, getRy: function () { return this.get("ry") * this.get("scaleY"); }, toObject: function (t) { return r(this.callSuper("toObject", t), { rx: this.get("rx"), ry: this.get("ry") }); }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = 0, r = 0; return this.group && "path-group" === this.group.type && (i = this.left + this.rx, r = this.top + this.ry), e.push("<ellipse ", this.getSvgId(), 'cx="', i, '" cy="', r, '" ', 'rx="', this.rx, '" ry="', this.ry, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '"/>\n'), t ? t(e.join("")) : e.join(""); }, _render: function (t, e) { t.beginPath(), t.save(), t.transform(1, 0, 0, this.ry / this.rx, 0, 0), t.arc(e ? this.left + this.rx : 0, e ? (this.top + this.ry) * this.rx / this.ry : 0, this.rx, 0, i, !1), t.restore(), this._renderFill(t), this._renderStroke(t); }, complexity: function () { return 1; } }), e.Ellipse.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("cx cy rx ry".split(" ")), e.Ellipse.fromElement = function (t, i) { i || (i = {}); var n = e.parseAttributes(t, e.Ellipse.ATTRIBUTE_NAMES); n.left = n.left || 0, n.top = n.top || 0; var s = new e.Ellipse(r(n, i)); return s.top -= s.ry, s.left -= s.rx, s; }, void (e.Ellipse.fromObject = function (t, i) { var r = new e.Ellipse(t); return i && i(r), r; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend;
    if (e.Rect)
        return void e.warn("fabric.Rect is already defined");
    var r = e.Object.prototype.stateProperties.concat();
    r.push("rx", "ry", "x", "y"), e.Rect = e.util.createClass(e.Object, { stateProperties: r, type: "rect", rx: 0, ry: 0, strokeDashArray: null, initialize: function (t) { t = t || {}, this.callSuper("initialize", t), this._initRxRy(); }, _initRxRy: function () { this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry); }, _render: function (t, e) { if (1 === this.width && 1 === this.height)
            return void t.fillRect(-.5, -.5, 1, 1); var i = this.rx ? Math.min(this.rx, this.width / 2) : 0, r = this.ry ? Math.min(this.ry, this.height / 2) : 0, n = this.width, s = this.height, o = e ? this.left : -this.width / 2, a = e ? this.top : -this.height / 2, h = 0 !== i || 0 !== r, c = .4477152502; t.beginPath(), t.moveTo(o + i, a), t.lineTo(o + n - i, a), h && t.bezierCurveTo(o + n - c * i, a, o + n, a + c * r, o + n, a + r), t.lineTo(o + n, a + s - r), h && t.bezierCurveTo(o + n, a + s - c * r, o + n - c * i, a + s, o + n - i, a + s), t.lineTo(o + i, a + s), h && t.bezierCurveTo(o + c * i, a + s, o, a + s - c * r, o, a + s - r), t.lineTo(o, a + r), h && t.bezierCurveTo(o, a + c * r, o + c * i, a, o + i, a), t.closePath(), this._renderFill(t), this._renderStroke(t); }, _renderDashedStroke: function (t) { var i = -this.width / 2, r = -this.height / 2, n = this.width, s = this.height; t.beginPath(), e.util.drawDashedLine(t, i, r, i + n, r, this.strokeDashArray), e.util.drawDashedLine(t, i + n, r, i + n, r + s, this.strokeDashArray), e.util.drawDashedLine(t, i + n, r + s, i, r + s, this.strokeDashArray), e.util.drawDashedLine(t, i, r + s, i, r, this.strokeDashArray), t.closePath(); }, toObject: function (t) { var e = i(this.callSuper("toObject", t), { rx: this.get("rx") || 0, ry: this.get("ry") || 0 }); return this.includeDefaultValues || this._removeDefaultValues(e), e; }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = this.left, r = this.top; return this.group && "path-group" === this.group.type || (i = -this.width / 2, r = -this.height / 2), e.push("<rect ", this.getSvgId(), 'x="', i, '" y="', r, '" rx="', this.get("rx"), '" ry="', this.get("ry"), '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '"/>\n'), t ? t(e.join("")) : e.join(""); }, complexity: function () { return 1; } }), e.Rect.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("x y rx ry width height".split(" ")), e.Rect.fromElement = function (t, r) { if (!t)
        return null; r = r || {}; var n = e.parseAttributes(t, e.Rect.ATTRIBUTE_NAMES); n.left = n.left || 0, n.top = n.top || 0; var s = new e.Rect(i(r ? e.util.object.clone(r) : {}, n)); return s.visible = s.visible && s.width > 0 && s.height > 0, s; }, e.Rect.fromObject = function (t, i) { var r = new e.Rect(t); return i && i(r), r; };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {});
    return e.Polyline ? void e.warn("fabric.Polyline is already defined") : (e.Polyline = e.util.createClass(e.Object, { type: "polyline", points: null, minX: 0, minY: 0, initialize: function (t, i) { return e.Polygon.prototype.initialize.call(this, t, i); }, _calcDimensions: function () { return e.Polygon.prototype._calcDimensions.call(this); }, toObject: function (t) { return e.Polygon.prototype.toObject.call(this, t); }, toSVG: function (t) { return e.Polygon.prototype.toSVG.call(this, t); }, _render: function (t, i) { e.Polygon.prototype.commonRender.call(this, t, i) && (this._renderFill(t), this._renderStroke(t)); }, _renderDashedStroke: function (t) { var i, r; t.beginPath(); for (var n = 0, s = this.points.length; n < s; n++)
            i = this.points[n], r = this.points[n + 1] || i, e.util.drawDashedLine(t, i.x, i.y, r.x, r.y, this.strokeDashArray); }, complexity: function () { return this.get("points").length; } }), e.Polyline.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(), e.Polyline.fromElement = function (t, i) { if (!t)
        return null; i || (i = {}); var r = e.parsePointsAttribute(t.getAttribute("points")), n = e.parseAttributes(t, e.Polyline.ATTRIBUTE_NAMES); return new e.Polyline(r, e.util.object.extend(n, i)); }, void (e.Polyline.fromObject = function (t, i) { var r = new e.Polyline(t.points, t); return i && i(r), r; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.min, n = e.util.array.max, s = e.util.toFixed;
    return e.Polygon ? void e.warn("fabric.Polygon is already defined") : (e.Polygon = e.util.createClass(e.Object, { type: "polygon", points: null, minX: 0, minY: 0, initialize: function (t, e) { e = e || {}, this.points = t || [], this.callSuper("initialize", e), this._calcDimensions(), "top" in e || (this.top = this.minY), "left" in e || (this.left = this.minX), this.pathOffset = { x: this.minX + this.width / 2, y: this.minY + this.height / 2 }; }, _calcDimensions: function () { var t = this.points, e = r(t, "x"), i = r(t, "y"), s = n(t, "x"), o = n(t, "y"); this.width = s - e || 0, this.height = o - i || 0, this.minX = e || 0, this.minY = i || 0; }, toObject: function (t) { return i(this.callSuper("toObject", t), { points: this.points.concat() }); }, toSVG: function (t) { for (var e, i = [], r = this._createBaseSVGMarkup(), n = 0, o = this.points.length; n < o; n++)
            i.push(s(this.points[n].x, 2), ",", s(this.points[n].y, 2), " "); return this.group && "path-group" === this.group.type || (e = " translate(" + -this.pathOffset.x + ", " + -this.pathOffset.y + ") "), r.push("<", this.type, " ", this.getSvgId(), 'points="', i.join(""), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), e, " ", this.getSvgTransformMatrix(), '"/>\n'), t ? t(r.join("")) : r.join(""); }, _render: function (t, e) { this.commonRender(t, e) && (this._renderFill(t), (this.stroke || this.strokeDashArray) && (t.closePath(), this._renderStroke(t))); }, commonRender: function (t, e) { var i, r = this.points.length; if (!r || isNaN(this.points[r - 1].y))
            return !1; e || t.translate(-this.pathOffset.x, -this.pathOffset.y), t.beginPath(), t.moveTo(this.points[0].x, this.points[0].y); for (var n = 0; n < r; n++)
            i = this.points[n], t.lineTo(i.x, i.y); return !0; }, _renderDashedStroke: function (t) { e.Polyline.prototype._renderDashedStroke.call(this, t), t.closePath(); }, complexity: function () { return this.points.length; } }), e.Polygon.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(), e.Polygon.fromElement = function (t, r) { if (!t)
        return null; r || (r = {}); var n = e.parsePointsAttribute(t.getAttribute("points")), s = e.parseAttributes(t, e.Polygon.ATTRIBUTE_NAMES); return new e.Polygon(n, i(s, r)); }, void (e.Polygon.fromObject = function (t, i) { var r = new e.Polygon(t.points, t); return i && i(r), r; }));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.array.min, r = e.util.array.max, n = e.util.object.extend, s = Object.prototype.toString, o = e.util.drawArc, a = { m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7 }, h = { m: "l", M: "L" };
    return e.Path ? void e.warn("fabric.Path is already defined") : (e.Path = e.util.createClass(e.Object, { type: "path", path: null, minX: 0, minY: 0, initialize: function (t, e) { e = e || {}, this.setOptions(e), t || (t = []); var i = "[object Array]" === s.call(t); this.path = i ? t : t.match && t.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi), this.path && (i || (this.path = this._parsePath()), this._setPositionDimensions(e), e.sourcePath && this.setSourcePath(e.sourcePath)); }, _setPositionDimensions: function (t) { var e = this._parseDimensions(); this.minX = e.left, this.minY = e.top, this.width = e.width, this.height = e.height, "undefined" == typeof t.left && (this.left = e.left + ("center" === this.originX ? this.width / 2 : "right" === this.originX ? this.width : 0)), "undefined" == typeof t.top && (this.top = e.top + ("center" === this.originY ? this.height / 2 : "bottom" === this.originY ? this.height : 0)), this.pathOffset = this.pathOffset || { x: this.minX + this.width / 2, y: this.minY + this.height / 2 }; }, _renderPathCommands: function (t) { var e, i, r, n = null, s = 0, a = 0, h = 0, c = 0, l = 0, u = 0, f = -this.pathOffset.x, d = -this.pathOffset.y; this.group && "path-group" === this.group.type && (f = 0, d = 0), t.beginPath(); for (var g = 0, p = this.path.length; g < p; ++g) {
            switch (e = this.path[g], e[0]) {
                case "l":
                    h += e[1], c += e[2], t.lineTo(h + f, c + d);
                    break;
                case "L":
                    h = e[1], c = e[2], t.lineTo(h + f, c + d);
                    break;
                case "h":
                    h += e[1], t.lineTo(h + f, c + d);
                    break;
                case "H":
                    h = e[1], t.lineTo(h + f, c + d);
                    break;
                case "v":
                    c += e[1], t.lineTo(h + f, c + d);
                    break;
                case "V":
                    c = e[1], t.lineTo(h + f, c + d);
                    break;
                case "m":
                    h += e[1], c += e[2], s = h, a = c, t.moveTo(h + f, c + d);
                    break;
                case "M":
                    h = e[1], c = e[2], s = h, a = c, t.moveTo(h + f, c + d);
                    break;
                case "c":
                    i = h + e[5], r = c + e[6], l = h + e[3], u = c + e[4], t.bezierCurveTo(h + e[1] + f, c + e[2] + d, l + f, u + d, i + f, r + d), h = i, c = r;
                    break;
                case "C":
                    h = e[5], c = e[6], l = e[3], u = e[4], t.bezierCurveTo(e[1] + f, e[2] + d, l + f, u + d, h + f, c + d);
                    break;
                case "s":
                    i = h + e[3], r = c + e[4], null === n[0].match(/[CcSs]/) ? (l = h, u = c) : (l = 2 * h - l, u = 2 * c - u), t.bezierCurveTo(l + f, u + d, h + e[1] + f, c + e[2] + d, i + f, r + d), l = h + e[1], u = c + e[2], h = i, c = r;
                    break;
                case "S":
                    i = e[3], r = e[4], null === n[0].match(/[CcSs]/) ? (l = h, u = c) : (l = 2 * h - l, u = 2 * c - u), t.bezierCurveTo(l + f, u + d, e[1] + f, e[2] + d, i + f, r + d), h = i, c = r, l = e[1], u = e[2];
                    break;
                case "q":
                    i = h + e[3], r = c + e[4], l = h + e[1], u = c + e[2], t.quadraticCurveTo(l + f, u + d, i + f, r + d), h = i, c = r;
                    break;
                case "Q":
                    i = e[3], r = e[4], t.quadraticCurveTo(e[1] + f, e[2] + d, i + f, r + d), h = i, c = r, l = e[1], u = e[2];
                    break;
                case "t":
                    i = h + e[1], r = c + e[2], null === n[0].match(/[QqTt]/) ? (l = h, u = c) : (l = 2 * h - l, u = 2 * c - u), t.quadraticCurveTo(l + f, u + d, i + f, r + d), h = i, c = r;
                    break;
                case "T":
                    i = e[1], r = e[2], null === n[0].match(/[QqTt]/) ? (l = h, u = c) : (l = 2 * h - l, u = 2 * c - u), t.quadraticCurveTo(l + f, u + d, i + f, r + d), h = i, c = r;
                    break;
                case "a":
                    o(t, h + f, c + d, [e[1], e[2], e[3], e[4], e[5], e[6] + h + f, e[7] + c + d]), h += e[6], c += e[7];
                    break;
                case "A":
                    o(t, h + f, c + d, [e[1], e[2], e[3], e[4], e[5], e[6] + f, e[7] + d]), h = e[6], c = e[7];
                    break;
                case "z":
                case "Z": h = s, c = a, t.closePath();
            }
            n = e;
        } }, _render: function (t) { this._renderPathCommands(t), this._renderFill(t), this._renderStroke(t); }, toString: function () { return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>"; }, toObject: function (t) { var e = n(this.callSuper("toObject", t), { path: this.path.map(function (t) { return t.slice(); }), pathOffset: this.pathOffset }); return this.sourcePath && (e.sourcePath = this.sourcePath), this.transformMatrix && (e.transformMatrix = this.transformMatrix), e; }, toDatalessObject: function (t) { var e = this.toObject(t); return this.sourcePath && (e.path = this.sourcePath), delete e.sourcePath, e; }, toSVG: function (t) { for (var e = [], i = this._createBaseSVGMarkup(), r = "", n = 0, s = this.path.length; n < s; n++)
            e.push(this.path[n].join(" ")); var o = e.join(" "); return this.group && "path-group" === this.group.type || (r = " translate(" + -this.pathOffset.x + ", " + -this.pathOffset.y + ") "), i.push("<path ", this.getSvgId(), 'd="', o, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), r, this.getSvgTransformMatrix(), '" stroke-linecap="round" ', "/>\n"), t ? t(i.join("")) : i.join(""); }, complexity: function () { return this.path.length; }, _parsePath: function () { for (var t, e, i, r, n, s = [], o = [], c = /([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi, l = 0, u = this.path.length; l < u; l++) {
            for (t = this.path[l], r = t.slice(1).trim(), o.length = 0; i = c.exec(r);)
                o.push(i[0]);
            n = [t.charAt(0)];
            for (var f = 0, d = o.length; f < d; f++)
                e = parseFloat(o[f]), isNaN(e) || n.push(e);
            var g = n[0], p = a[g.toLowerCase()], v = h[g] || g;
            if (n.length - 1 > p)
                for (var b = 1, m = n.length; b < m; b += p)
                    s.push([g].concat(n.slice(b, b + p))), g = v;
            else
                s.push(n);
        } return s; }, _parseDimensions: function () { for (var t, n, s, o, a = [], h = [], c = null, l = 0, u = 0, f = 0, d = 0, g = 0, p = 0, v = 0, b = this.path.length; v < b; ++v) {
            switch (t = this.path[v], t[0]) {
                case "l":
                    f += t[1], d += t[2], o = [];
                    break;
                case "L":
                    f = t[1], d = t[2], o = [];
                    break;
                case "h":
                    f += t[1], o = [];
                    break;
                case "H":
                    f = t[1], o = [];
                    break;
                case "v":
                    d += t[1], o = [];
                    break;
                case "V":
                    d = t[1], o = [];
                    break;
                case "m":
                    f += t[1], d += t[2], l = f, u = d, o = [];
                    break;
                case "M":
                    f = t[1], d = t[2], l = f, u = d, o = [];
                    break;
                case "c":
                    n = f + t[5], s = d + t[6], g = f + t[3], p = d + t[4], o = e.util.getBoundsOfCurve(f, d, f + t[1], d + t[2], g, p, n, s), f = n, d = s;
                    break;
                case "C":
                    f = t[5], d = t[6], g = t[3], p = t[4], o = e.util.getBoundsOfCurve(f, d, t[1], t[2], g, p, f, d);
                    break;
                case "s":
                    n = f + t[3], s = d + t[4], null === c[0].match(/[CcSs]/) ? (g = f, p = d) : (g = 2 * f - g, p = 2 * d - p), o = e.util.getBoundsOfCurve(f, d, g, p, f + t[1], d + t[2], n, s), g = f + t[1], p = d + t[2], f = n, d = s;
                    break;
                case "S":
                    n = t[3], s = t[4], null === c[0].match(/[CcSs]/) ? (g = f, p = d) : (g = 2 * f - g, p = 2 * d - p), o = e.util.getBoundsOfCurve(f, d, g, p, t[1], t[2], n, s), f = n, d = s, g = t[1], p = t[2];
                    break;
                case "q":
                    n = f + t[3], s = d + t[4], g = f + t[1], p = d + t[2], o = e.util.getBoundsOfCurve(f, d, g, p, g, p, n, s), f = n, d = s;
                    break;
                case "Q":
                    g = t[1], p = t[2], o = e.util.getBoundsOfCurve(f, d, g, p, g, p, t[3], t[4]), f = t[3], d = t[4];
                    break;
                case "t":
                    n = f + t[1], s = d + t[2], null === c[0].match(/[QqTt]/) ? (g = f, p = d) : (g = 2 * f - g, p = 2 * d - p), o = e.util.getBoundsOfCurve(f, d, g, p, g, p, n, s), f = n, d = s;
                    break;
                case "T":
                    n = t[1], s = t[2], null === c[0].match(/[QqTt]/) ? (g = f, p = d) : (g = 2 * f - g, p = 2 * d - p), o = e.util.getBoundsOfCurve(f, d, g, p, g, p, n, s), f = n, d = s;
                    break;
                case "a":
                    o = e.util.getBoundsOfArc(f, d, t[1], t[2], t[3], t[4], t[5], t[6] + f, t[7] + d), f += t[6], d += t[7];
                    break;
                case "A":
                    o = e.util.getBoundsOfArc(f, d, t[1], t[2], t[3], t[4], t[5], t[6], t[7]), f = t[6], d = t[7];
                    break;
                case "z":
                case "Z": f = l, d = u;
            }
            c = t, o.forEach(function (t) { a.push(t.x), h.push(t.y); }), a.push(f), h.push(d);
        } var m = i(a) || 0, y = i(h) || 0, _ = r(a) || 0, x = r(h) || 0, S = _ - m, C = x - y, w = { left: m, top: y, width: S, height: C }; return w; } }), e.Path.fromObject = function (t, i) { var r; return "string" != typeof t.path ? (r = new e.Path(t.path, t), i && i(r), r) : void e.loadSVGFromURL(t.path, function (n) { var s = t.path; r = n[0], delete t.path, e.util.object.extend(r, t), r.setSourcePath(s), i && i(r); }); }, e.Path.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(["d"]), e.Path.fromElement = function (t, i, r) { var s = e.parseAttributes(t, e.Path.ATTRIBUTE_NAMES); i && i(new e.Path(s.d, n(s, r))); }, void (e.Path.async = !0));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.invoke, n = e.Object.prototype.toObject;
    return e.PathGroup ? void e.warn("fabric.PathGroup is already defined") : (e.PathGroup = e.util.createClass(e.Path, { type: "path-group", fill: "",
        initialize: function (t, e) { e = e || {}, this.paths = t || []; for (var i = this.paths.length; i--;)
            this.paths[i].group = this; e.toBeParsed && (this.parseDimensionsFromPaths(e), delete e.toBeParsed), this.setOptions(e), this.setCoords(), e.sourcePath && this.setSourcePath(e.sourcePath); }, parseDimensionsFromPaths: function (t) { for (var i, r, n, s, o, a, h = [], c = [], l = this.paths.length; l--;) {
            n = this.paths[l], s = n.height + n.strokeWidth, o = n.width + n.strokeWidth, i = [{ x: n.left, y: n.top }, { x: n.left + o, y: n.top }, { x: n.left, y: n.top + s }, { x: n.left + o, y: n.top + s }], a = this.paths[l].transformMatrix;
            for (var u = 0; u < i.length; u++)
                r = i[u], a && (r = e.util.transformPoint(r, a, !1)), h.push(r.x), c.push(r.y);
        } t.width = Math.max.apply(null, h), t.height = Math.max.apply(null, c); }, render: function (t) { if (this.visible) {
            t.save(), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.transform(t), this._setShadow(t), this.clipTo && e.util.clipContext(this, t), t.translate(-this.width / 2, -this.height / 2);
            for (var i = 0, r = this.paths.length; i < r; ++i)
                this.paths[i].render(t, !0);
            this.clipTo && t.restore(), t.restore();
        } }, _set: function (t, e) { if ("fill" === t && e && this.isSameColor())
            for (var i = this.paths.length; i--;)
                this.paths[i]._set(t, e); return this.callSuper("_set", t, e); }, toObject: function (t) { var e = i(n.call(this, t), { paths: r(this.getObjects(), "toObject", t) }); return this.sourcePath && (e.sourcePath = this.sourcePath), e; }, toDatalessObject: function (t) { var e = this.toObject(t); return this.sourcePath && (e.paths = this.sourcePath), e; }, toSVG: function (t) { var e = this.getObjects(), i = this.getPointByOrigin("left", "top"), r = "translate(" + i.x + " " + i.y + ")", n = this._createBaseSVGMarkup(); n.push("<g ", this.getSvgId(), 'style="', this.getSvgStyles(), '" ', 'transform="', this.getSvgTransformMatrix(), r, this.getSvgTransform(), '" ', ">\n"); for (var s = 0, o = e.length; s < o; s++)
            n.push("\t", e[s].toSVG(t)); return n.push("</g>\n"), t ? t(n.join("")) : n.join(""); }, toString: function () { return "#<fabric.PathGroup (" + this.complexity() + "): { top: " + this.top + ", left: " + this.left + " }>"; }, isSameColor: function () { var t = this.getObjects()[0].get("fill") || ""; return "string" == typeof t && (t = t.toLowerCase(), this.getObjects().every(function (e) { var i = e.get("fill") || ""; return "string" == typeof i && i.toLowerCase() === t; })); }, complexity: function () { return this.paths.reduce(function (t, e) { return t + (e && e.complexity ? e.complexity() : 0); }, 0); }, getObjects: function () { return this.paths; } }), e.PathGroup.fromObject = function (t, i) { "string" == typeof t.paths ? e.loadSVGFromURL(t.paths, function (r) { var n = t.paths; delete t.paths; var s = e.util.groupSVGElements(r, t, n); i(s); }) : e.util.enlivenObjects(t.paths, function (r) { delete t.paths, i(new e.PathGroup(r, t)); }); }, void (e.PathGroup.async = !0));
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.array.min, n = e.util.array.max, s = e.util.array.invoke;
    if (!e.Group) {
        var o = { lockMovementX: !0, lockMovementY: !0, lockRotation: !0, lockScalingX: !0, lockScalingY: !0, lockUniScaling: !0 };
        e.Group = e.util.createClass(e.Object, e.Collection, { type: "group", strokeWidth: 0, subTargetCheck: !1, initialize: function (t, e, i) { e = e || {}, this._objects = [], i && this.callSuper("initialize", e), this._objects = t || []; for (var r = this._objects.length; r--;)
                this._objects[r].group = this; this.originalState = {}, e.originX && (this.originX = e.originX), e.originY && (this.originY = e.originY), i ? this._updateObjectsCoords(!0) : (this._calcBounds(), this._updateObjectsCoords(), this.callSuper("initialize", e)), this.setCoords(), this.saveCoords(); }, _updateObjectsCoords: function (t) { for (var e = this._objects.length; e--;)
                this._updateObjectCoords(this._objects[e], t); }, _updateObjectCoords: function (t, e) { if (t.__origHasControls = t.hasControls, t.hasControls = !1, !e) {
                var i = t.getLeft(), r = t.getTop(), n = this.getCenterPoint();
                t.set({ originalLeft: i, originalTop: r, left: i - n.x, top: r - n.y }), t.setCoords();
            } }, toString: function () { return "#<fabric.Group: (" + this.complexity() + ")>"; }, addWithUpdate: function (t) { return this._restoreObjectsState(), e.util.resetObjectTransform(this), t && (this._objects.push(t), t.group = this, t._set("canvas", this.canvas)), this.forEachObject(this._setObjectActive, this), this._calcBounds(), this._updateObjectsCoords(), this; }, _setObjectActive: function (t) { t.set("active", !0), t.group = this; }, removeWithUpdate: function (t) { return this._restoreObjectsState(), e.util.resetObjectTransform(this), this.forEachObject(this._setObjectActive, this), this.remove(t), this._calcBounds(), this._updateObjectsCoords(), this; }, _onObjectAdded: function (t) { t.group = this, t._set("canvas", this.canvas); }, _onObjectRemoved: function (t) { delete t.group, t.set("active", !1); }, delegatedProperties: { fill: !0, stroke: !0, strokeWidth: !0, fontFamily: !0, fontWeight: !0, fontSize: !0, fontStyle: !0, lineHeight: !0, textDecoration: !0, textAlign: !0, backgroundColor: !0 }, _set: function (t, e) { var i = this._objects.length; if (this.delegatedProperties[t] || "canvas" === t)
                for (; i--;)
                    this._objects[i].set(t, e);
            else
                for (; i--;)
                    this._objects[i].setOnGroup(t, e); this.callSuper("_set", t, e); }, toObject: function (t) { return i(this.callSuper("toObject", t), { objects: s(this._objects, "toObject", t) }); }, render: function (t) { if (this.visible) {
                t.save(), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.transform(t), this._setShadow(t), this.clipTo && e.util.clipContext(this, t), this._transformDone = !0;
                for (var i = 0, r = this._objects.length; i < r; i++)
                    this._renderObject(this._objects[i], t);
                this.clipTo && t.restore(), t.restore(), this._transformDone = !1;
            } }, _renderControls: function (t, e) { this.callSuper("_renderControls", t, e); for (var i = 0, r = this._objects.length; i < r; i++)
                this._objects[i]._renderControls(t); }, _renderObject: function (t, e) { if (t.visible) {
                var i = t.hasRotatingPoint;
                t.hasRotatingPoint = !1, t.render(e), t.hasRotatingPoint = i;
            } }, _restoreObjectsState: function () { return this._objects.forEach(this._restoreObjectState, this), this; }, realizeTransform: function (t) { var i = t.calcTransformMatrix(), r = e.util.qrDecompose(i), n = new e.Point(r.translateX, r.translateY); return t.scaleX = r.scaleX, t.scaleY = r.scaleY, t.skewX = r.skewX, t.skewY = r.skewY, t.angle = r.angle, t.flipX = !1, t.flipY = !1, t.setPositionByOrigin(n, "center", "center"), t; }, _restoreObjectState: function (t) { return this.realizeTransform(t), t.setCoords(), t.hasControls = t.__origHasControls, delete t.__origHasControls, t.set("active", !1), delete t.group, this; }, destroy: function () { return this._restoreObjectsState(); }, saveCoords: function () { return this._originalLeft = this.get("left"), this._originalTop = this.get("top"), this; }, hasMoved: function () { return this._originalLeft !== this.get("left") || this._originalTop !== this.get("top"); }, setObjectsCoords: function () { return this.forEachObject(function (t) { t.setCoords(); }), this; }, _calcBounds: function (t) { for (var e, i, r, n = [], s = [], o = ["tr", "br", "bl", "tl"], a = 0, h = this._objects.length, c = o.length; a < h; ++a)
                for (e = this._objects[a], e.setCoords(), r = 0; r < c; r++)
                    i = o[r], n.push(e.oCoords[i].x), s.push(e.oCoords[i].y); this.set(this._getBounds(n, s, t)); }, _getBounds: function (t, i, s) { var o = e.util.invertTransform(this.getViewportTransform()), a = e.util.transformPoint(new e.Point(r(t), r(i)), o), h = e.util.transformPoint(new e.Point(n(t), n(i)), o), c = { width: h.x - a.x || 0, height: h.y - a.y || 0 }; return s || (c.left = a.x || 0, c.top = a.y || 0, "center" === this.originX && (c.left += c.width / 2), "right" === this.originX && (c.left += c.width), "center" === this.originY && (c.top += c.height / 2), "bottom" === this.originY && (c.top += c.height)), c; }, toSVG: function (t) { var e = this._createBaseSVGMarkup(); e.push("<g ", this.getSvgId(), 'transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '" style="', this.getSvgFilter(), '">\n'); for (var i = 0, r = this._objects.length; i < r; i++)
                e.push("\t", this._objects[i].toSVG(t)); return e.push("</g>\n"), t ? t(e.join("")) : e.join(""); }, get: function (t) { if (t in o) {
                if (this[t])
                    return this[t];
                for (var e = 0, i = this._objects.length; e < i; e++)
                    if (this._objects[e][t])
                        return !0;
                return !1;
            } return t in this.delegatedProperties ? this._objects[0] && this._objects[0].get(t) : this[t]; } }), e.Group.fromObject = function (t, i) { e.util.enlivenObjects(t.objects, function (r) { delete t.objects, i && i(new e.Group(r, t, !0)); }); }, e.Group.async = !0;
    }
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = fabric.util.object.extend;
    if (t.fabric || (t.fabric = {}), t.fabric.Image)
        return void fabric.warn("fabric.Image is already defined.");
    var i = fabric.Object.prototype.stateProperties.concat();
    i.push("alignX", "alignY", "meetOrSlice"), fabric.Image = fabric.util.createClass(fabric.Object, { type: "image", crossOrigin: "", alignX: "none", alignY: "none", meetOrSlice: "meet", strokeWidth: 0, _lastScaleX: 1, _lastScaleY: 1, minimumScaleTrigger: .5, stateProperties: i, initialize: function (t, e, i) { e || (e = {}), this.filters = [], this.resizeFilters = [], this.callSuper("initialize", e), this._initElement(t, e, i); }, getElement: function () { return this._element; }, setElement: function (t, e, i) { var r, n; return this._element = t, this._originalElement = t, this._initConfig(i), 0 === this.resizeFilters.length ? r = e : (n = this, r = function () { n.applyFilters(e, n.resizeFilters, n._filteredEl || n._originalElement, !0); }), 0 !== this.filters.length ? this.applyFilters(r) : r && r(this), this; }, setCrossOrigin: function (t) { return this.crossOrigin = t, this._element.crossOrigin = t, this; }, getOriginalSize: function () { var t = this.getElement(); return { width: t.width, height: t.height }; }, _stroke: function (t) { if (this.stroke && 0 !== this.strokeWidth) {
            var e = this.width / 2, i = this.height / 2;
            t.beginPath(), t.moveTo(-e, -i), t.lineTo(e, -i), t.lineTo(e, i), t.lineTo(-e, i), t.lineTo(-e, -i), t.closePath();
        } }, _renderDashedStroke: function (t) { var e = -this.width / 2, i = -this.height / 2, r = this.width, n = this.height; t.save(), this._setStrokeStyles(t), t.beginPath(), fabric.util.drawDashedLine(t, e, i, e + r, i, this.strokeDashArray), fabric.util.drawDashedLine(t, e + r, i, e + r, i + n, this.strokeDashArray), fabric.util.drawDashedLine(t, e + r, i + n, e, i + n, this.strokeDashArray), fabric.util.drawDashedLine(t, e, i + n, e, i, this.strokeDashArray), t.closePath(), t.restore(); }, toObject: function (t) { var i = [], r = [], n = 1, s = 1; this.filters.forEach(function (t) { t && ("Resize" === t.type && (n *= t.scaleX, s *= t.scaleY), i.push(t.toObject())); }), this.resizeFilters.forEach(function (t) { t && r.push(t.toObject()); }); var o = e(this.callSuper("toObject", t), { src: this.getSrc(), filters: i, resizeFilters: r, crossOrigin: this.crossOrigin, alignX: this.alignX, alignY: this.alignY, meetOrSlice: this.meetOrSlice }); return o.width /= n, o.height /= s, this.includeDefaultValues || this._removeDefaultValues(o), o; }, toSVG: function (t) { var e = this._createBaseSVGMarkup(), i = -this.width / 2, r = -this.height / 2, n = "none", s = !0; if (this.group && "path-group" === this.group.type && (i = this.left, r = this.top), "none" !== this.alignX && "none" !== this.alignY && (n = "x" + this.alignX + "Y" + this.alignY + " " + this.meetOrSlice), e.push('<g transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '">\n', "<image ", this.getSvgId(), 'xlink:href="', this.getSvgSrc(s), '" x="', i, '" y="', r, '" style="', this.getSvgStyles(), '" width="', this.width, '" height="', this.height, '" preserveAspectRatio="', n, '"', "></image>\n"), this.stroke || this.strokeDashArray) {
            var o = this.fill;
            this.fill = null, e.push("<rect ", 'x="', i, '" y="', r, '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '"/>\n'), this.fill = o;
        } return e.push("</g>\n"), t ? t(e.join("")) : e.join(""); }, getSrc: function (t) { var e = t ? this._element : this._originalElement; return e ? fabric.isLikelyNode ? e._src : e.src : this.src || ""; }, setSrc: function (t, e, i) { fabric.util.loadImage(t, function (t) { return this.setElement(t, e, i); }, this, i && i.crossOrigin); }, toString: function () { return '#<fabric.Image: { src: "' + this.getSrc() + '" }>'; }, applyFilters: function (t, e, i, r) { if (e = e || this.filters, i = i || this._originalElement) {
            var n, s, o = fabric.util.createImage(), a = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio, h = this.minimumScaleTrigger / a, c = this;
            if (0 === e.length)
                return this._element = i, t && t(this), i;
            var l = fabric.util.createCanvasElement();
            return l.width = i.width, l.height = i.height, l.getContext("2d").drawImage(i, 0, 0, i.width, i.height), e.forEach(function (t) { t && (r ? (n = c.scaleX < h ? c.scaleX : 1, s = c.scaleY < h ? c.scaleY : 1, n * a < 1 && (n *= a), s * a < 1 && (s *= a)) : (n = t.scaleX, s = t.scaleY), t.applyTo(l, n, s), r || "Resize" !== t.type || (c.width *= t.scaleX, c.height *= t.scaleY)); }), o.width = l.width, o.height = l.height, fabric.isLikelyNode ? (o.src = l.toBuffer(void 0, fabric.Image.pngCompression), c._element = o, !r && (c._filteredEl = o), t && t(c)) : (o.onload = function () { c._element = o, !r && (c._filteredEl = o), t && t(c), o.onload = l = null; }, o.src = l.toDataURL("image/png")), l;
        } }, _render: function (t, e) { var i, r, n, s = this._findMargins(); i = e ? this.left : -this.width / 2, r = e ? this.top : -this.height / 2, "slice" === this.meetOrSlice && (t.beginPath(), t.rect(i, r, this.width, this.height), t.clip()), this.isMoving === !1 && this.resizeFilters.length && this._needsResize() ? (this._lastScaleX = this.scaleX, this._lastScaleY = this.scaleY, n = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, !0)) : n = this._element, n && t.drawImage(n, i + s.marginX, r + s.marginY, s.width, s.height), this._stroke(t), this._renderStroke(t); }, _needsResize: function () { return this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY; }, _findMargins: function () { var t, e, i = this.width, r = this.height, n = 0, s = 0; return "none" === this.alignX && "none" === this.alignY || (t = [this.width / this._element.width, this.height / this._element.height], e = "meet" === this.meetOrSlice ? Math.min.apply(null, t) : Math.max.apply(null, t), i = this._element.width * e, r = this._element.height * e, "Mid" === this.alignX && (n = (this.width - i) / 2), "Max" === this.alignX && (n = this.width - i), "Mid" === this.alignY && (s = (this.height - r) / 2), "Max" === this.alignY && (s = this.height - r)), { width: i, height: r, marginX: n, marginY: s }; }, _resetWidthHeight: function () { var t = this.getElement(); this.set("width", t.width), this.set("height", t.height); }, _initElement: function (t, e, i) { this.setElement(fabric.util.getById(t), i, e), fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS); }, _initConfig: function (t) { t || (t = {}), this.setOptions(t), this._setWidthHeight(t), this._element && this.crossOrigin && (this._element.crossOrigin = this.crossOrigin); }, _initFilters: function (t, e) { t && t.length ? fabric.util.enlivenObjects(t, function (t) { e && e(t); }, "fabric.Image.filters") : e && e(); }, _setWidthHeight: function (t) { this.width = "width" in t ? t.width : this.getElement() ? this.getElement().width || 0 : 0, this.height = "height" in t ? t.height : this.getElement() ? this.getElement().height || 0 : 0; }, complexity: function () { return 1; } }), fabric.Image.CSS_CANVAS = "canvas-img", fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc, fabric.Image.fromObject = function (t, e) { fabric.util.loadImage(t.src, function (i) { fabric.Image.prototype._initFilters.call(t, t.filters, function (r) { t.filters = r || [], fabric.Image.prototype._initFilters.call(t, t.resizeFilters, function (r) { return t.resizeFilters = r || [], new fabric.Image(i, t, e); }); }); }, null, t.crossOrigin); }, fabric.Image.fromURL = function (t, e, i) { fabric.util.loadImage(t, function (t) { e && e(new fabric.Image(t, i)); }, null, i && i.crossOrigin); }, fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat("x y width height preserveAspectRatio xlink:href".split(" ")), fabric.Image.fromElement = function (t, i, r) { var n, s = fabric.parseAttributes(t, fabric.Image.ATTRIBUTE_NAMES); s.preserveAspectRatio && (n = fabric.util.parsePreserveAspectRatioAttribute(s.preserveAspectRatio), e(s, n)), fabric.Image.fromURL(s["xlink:href"], i, e(r ? fabric.util.object.clone(r) : {}, s)); }, fabric.Image.async = !0, fabric.Image.pngCompression = 1;
}("undefined" != typeof exports ? exports : this), fabric.util.object.extend(fabric.Object.prototype, { _getAngleValueForStraighten: function () { var t = this.getAngle() % 360; return t > 0 ? 90 * Math.round((t - 1) / 90) : 90 * Math.round(t / 90); }, straighten: function () { return this.setAngle(this._getAngleValueForStraighten()), this; }, fxStraighten: function (t) { t = t || {}; var e = function () { }, i = t.onComplete || e, r = t.onChange || e, n = this; return fabric.util.animate({ startValue: this.get("angle"), endValue: this._getAngleValueForStraighten(), duration: this.FX_DURATION, onChange: function (t) { n.setAngle(t), r(); }, onComplete: function () { n.setCoords(), i(); }, onStart: function () { n.set("active", !1); } }), this; } }), fabric.util.object.extend(fabric.StaticCanvas.prototype, { straightenObject: function (t) { return t.straighten(), this.renderAll(), this; }, fxStraightenObject: function (t) { return t.fxStraighten({ onChange: this.renderAll.bind(this) }), this; } }), fabric.Image.filters = fabric.Image.filters || {}, fabric.Image.filters.BaseFilter = fabric.util.createClass({ type: "BaseFilter", initialize: function (t) { t && this.setOptions(t); }, setOptions: function (t) { for (var e in t)
        this[e] = t[e]; }, toObject: function () { return { type: this.type }; }, toJSON: function () { return this.toObject(); } }), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Brightness = n(r.BaseFilter, { type: "Brightness", initialize: function (t) { t = t || {}, this.brightness = t.brightness || 0; }, applyTo: function (t) { for (var e = t.getContext("2d"), i = e.getImageData(0, 0, t.width, t.height), r = i.data, n = this.brightness, s = 0, o = r.length; s < o; s += 4)
            r[s] += n, r[s + 1] += n, r[s + 2] += n; e.putImageData(i, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { brightness: this.brightness }); } }), e.Image.filters.Brightness.fromObject = function (t) { return new e.Image.filters.Brightness(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Convolute = n(r.BaseFilter, { type: "Convolute", initialize: function (t) { t = t || {}, this.opaque = t.opaque, this.matrix = t.matrix || [0, 0, 0, 0, 1, 0, 0, 0, 0]; }, applyTo: function (t) { for (var e, i, r, n, s, o, a, h, c, l = this.matrix, u = t.getContext("2d"), f = u.getImageData(0, 0, t.width, t.height), d = Math.round(Math.sqrt(l.length)), g = Math.floor(d / 2), p = f.data, v = f.width, b = f.height, m = u.createImageData(v, b), y = m.data, _ = this.opaque ? 1 : 0, x = 0; x < b; x++)
            for (var S = 0; S < v; S++) {
                s = 4 * (x * v + S), e = 0, i = 0, r = 0, n = 0;
                for (var C = 0; C < d; C++)
                    for (var w = 0; w < d; w++)
                        a = x + C - g, o = S + w - g, a < 0 || a > b || o < 0 || o > v || (h = 4 * (a * v + o), c = l[C * d + w], e += p[h] * c, i += p[h + 1] * c, r += p[h + 2] * c, n += p[h + 3] * c);
                y[s] = e, y[s + 1] = i, y[s + 2] = r, y[s + 3] = n + _ * (255 - n);
            } u.putImageData(m, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { opaque: this.opaque, matrix: this.matrix }); } }), e.Image.filters.Convolute.fromObject = function (t) { return new e.Image.filters.Convolute(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.GradientTransparency = n(r.BaseFilter, { type: "GradientTransparency", initialize: function (t) { t = t || {}, this.threshold = t.threshold || 100; }, applyTo: function (t) { for (var e = t.getContext("2d"), i = e.getImageData(0, 0, t.width, t.height), r = i.data, n = this.threshold, s = r.length, o = 0, a = r.length; o < a; o += 4)
            r[o + 3] = n + 255 * (s - o) / s; e.putImageData(i, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { threshold: this.threshold }); } }), e.Image.filters.GradientTransparency.fromObject = function (t) { return new e.Image.filters.GradientTransparency(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.Image.filters, r = e.util.createClass;
    i.Grayscale = r(i.BaseFilter, { type: "Grayscale", applyTo: function (t) { for (var e, i = t.getContext("2d"), r = i.getImageData(0, 0, t.width, t.height), n = r.data, s = r.width * r.height * 4, o = 0; o < s;)
            e = (n[o] + n[o + 1] + n[o + 2]) / 3, n[o] = e, n[o + 1] = e, n[o + 2] = e, o += 4; i.putImageData(r, 0, 0); } }), e.Image.filters.Grayscale.fromObject = function () { return new e.Image.filters.Grayscale; };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.Image.filters, r = e.util.createClass;
    i.Invert = r(i.BaseFilter, { type: "Invert", applyTo: function (t) { var e, i = t.getContext("2d"), r = i.getImageData(0, 0, t.width, t.height), n = r.data, s = n.length; for (e = 0; e < s; e += 4)
            n[e] = 255 - n[e], n[e + 1] = 255 - n[e + 1], n[e + 2] = 255 - n[e + 2]; i.putImageData(r, 0, 0); } }), e.Image.filters.Invert.fromObject = function () { return new e.Image.filters.Invert; };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Mask = n(r.BaseFilter, { type: "Mask", initialize: function (t) { t = t || {}, this.mask = t.mask, this.channel = [0, 1, 2, 3].indexOf(t.channel) > -1 ? t.channel : 0; }, applyTo: function (t) { if (this.mask) {
            var i, r = t.getContext("2d"), n = r.getImageData(0, 0, t.width, t.height), s = n.data, o = this.mask.getElement(), a = e.util.createCanvasElement(), h = this.channel, c = n.width * n.height * 4;
            a.width = t.width, a.height = t.height, a.getContext("2d").drawImage(o, 0, 0, t.width, t.height);
            var l = a.getContext("2d").getImageData(0, 0, t.width, t.height), u = l.data;
            for (i = 0; i < c; i += 4)
                s[i + 3] = u[i + h];
            r.putImageData(n, 0, 0);
        } }, toObject: function () { return i(this.callSuper("toObject"), { mask: this.mask.toObject(), channel: this.channel }); } }), e.Image.filters.Mask.fromObject = function (t, i) { e.util.loadImage(t.mask.src, function (r) { t.mask = new e.Image(r, t.mask), i && i(new e.Image.filters.Mask(t)); }); }, e.Image.filters.Mask.async = !0;
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Noise = n(r.BaseFilter, { type: "Noise", initialize: function (t) { t = t || {}, this.noise = t.noise || 0; }, applyTo: function (t) { for (var e, i = t.getContext("2d"), r = i.getImageData(0, 0, t.width, t.height), n = r.data, s = this.noise, o = 0, a = n.length; o < a; o += 4)
            e = (.5 - Math.random()) * s, n[o] += e, n[o + 1] += e, n[o + 2] += e; i.putImageData(r, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { noise: this.noise }); } }), e.Image.filters.Noise.fromObject = function (t) { return new e.Image.filters.Noise(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Pixelate = n(r.BaseFilter, { type: "Pixelate", initialize: function (t) { t = t || {}, this.blocksize = t.blocksize || 4; }, applyTo: function (t) { var e, i, r, n, s, o, a, h = t.getContext("2d"), c = h.getImageData(0, 0, t.width, t.height), l = c.data, u = c.height, f = c.width; for (i = 0; i < u; i += this.blocksize)
            for (r = 0; r < f; r += this.blocksize) {
                e = 4 * i * f + 4 * r, n = l[e], s = l[e + 1], o = l[e + 2], a = l[e + 3];
                for (var d = i, g = i + this.blocksize; d < g; d++)
                    for (var p = r, v = r + this.blocksize; p < v; p++)
                        e = 4 * d * f + 4 * p, l[e] = n, l[e + 1] = s, l[e + 2] = o, l[e + 3] = a;
            } h.putImageData(c, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { blocksize: this.blocksize }); } }), e.Image.filters.Pixelate.fromObject = function (t) { return new e.Image.filters.Pixelate(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.RemoveWhite = n(r.BaseFilter, { type: "RemoveWhite", initialize: function (t) { t = t || {}, this.threshold = t.threshold || 30, this.distance = t.distance || 20; }, applyTo: function (t) { for (var e, i, r, n = t.getContext("2d"), s = n.getImageData(0, 0, t.width, t.height), o = s.data, a = this.threshold, h = this.distance, c = 255 - a, l = Math.abs, u = 0, f = o.length; u < f; u += 4)
            e = o[u], i = o[u + 1], r = o[u + 2], e > c && i > c && r > c && l(e - i) < h && l(e - r) < h && l(i - r) < h && (o[u + 3] = 0); n.putImageData(s, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { threshold: this.threshold, distance: this.distance }); } }), e.Image.filters.RemoveWhite.fromObject = function (t) { return new e.Image.filters.RemoveWhite(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.Image.filters, r = e.util.createClass;
    i.Sepia = r(i.BaseFilter, { type: "Sepia", applyTo: function (t) { var e, i, r = t.getContext("2d"), n = r.getImageData(0, 0, t.width, t.height), s = n.data, o = s.length; for (e = 0; e < o; e += 4)
            i = .3 * s[e] + .59 * s[e + 1] + .11 * s[e + 2], s[e] = i + 100, s[e + 1] = i + 50, s[e + 2] = i + 255; r.putImageData(n, 0, 0); } }), e.Image.filters.Sepia.fromObject = function () { return new e.Image.filters.Sepia; };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.Image.filters, r = e.util.createClass;
    i.Sepia2 = r(i.BaseFilter, { type: "Sepia2", applyTo: function (t) { var e, i, r, n, s = t.getContext("2d"), o = s.getImageData(0, 0, t.width, t.height), a = o.data, h = a.length; for (e = 0; e < h; e += 4)
            i = a[e], r = a[e + 1], n = a[e + 2], a[e] = (.393 * i + .769 * r + .189 * n) / 1.351, a[e + 1] = (.349 * i + .686 * r + .168 * n) / 1.203, a[e + 2] = (.272 * i + .534 * r + .131 * n) / 2.14; s.putImageData(o, 0, 0); } }), e.Image.filters.Sepia2.fromObject = function () { return new e.Image.filters.Sepia2; };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Tint = n(r.BaseFilter, { type: "Tint", initialize: function (t) { t = t || {}, this.color = t.color || "#000000", this.opacity = "undefined" != typeof t.opacity ? t.opacity : new e.Color(this.color).getAlpha(); }, applyTo: function (t) { var i, r, n, s, o, a, h, c, l, u = t.getContext("2d"), f = u.getImageData(0, 0, t.width, t.height), d = f.data, g = d.length; for (l = new e.Color(this.color).getSource(), r = l[0] * this.opacity, n = l[1] * this.opacity, s = l[2] * this.opacity, c = 1 - this.opacity, i = 0; i < g; i += 4)
            o = d[i], a = d[i + 1], h = d[i + 2], d[i] = r + o * c, d[i + 1] = n + a * c, d[i + 2] = s + h * c; u.putImageData(f, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { color: this.color, opacity: this.opacity }); } }), e.Image.filters.Tint.fromObject = function (t) { return new e.Image.filters.Tint(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Multiply = n(r.BaseFilter, { type: "Multiply", initialize: function (t) { t = t || {}, this.color = t.color || "#000000"; }, applyTo: function (t) { var i, r, n = t.getContext("2d"), s = n.getImageData(0, 0, t.width, t.height), o = s.data, a = o.length; for (r = new e.Color(this.color).getSource(), i = 0; i < a; i += 4)
            o[i] *= r[0] / 255, o[i + 1] *= r[1] / 255, o[i + 2] *= r[2] / 255; n.putImageData(s, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { color: this.color }); } }), e.Image.filters.Multiply.fromObject = function (t) { return new e.Image.filters.Multiply(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric, i = e.Image.filters, r = e.util.createClass;
    i.Blend = r(i.BaseFilter, { type: "Blend", initialize: function (t) { t = t || {}, this.color = t.color || "#000", this.image = t.image || !1, this.mode = t.mode || "multiply", this.alpha = t.alpha || 1; }, applyTo: function (t) { var i, r, n, s, o, a, h, c, l, u, f = t.getContext("2d"), d = f.getImageData(0, 0, t.width, t.height), g = d.data, p = !1; if (this.image) {
            p = !0;
            var v = e.util.createCanvasElement();
            v.width = this.image.width, v.height = this.image.height;
            var b = new e.StaticCanvas(v);
            b.add(this.image);
            var m = b.getContext("2d");
            u = m.getImageData(0, 0, b.width, b.height).data;
        }
        else
            u = new e.Color(this.color).getSource(), i = u[0] * this.alpha, r = u[1] * this.alpha, n = u[2] * this.alpha; for (var y = 0, _ = g.length; y < _; y += 4)
            switch (s = g[y], o = g[y + 1], a = g[y + 2], p && (i = u[y] * this.alpha, r = u[y + 1] * this.alpha, n = u[y + 2] * this.alpha), this.mode) {
                case "multiply":
                    g[y] = s * i / 255, g[y + 1] = o * r / 255, g[y + 2] = a * n / 255;
                    break;
                case "screen":
                    g[y] = 1 - (1 - s) * (1 - i), g[y + 1] = 1 - (1 - o) * (1 - r), g[y + 2] = 1 - (1 - a) * (1 - n);
                    break;
                case "add":
                    g[y] = Math.min(255, s + i), g[y + 1] = Math.min(255, o + r), g[y + 2] = Math.min(255, a + n);
                    break;
                case "diff":
                case "difference":
                    g[y] = Math.abs(s - i), g[y + 1] = Math.abs(o - r), g[y + 2] = Math.abs(a - n);
                    break;
                case "subtract":
                    h = s - i, c = o - r, l = a - n, g[y] = h < 0 ? 0 : h, g[y + 1] = c < 0 ? 0 : c, g[y + 2] = l < 0 ? 0 : l;
                    break;
                case "darken":
                    g[y] = Math.min(s, i), g[y + 1] = Math.min(o, r), g[y + 2] = Math.min(a, n);
                    break;
                case "lighten": g[y] = Math.max(s, i), g[y + 1] = Math.max(o, r), g[y + 2] = Math.max(a, n);
            } f.putImageData(d, 0, 0); }, toObject: function () { return { color: this.color, image: this.image, mode: this.mode, alpha: this.alpha }; } }), e.Image.filters.Blend.fromObject = function (t) { return new e.Image.filters.Blend(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = Math.pow, r = Math.floor, n = Math.sqrt, s = Math.abs, o = Math.max, a = Math.round, h = Math.sin, c = Math.ceil, l = e.Image.filters, u = e.util.createClass;
    l.Resize = u(l.BaseFilter, { type: "Resize", resizeType: "hermite", scaleX: 0, scaleY: 0, lanczosLobes: 3, applyTo: function (t, e, i) { if (1 !== e || 1 !== i) {
            this.rcpScaleX = 1 / e, this.rcpScaleY = 1 / i;
            var r, n = t.width, s = t.height, o = a(n * e), h = a(s * i);
            "sliceHack" === this.resizeType && (r = this.sliceByTwo(t, n, s, o, h)), "hermite" === this.resizeType && (r = this.hermiteFastResize(t, n, s, o, h)), "bilinear" === this.resizeType && (r = this.bilinearFiltering(t, n, s, o, h)), "lanczos" === this.resizeType && (r = this.lanczosResize(t, n, s, o, h)), t.width = o, t.height = h, t.getContext("2d").putImageData(r, 0, 0);
        } }, sliceByTwo: function (t, i, n, s, a) { var h, c = t.getContext("2d"), l = .5, u = .5, f = 1, d = 1, g = !1, p = !1, v = i, b = n, m = e.util.createCanvasElement(), y = m.getContext("2d"); for (s = r(s), a = r(a), m.width = o(s, i), m.height = o(a, n), s > i && (l = 2, f = -1), a > n && (u = 2, d = -1), h = c.getImageData(0, 0, i, n), t.width = o(s, i), t.height = o(a, n), c.putImageData(h, 0, 0); !g || !p;)
            i = v, n = b, s * f < r(v * l * f) ? v = r(v * l) : (v = s, g = !0), a * d < r(b * u * d) ? b = r(b * u) : (b = a, p = !0), h = c.getImageData(0, 0, i, n), y.putImageData(h, 0, 0), c.clearRect(0, 0, v, b), c.drawImage(m, 0, 0, i, n, 0, 0, v, b); return c.getImageData(0, 0, s, a); }, lanczosResize: function (t, e, o, a, l) { function u(t) { return function (e) { if (e > t)
            return 0; if (e *= Math.PI, s(e) < 1e-16)
            return 1; var i = e / t; return h(e) * h(i) / e / i; }; } function f(t) { var h, c, u, d, g, j, M, A, P, I, D; for (T.x = (t + .5) * y, k.x = r(T.x), h = 0; h < l; h++) {
            for (T.y = (h + .5) * _, k.y = r(T.y), g = 0, j = 0, M = 0, A = 0, P = 0, c = k.x - C; c <= k.x + C; c++)
                if (!(c < 0 || c >= e)) {
                    I = r(1e3 * s(c - T.x)), O[I] || (O[I] = {});
                    for (var E = k.y - w; E <= k.y + w; E++)
                        E < 0 || E >= o || (D = r(1e3 * s(E - T.y)), O[I][D] || (O[I][D] = m(n(i(I * x, 2) + i(D * S, 2)) / 1e3)), u = O[I][D], u > 0 && (d = 4 * (E * e + c), g += u, j += u * v[d], M += u * v[d + 1], A += u * v[d + 2], P += u * v[d + 3]));
                }
            d = 4 * (h * a + t), b[d] = j / g, b[d + 1] = M / g, b[d + 2] = A / g, b[d + 3] = P / g;
        } return ++t < a ? f(t) : p; } var d = t.getContext("2d"), g = d.getImageData(0, 0, e, o), p = d.getImageData(0, 0, a, l), v = g.data, b = p.data, m = u(this.lanczosLobes), y = this.rcpScaleX, _ = this.rcpScaleY, x = 2 / this.rcpScaleX, S = 2 / this.rcpScaleY, C = c(y * this.lanczosLobes / 2), w = c(_ * this.lanczosLobes / 2), O = {}, T = {}, k = {}; return f(0); }, bilinearFiltering: function (t, e, i, n, s) { var o, a, h, c, l, u, f, d, g, p, v, b, m, y = 0, _ = this.rcpScaleX, x = this.rcpScaleY, S = t.getContext("2d"), C = 4 * (e - 1), w = S.getImageData(0, 0, e, i), O = w.data, T = S.getImageData(0, 0, n, s), k = T.data; for (f = 0; f < s; f++)
            for (d = 0; d < n; d++)
                for (l = r(_ * d), u = r(x * f), g = _ * d - l, p = x * f - u, m = 4 * (u * e + l), v = 0; v < 4; v++)
                    o = O[m + v], a = O[m + 4 + v], h = O[m + C + v], c = O[m + C + 4 + v], b = o * (1 - g) * (1 - p) + a * g * (1 - p) + h * p * (1 - g) + c * g * p, k[y++] = b; return T; }, hermiteFastResize: function (t, e, i, o, a) { for (var h = this.rcpScaleX, l = this.rcpScaleY, u = c(h / 2), f = c(l / 2), d = t.getContext("2d"), g = d.getImageData(0, 0, e, i), p = g.data, v = d.getImageData(0, 0, o, a), b = v.data, m = 0; m < a; m++)
            for (var y = 0; y < o; y++) {
                for (var _ = 4 * (y + m * o), x = 0, S = 0, C = 0, w = 0, O = 0, T = 0, k = 0, j = (m + .5) * l, M = r(m * l); M < (m + 1) * l; M++)
                    for (var A = s(j - (M + .5)) / f, P = (y + .5) * h, I = A * A, D = r(y * h); D < (y + 1) * h; D++) {
                        var E = s(P - (D + .5)) / u, L = n(I + E * E);
                        L > 1 && L < -1 || (x = 2 * L * L * L - 3 * L * L + 1, x > 0 && (E = 4 * (D + M * e), k += x * p[E + 3], C += x, p[E + 3] < 255 && (x = x * p[E + 3] / 250), w += x * p[E], O += x * p[E + 1], T += x * p[E + 2], S += x));
                    }
                b[_] = w / S, b[_ + 1] = O / S, b[_ + 2] = T / S, b[_ + 3] = k / C;
            } return v; }, toObject: function () { return { type: this.type, scaleX: this.scaleX, scaleY: this.scaleY, resizeType: this.resizeType, lanczosLobes: this.lanczosLobes }; } }), e.Image.filters.Resize.fromObject = function (t) { return new e.Image.filters.Resize(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.ColorMatrix = n(r.BaseFilter, { type: "ColorMatrix", initialize: function (t) { t || (t = {}), this.matrix = t.matrix || [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]; }, applyTo: function (t) { var e, i, r, n, s, o = t.getContext("2d"), a = o.getImageData(0, 0, t.width, t.height), h = a.data, c = h.length, l = this.matrix; for (e = 0; e < c; e += 4)
            i = h[e], r = h[e + 1], n = h[e + 2], s = h[e + 3], h[e] = i * l[0] + r * l[1] + n * l[2] + s * l[3] + l[4], h[e + 1] = i * l[5] + r * l[6] + n * l[7] + s * l[8] + l[9], h[e + 2] = i * l[10] + r * l[11] + n * l[12] + s * l[13] + l[14], h[e + 3] = i * l[15] + r * l[16] + n * l[17] + s * l[18] + l[19]; o.putImageData(a, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { type: this.type, matrix: this.matrix }); } }), e.Image.filters.ColorMatrix.fromObject = function (t) { return new e.Image.filters.ColorMatrix(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Contrast = n(r.BaseFilter, { type: "Contrast", initialize: function (t) { t = t || {}, this.contrast = t.contrast || 0; }, applyTo: function (t) { for (var e = t.getContext("2d"), i = e.getImageData(0, 0, t.width, t.height), r = i.data, n = 259 * (this.contrast + 255) / (255 * (259 - this.contrast)), s = 0, o = r.length; s < o; s += 4)
            r[s] = n * (r[s] - 128) + 128, r[s + 1] = n * (r[s + 1] - 128) + 128, r[s + 2] = n * (r[s + 2] - 128) + 128; e.putImageData(i, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { contrast: this.contrast }); } }), e.Image.filters.Contrast.fromObject = function (t) { return new e.Image.filters.Contrast(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.Image.filters, n = e.util.createClass;
    r.Saturate = n(r.BaseFilter, {
        type: "Saturate", initialize: function (t) { t = t || {}, this.saturate = t.saturate || 0, this.loadProgram(); }, applyTo: function (t) { for (var e, i = t.getContext("2d"), r = i.getImageData(0, 0, t.width, t.height), n = r.data, s = .01 * -this.saturate, o = 0, a = n.length; o < a; o += 4)
            e = Math.max(n[o], n[o + 1], n[o + 2]), n[o] += e !== n[o] ? (e - n[o]) * s : 0, n[o + 1] += e !== n[o + 1] ? (e - n[o + 1]) * s : 0, n[o + 2] += e !== n[o + 2] ? (e - n[o + 2]) * s : 0; i.putImageData(r, 0, 0); }, toObject: function () { return i(this.callSuper("toObject"), { saturate: this.saturate }); }
    }), e.Image.filters.Saturate.fromObject = function (t) { return new e.Image.filters.Saturate(t); };
}("undefined" != typeof exports ? exports : this), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.extend, r = e.util.object.clone, n = e.util.toFixed, s = e.Object.NUM_FRACTION_DIGITS, o = 2;
    if (e.Text)
        return void e.warn("fabric.Text is already defined");
    var a = e.Object.prototype.stateProperties.concat();
    a.push("fontFamily", "fontWeight", "fontSize", "text", "textDecoration", "textAlign", "fontStyle", "lineHeight", "textBackgroundColor"), e.Text = e.util.createClass(e.Object, { _dimensionAffectingProps: { fontSize: !0, fontWeight: !0, fontFamily: !0, fontStyle: !0, lineHeight: !0, text: !0, charSpacing: !0, textAlign: !0, strokeWidth: !1 }, _reNewline: /\r?\n/, _reSpacesAndTabs: /[ \t\r]+/g, type: "text", fontSize: 40, fontWeight: "normal", fontFamily: "Times New Roman", textDecoration: "", textAlign: "left", fontStyle: "", lineHeight: 1.16, textBackgroundColor: "", stateProperties: a, stroke: null, shadow: null, _fontSizeFraction: .25, _fontSizeMult: 1.13, charSpacing: 0, initialize: function (t, e) { e = e || {}, this.text = t, this.__skipDimension = !0, this.setOptions(e), this.__skipDimension = !1, this._initDimensions(); }, _initDimensions: function (t) { this.__skipDimension || (t || (t = e.util.createCanvasElement().getContext("2d"), this._setTextStyles(t)), this._textLines = this._splitTextIntoLines(), this._clearCache(), this.width = this._getTextWidth(t) || this.cursorWidth || o, this.height = this._getTextHeight(t)); }, toString: function () { return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>'; }, _render: function (t) { this.clipTo && e.util.clipContext(this, t), this._setOpacity(t), this._setShadow(t), this._setupCompositeOperation(t), this._renderTextBackground(t), this._setStrokeStyles(t), this._setFillStyles(t), this._renderText(t), this._renderTextDecoration(t), this.clipTo && t.restore(); }, _renderText: function (t) { this._renderTextFill(t), this._renderTextStroke(t); }, _setTextStyles: function (t) { t.textBaseline = "alphabetic", t.font = this._getFontDeclaration(); }, _getTextHeight: function () { return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine(); }, _getTextWidth: function (t) { for (var e = this._getLineWidth(t, 0), i = 1, r = this._textLines.length; i < r; i++) {
            var n = this._getLineWidth(t, i);
            n > e && (e = n);
        } return e; }, _getNonTransformedDimensions: function () { return { x: this.width, y: this.height }; }, _renderChars: function (t, e, i, r, n) { var s, o, a = t.slice(0, -4); if (this[a].toLive) {
            var h = -this.width / 2 + this[a].offsetX || 0, c = -this.height / 2 + this[a].offsetY || 0;
            e.save(), e.translate(h, c), r -= h, n -= c;
        } if (0 !== this.charSpacing) {
            var l = this._getWidthOfCharSpacing();
            i = i.split("");
            for (var u = 0, f = i.length; u < f; u++)
                s = i[u], o = e.measureText(s).width + l, e[t](s, r, n), r += o > 0 ? o : 0;
        }
        else
            e[t](i, r, n); this[a].toLive && e.restore(); }, _renderTextLine: function (t, e, i, r, n, s) { n -= this.fontSize * this._fontSizeFraction; var o = this._getLineWidth(e, s); if ("justify" !== this.textAlign || this.width < o)
            return void this._renderChars(t, e, i, r, n, s); for (var a, h = i.split(/\s+/), c = 0, l = this._getWidthOfWords(e, h.join(""), s, 0), u = this.width - l, f = h.length - 1, d = f > 0 ? u / f : 0, g = 0, p = 0, v = h.length; p < v; p++) {
            for (; " " === i[c] && c < i.length;)
                c++;
            a = h[p], this._renderChars(t, e, a, r + g, n, s, c), g += this._getWidthOfWords(e, a, s, c) + d, c += a.length;
        } }, _getWidthOfWords: function (t, e) { var i, r, n = t.measureText(e).width; return 0 !== this.charSpacing && (i = e.split("").length, r = i * this._getWidthOfCharSpacing(), n += r), n > 0 ? n : 0; }, _getLeftOffset: function () { return -this.width / 2; }, _getTopOffset: function () { return -this.height / 2; }, isEmptyStyles: function () { return !0; }, _renderTextCommon: function (t, e) { for (var i = 0, r = this._getLeftOffset(), n = this._getTopOffset(), s = 0, o = this._textLines.length; s < o; s++) {
            var a = this._getHeightOfLine(t, s), h = a / this.lineHeight, c = this._getLineWidth(t, s), l = this._getLineLeftOffset(c);
            this._renderTextLine(e, t, this._textLines[s], r + l, n + i + h, s), i += a;
        } }, _renderTextFill: function (t) { !this.fill && this.isEmptyStyles() || this._renderTextCommon(t, "fillText"); }, _renderTextStroke: function (t) { (this.stroke && 0 !== this.strokeWidth || !this.isEmptyStyles()) && (this.shadow && !this.shadow.affectStroke && this._removeShadow(t), t.save(), this._setLineDash(t, this.strokedashArray), t.beginPath(), this._renderTextCommon(t, "strokeText"), t.closePath(), t.restore()); }, _getHeightOfLine: function () { return this._getHeightOfSingleLine() * this.lineHeight; }, _getHeightOfSingleLine: function () { return this.fontSize * this._fontSizeMult; }, _renderTextBackground: function (t) { this._renderBackground(t), this._renderTextLinesBackground(t); }, _renderTextLinesBackground: function (t) { if (this.textBackgroundColor) {
            var e, i, r, n = 0;
            t.fillStyle = this.textBackgroundColor;
            for (var s = 0, o = this._textLines.length; s < o; s++)
                e = this._getHeightOfLine(t, s), i = this._getLineWidth(t, s), i > 0 && (r = this._getLineLeftOffset(i), t.fillRect(this._getLeftOffset() + r, this._getTopOffset() + n, i, e / this.lineHeight)), n += e;
            this._removeShadow(t);
        } }, _getLineLeftOffset: function (t) { return "center" === this.textAlign ? (this.width - t) / 2 : "right" === this.textAlign ? this.width - t : 0; }, _clearCache: function () { this.__lineWidths = [], this.__lineHeights = []; }, _shouldClearCache: function () { var t = !1; if (this._forceClearCache)
            return this._forceClearCache = !1, !0; for (var e in this._dimensionAffectingProps)
            this["__" + e] !== this[e] && (this["__" + e] = this[e], t = !0); return t; }, _getLineWidth: function (t, e) { if (this.__lineWidths[e])
            return this.__lineWidths[e] === -1 ? this.width : this.__lineWidths[e]; var i, r, n = this._textLines[e]; return i = "" === n ? 0 : this._measureLine(t, e), this.__lineWidths[e] = i, i && "justify" === this.textAlign && (r = n.split(/\s+/), r.length > 1 && (this.__lineWidths[e] = -1)), i; }, _getWidthOfCharSpacing: function () { return 0 !== this.charSpacing ? this.fontSize * this.charSpacing / 1e3 : 0; }, _measureLine: function (t, e) { var i, r, n = this._textLines[e], s = t.measureText(n).width, o = 0; return 0 !== this.charSpacing && (i = n.split("").length, o = (i - 1) * this._getWidthOfCharSpacing()), r = s + o, r > 0 ? r : 0; }, _renderTextDecoration: function (t) { function e(e) { var n, s, o, a, h, c, l, u = 0; for (n = 0, s = r._textLines.length; n < s; n++) {
            for (h = r._getLineWidth(t, n), c = r._getLineLeftOffset(h), l = r._getHeightOfLine(t, n), o = 0, a = e.length; o < a; o++)
                t.fillRect(r._getLeftOffset() + c, u + (r._fontSizeMult - 1 + e[o]) * r.fontSize - i, h, r.fontSize / 15);
            u += l;
        } } if (this.textDecoration) {
            var i = this.height / 2, r = this, n = [];
            this.textDecoration.indexOf("underline") > -1 && n.push(.85), this.textDecoration.indexOf("line-through") > -1 && n.push(.43), this.textDecoration.indexOf("overline") > -1 && n.push(-.12), n.length > 0 && e(n);
        } }, _getFontDeclaration: function () { return [e.isLikelyNode ? this.fontWeight : this.fontStyle, e.isLikelyNode ? this.fontStyle : this.fontWeight, this.fontSize + "px", e.isLikelyNode ? '"' + this.fontFamily + '"' : this.fontFamily].join(" "); }, render: function (t, e) { this.visible && (t.save(), this._setTextStyles(t), this._shouldClearCache() && this._initDimensions(t), this.drawSelectionBackground(t), e || this.transform(t), this.transformMatrix && t.transform.apply(t, this.transformMatrix), this.group && "path-group" === this.group.type && t.translate(this.left, this.top), this._render(t), t.restore()); }, _splitTextIntoLines: function () { return this.text.split(this._reNewline); }, toObject: function (t) { var e = i(this.callSuper("toObject", t), { text: this.text, fontSize: this.fontSize, fontWeight: this.fontWeight, fontFamily: this.fontFamily, fontStyle: this.fontStyle, lineHeight: this.lineHeight, textDecoration: this.textDecoration, textAlign: this.textAlign, textBackgroundColor: this.textBackgroundColor, charSpacing: this.charSpacing }); return this.includeDefaultValues || this._removeDefaultValues(e), e; }, toSVG: function (t) { this.ctx || (this.ctx = e.util.createCanvasElement().getContext("2d")); var i = this._createBaseSVGMarkup(), r = this._getSVGLeftTopOffsets(this.ctx), n = this._getSVGTextAndBg(r.textTop, r.textLeft); return this._wrapSVGTextAndBg(i, n), t ? t(i.join("")) : i.join(""); }, _getSVGLeftTopOffsets: function (t) { var e = this._getHeightOfLine(t, 0), i = -this.width / 2, r = 0; return { textLeft: i + (this.group && "path-group" === this.group.type ? this.left : 0), textTop: r + (this.group && "path-group" === this.group.type ? -this.top : 0), lineTop: e }; }, _wrapSVGTextAndBg: function (t, e) { var i = !0, r = this.getSvgFilter(), n = "" === r ? "" : ' style="' + r + '"'; t.push("\t<g ", this.getSvgId(), 'transform="', this.getSvgTransform(), this.getSvgTransformMatrix(), '"', n, ">\n", e.textBgRects.join(""), "\t\t<text ", this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "", this.fontSize ? 'font-size="' + this.fontSize + '" ' : "", this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "", this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "", this.textDecoration ? 'text-decoration="' + this.textDecoration + '" ' : "", 'style="', this.getSvgStyles(i), '" >\n', e.textSpans.join(""), "\t\t</text>\n", "\t</g>\n"); }, _getSVGTextAndBg: function (t, e) { var i = [], r = [], n = 0; this._setSVGBg(r); for (var s = 0, o = this._textLines.length; s < o; s++)
            this.textBackgroundColor && this._setSVGTextLineBg(r, s, e, t, n), this._setSVGTextLineText(s, i, n, e, t, r), n += this._getHeightOfLine(this.ctx, s); return { textSpans: i, textBgRects: r }; }, _setSVGTextLineText: function (t, i, r, o, a) { var h = this.fontSize * (this._fontSizeMult - this._fontSizeFraction) - a + r - this.height / 2; return "justify" === this.textAlign ? void this._setSVGTextLineJustifed(t, i, h, o) : void i.push('\t\t\t<tspan x="', n(o + this._getLineLeftOffset(this._getLineWidth(this.ctx, t)), s), '" ', 'y="', n(h, s), '" ', this._getFillAttributes(this.fill), ">", e.util.string.escapeXml(this._textLines[t]), "</tspan>\n"); }, _setSVGTextLineJustifed: function (t, i, r, o) { var a = e.util.createCanvasElement().getContext("2d"); this._setTextStyles(a); var h, c, l = this._textLines[t], u = l.split(/\s+/), f = this._getWidthOfWords(a, u.join("")), d = this.width - f, g = u.length - 1, p = g > 0 ? d / g : 0, v = this._getFillAttributes(this.fill); for (o += this._getLineLeftOffset(this._getLineWidth(a, t)), t = 0, c = u.length; t < c; t++)
            h = u[t], i.push('\t\t\t<tspan x="', n(o, s), '" ', 'y="', n(r, s), '" ', v, ">", e.util.string.escapeXml(h), "</tspan>\n"), o += this._getWidthOfWords(a, h) + p; }, _setSVGTextLineBg: function (t, e, i, r, o) { t.push("\t\t<rect ", this._getFillAttributes(this.textBackgroundColor), ' x="', n(i + this._getLineLeftOffset(this._getLineWidth(this.ctx, e)), s), '" y="', n(o - this.height / 2, s), '" width="', n(this._getLineWidth(this.ctx, e), s), '" height="', n(this._getHeightOfLine(this.ctx, e) / this.lineHeight, s), '"></rect>\n'); }, _setSVGBg: function (t) { this.backgroundColor && t.push("\t\t<rect ", this._getFillAttributes(this.backgroundColor), ' x="', n(-this.width / 2, s), '" y="', n(-this.height / 2, s), '" width="', n(this.width, s), '" height="', n(this.height, s), '"></rect>\n'); }, _getFillAttributes: function (t) { var i = t && "string" == typeof t ? new e.Color(t) : ""; return i && i.getSource() && 1 !== i.getAlpha() ? 'opacity="' + i.getAlpha() + '" fill="' + i.setAlpha(1).toRgb() + '"' : 'fill="' + t + '"'; }, _set: function (t, e) { this.callSuper("_set", t, e), t in this._dimensionAffectingProps && (this._initDimensions(), this.setCoords()); }, complexity: function () { return 1; } }), e.Text.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat("x y dx dy font-family font-style font-weight font-size text-decoration text-anchor".split(" ")), e.Text.DEFAULT_SVG_FONT_SIZE = 16, e.Text.fromElement = function (t, i) { if (!t)
        return null; var r = e.parseAttributes(t, e.Text.ATTRIBUTE_NAMES); i = e.util.object.extend(i ? e.util.object.clone(i) : {}, r), i.top = i.top || 0, i.left = i.left || 0, "dx" in r && (i.left += r.dx), "dy" in r && (i.top += r.dy), "fontSize" in i || (i.fontSize = e.Text.DEFAULT_SVG_FONT_SIZE), i.originX || (i.originX = "left"); var n = ""; "textContent" in t ? n = t.textContent : "firstChild" in t && null !== t.firstChild && "data" in t.firstChild && null !== t.firstChild.data && (n = t.firstChild.data), n = n.replace(/^\s+|\s+$|\n+/g, "").replace(/\s+/g, " "); var s = new e.Text(n, i), o = s.getHeight() / s.height, a = (s.height + s.strokeWidth) * s.lineHeight - s.height, h = a * o, c = s.getHeight() + h, l = 0; return "left" === s.originX && (l = s.getWidth() / 2), "right" === s.originX && (l = -s.getWidth() / 2), s.set({ left: s.getLeft() + l, top: s.getTop() - c / 2 + s.fontSize * (.18 + s._fontSizeFraction) / s.lineHeight }), s; }, e.Text.fromObject = function (t, i) { var n = new e.Text(t.text, r(t)); return i && i(n), n; }, e.util.createAccessors(e.Text);
}("undefined" != typeof exports ? exports : this), function () { var t = fabric.util.object.clone; fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, { type: "i-text", selectionStart: 0, selectionEnd: 0, selectionColor: "rgba(17,119,255,0.3)", isEditing: !1, editable: !0, editingBorderColor: "rgba(102,153,255,0.25)", cursorWidth: 2, cursorColor: "#333", cursorDelay: 1e3, cursorDuration: 600, styles: null, caching: !0, _reSpace: /\s|\n/, _currentCursorOpacity: 0, _selectionDirection: null, _abortCursorAnimation: !1, __widthOfSpace: [], initialize: function (t, e) { this.styles = e ? e.styles || {} : {}, this.callSuper("initialize", t, e), this.initBehavior(); }, _clearCache: function () { this.callSuper("_clearCache"), this.__widthOfSpace = []; }, isEmptyStyles: function () { if (!this.styles)
        return !0; var t = this.styles; for (var e in t)
        for (var i in t[e])
            for (var r in t[e][i])
                return !1; return !0; }, setSelectionStart: function (t) { t = Math.max(t, 0), this._updateAndFire("selectionStart", t); }, setSelectionEnd: function (t) { t = Math.min(t, this.text.length), this._updateAndFire("selectionEnd", t); }, _updateAndFire: function (t, e) { this[t] !== e && (this._fireSelectionChanged(), this[t] = e), this._updateTextarea(); }, _fireSelectionChanged: function () { this.fire("selection:changed"), this.canvas && this.canvas.fire("text:selection:changed", { target: this }); }, getSelectionStyles: function (t, e) { if (2 === arguments.length) {
        for (var i = [], r = t; r < e; r++)
            i.push(this.getSelectionStyles(r));
        return i;
    } var n = this.get2DCursorLocation(t), s = this._getStyleDeclaration(n.lineIndex, n.charIndex); return s || {}; }, setSelectionStyles: function (t) { if (this.selectionStart === this.selectionEnd)
        this._extendStyles(this.selectionStart, t);
    else
        for (var e = this.selectionStart; e < this.selectionEnd; e++)
            this._extendStyles(e, t); return this._forceClearCache = !0, this; }, _extendStyles: function (t, e) { var i = this.get2DCursorLocation(t); this._getLineStyle(i.lineIndex) || this._setLineStyle(i.lineIndex, {}), this._getStyleDeclaration(i.lineIndex, i.charIndex) || this._setStyleDeclaration(i.lineIndex, i.charIndex, {}), fabric.util.object.extend(this._getStyleDeclaration(i.lineIndex, i.charIndex), e); }, _render: function (t) { this.oldWidth = this.width, this.oldHeight = this.height, this.callSuper("_render", t), this.ctx = t, this.cursorOffsetCache = {}, this.renderCursorOrSelection(); }, renderCursorOrSelection: function () { if (this.active && this.isEditing) {
        var t, e, i = this.text.split("");
        this.canvas.contextTop ? (e = this.canvas.contextTop, e.save(), e.transform.apply(e, this.canvas.viewportTransform), this.transform(e), this.transformMatrix && e.transform.apply(e, this.transformMatrix), this._clearTextArea(e)) : (e = this.ctx, e.save()), this.selectionStart === this.selectionEnd ? (t = this._getCursorBoundaries(i, "cursor"), this.renderCursor(t, e)) : (t = this._getCursorBoundaries(i, "selection"), this.renderSelection(i, t, e)), e.restore();
    } }, _clearTextArea: function (t) { var e = this.oldWidth + 4, i = this.oldHeight + 4; t.clearRect(-e / 2, -i / 2, e, i); }, get2DCursorLocation: function (t) { "undefined" == typeof t && (t = this.selectionStart); for (var e = this._textLines.length, i = 0; i < e; i++) {
        if (t <= this._textLines[i].length)
            return { lineIndex: i, charIndex: t };
        t -= this._textLines[i].length + 1;
    } return { lineIndex: i - 1, charIndex: this._textLines[i - 1].length < t ? this._textLines[i - 1].length : t }; }, getCurrentCharStyle: function (t, e) { var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1); return { fontSize: i && i.fontSize || this.fontSize, fill: i && i.fill || this.fill, textBackgroundColor: i && i.textBackgroundColor || this.textBackgroundColor, textDecoration: i && i.textDecoration || this.textDecoration, fontFamily: i && i.fontFamily || this.fontFamily, fontWeight: i && i.fontWeight || this.fontWeight, fontStyle: i && i.fontStyle || this.fontStyle, stroke: i && i.stroke || this.stroke, strokeWidth: i && i.strokeWidth || this.strokeWidth }; }, getCurrentCharFontSize: function (t, e) { var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1); return i && i.fontSize ? i.fontSize : this.fontSize; }, getCurrentCharColor: function (t, e) { var i = this._getStyleDeclaration(t, 0 === e ? 0 : e - 1); return i && i.fill ? i.fill : this.cursorColor; }, _getCursorBoundaries: function (t, e) { var i = Math.round(this._getLeftOffset()), r = this._getTopOffset(), n = this._getCursorBoundariesOffsets(t, e); return { left: i, top: r, leftOffset: n.left + n.lineLeft, topOffset: n.top }; }, _getCursorBoundariesOffsets: function (t, e) { if (this.cursorOffsetCache && "top" in this.cursorOffsetCache)
        return this.cursorOffsetCache; for (var i, r = 0, n = 0, s = 0, o = 0, a = 0, h = 0; h < this.selectionStart; h++)
        "\n" === t[h] ? (a = 0, o += this._getHeightOfLine(this.ctx, n), n++, s = 0) : (a += this._getWidthOfChar(this.ctx, t[h], n, s), s++), r = this._getLineLeftOffset(this._getLineWidth(this.ctx, n)); return "cursor" === e && (o += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, n) / this.lineHeight - this.getCurrentCharFontSize(n, s) * (1 - this._fontSizeFraction)), 0 !== this.charSpacing && s === this._textLines[n].length && (a -= this._getWidthOfCharSpacing()), i = { top: o, left: a > 0 ? a : 0, lineLeft: r }, this.cursorOffsetCache = i, this.cursorOffsetCache; }, renderCursor: function (t, e) { var i = this.get2DCursorLocation(), r = i.lineIndex, n = i.charIndex, s = this.getCurrentCharFontSize(r, n), o = 0 === r && 0 === n ? this._getLineLeftOffset(this._getLineWidth(e, r)) : t.leftOffset, a = this.scaleX * this.canvas.getZoom(), h = this.cursorWidth / a; e.fillStyle = this.getCurrentCharColor(r, n), e.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity, e.fillRect(t.left + o - h / 2, t.top + t.topOffset, h, s); }, renderSelection: function (t, e, i) { i.fillStyle = this.selectionColor; for (var r = this.get2DCursorLocation(this.selectionStart), n = this.get2DCursorLocation(this.selectionEnd), s = r.lineIndex, o = n.lineIndex, a = s; a <= o; a++) {
        var h = this._getLineLeftOffset(this._getLineWidth(i, a)) || 0, c = this._getHeightOfLine(this.ctx, a), l = 0, u = 0, f = this._textLines[a];
        if (a === s) {
            for (var d = 0, g = f.length; d < g; d++)
                d >= r.charIndex && (a !== o || d < n.charIndex) && (u += this._getWidthOfChar(i, f[d], a, d)), d < r.charIndex && (h += this._getWidthOfChar(i, f[d], a, d));
            d === f.length && (u -= this._getWidthOfCharSpacing());
        }
        else if (a > s && a < o)
            u += this._getLineWidth(i, a) || 5;
        else if (a === o) {
            for (var p = 0, v = n.charIndex; p < v; p++)
                u += this._getWidthOfChar(i, f[p], a, p);
            n.charIndex === f.length && (u -= this._getWidthOfCharSpacing());
        }
        l = c, (this.lineHeight < 1 || a === o && this.lineHeight > 1) && (c /= this.lineHeight), i.fillRect(e.left + h, e.top + e.topOffset, u > 0 ? u : 0, c), e.topOffset += l;
    } }, _renderChars: function (t, e, i, r, n, s, o) { if (this.isEmptyStyles())
        return this._renderCharsFast(t, e, i, r, n); o = o || 0; var a, h, c = this._getHeightOfLine(e, s), l = ""; e.save(), n -= c / this.lineHeight * this._fontSizeFraction; for (var u = o, f = i.length + o; u <= f; u++)
        a = a || this.getCurrentCharStyle(s, u), h = this.getCurrentCharStyle(s, u + 1), (this._hasStyleChanged(a, h) || u === f) && (this._renderChar(t, e, s, u - 1, l, r, n, c), l = "", a = h), l += i[u - o]; e.restore(); }, _renderCharsFast: function (t, e, i, r, n) { "fillText" === t && this.fill && this.callSuper("_renderChars", t, e, i, r, n), "strokeText" === t && (this.stroke && this.strokeWidth > 0 || this.skipFillStrokeCheck) && this.callSuper("_renderChars", t, e, i, r, n); }, _renderChar: function (t, e, i, r, n, s, o, a) { var h, c, l, u, f, d, g, p, v, b = this._getStyleDeclaration(i, r); if (b ? (c = this._getHeightOfChar(e, n, i, r), u = b.stroke, l = b.fill, d = b.textDecoration) : c = this.fontSize, u = (u || this.stroke) && "strokeText" === t, l = (l || this.fill) && "fillText" === t, b && e.save(), h = this._applyCharStylesGetWidth(e, n, i, r, b || null), d = d || this.textDecoration, b && b.textBackgroundColor && this._removeShadow(e), 0 !== this.charSpacing) {
        p = this._getWidthOfCharSpacing(), g = n.split(""), h = 0;
        for (var m, y = 0, _ = g.length; y < _; y++)
            m = g[y], l && e.fillText(m, s + h, o), u && e.strokeText(m, s + h, o), v = e.measureText(m).width + p, h += v > 0 ? v : 0;
    }
    else
        l && e.fillText(n, s, o), u && e.strokeText(n, s, o); (d || "" !== d) && (f = this._fontSizeFraction * a / this.lineHeight, this._renderCharDecoration(e, d, s, o, f, h, c)), b && e.restore(), e.translate(h, 0); }, _hasStyleChanged: function (t, e) { return t.fill !== e.fill || t.fontSize !== e.fontSize || t.textBackgroundColor !== e.textBackgroundColor || t.textDecoration !== e.textDecoration || t.fontFamily !== e.fontFamily || t.fontWeight !== e.fontWeight || t.fontStyle !== e.fontStyle || t.stroke !== e.stroke || t.strokeWidth !== e.strokeWidth; }, _renderCharDecoration: function (t, e, i, r, n, s, o) { if (e) {
        var a, h, c = o / 15, l = { underline: r + o / 10, "line-through": r - o * (this._fontSizeFraction + this._fontSizeMult - 1) + c, overline: r - (this._fontSizeMult - this._fontSizeFraction) * o }, u = ["underline", "line-through", "overline"];
        for (a = 0; a < u.length; a++)
            h = u[a], e.indexOf(h) > -1 && t.fillRect(i, l[h], s, c);
    } }, _renderTextLine: function (t, e, i, r, n, s) { this.isEmptyStyles() || (n += this.fontSize * (this._fontSizeFraction + .03)), this.callSuper("_renderTextLine", t, e, i, r, n, s); }, _renderTextDecoration: function (t) { if (this.isEmptyStyles())
        return this.callSuper("_renderTextDecoration", t); }, _renderTextLinesBackground: function (t) { this.callSuper("_renderTextLinesBackground", t); for (var e, i, r, n, s, o, a = 0, h = this._getLeftOffset(), c = this._getTopOffset(), l = 0, u = this._textLines.length; l < u; l++)
        if (e = this._getHeightOfLine(t, l), n = this._textLines[l], "" !== n && this.styles && this._getLineStyle(l)) {
            i = this._getLineWidth(t, l), r = this._getLineLeftOffset(i);
            for (var f = 0, d = n.length; f < d; f++)
                o = this._getStyleDeclaration(l, f), o && o.textBackgroundColor && (s = n[f], t.fillStyle = o.textBackgroundColor, t.fillRect(h + r + this._getWidthOfCharsAt(t, l, f), c + a, this._getWidthOfChar(t, s, l, f) + 1, e / this.lineHeight));
            a += e;
        }
        else
            a += e; }, _getCacheProp: function (t, e) { return t + e.fontSize + e.fontWeight + e.fontStyle; }, _getFontCache: function (t) { return fabric.charWidthsCache[t] || (fabric.charWidthsCache[t] = {}), fabric.charWidthsCache[t]; }, _applyCharStylesGetWidth: function (e, i, r, n, s) { var o, a, h, c = s || this._getStyleDeclaration(r, n), l = t(c); if (this._applyFontStyles(l), h = this._getFontCache(l.fontFamily), a = this._getCacheProp(i, l), !c && h[a] && this.caching)
        return h[a]; "string" == typeof l.shadow && (l.shadow = new fabric.Shadow(l.shadow)); var u = l.fill || this.fill; return e.fillStyle = u.toLive ? u.toLive(e, this) : u, l.stroke && (e.strokeStyle = l.stroke && l.stroke.toLive ? l.stroke.toLive(e, this) : l.stroke), e.lineWidth = l.strokeWidth || this.strokeWidth, e.font = this._getFontDeclaration.call(l), l.shadow && (l.scaleX = this.scaleX, l.scaleY = this.scaleY, l.canvas = this.canvas, l.getObjectScaling = this.getObjectScaling, this._setShadow.call(l, e)), this.caching && h[a] ? h[a] : (o = e.measureText(i).width, this.caching && (h[a] = o), o); }, _applyFontStyles: function (t) { t.fontFamily || (t.fontFamily = this.fontFamily), t.fontSize || (t.fontSize = this.fontSize), t.fontWeight || (t.fontWeight = this.fontWeight), t.fontStyle || (t.fontStyle = this.fontStyle); }, _getStyleDeclaration: function (e, i, r) { return r ? this.styles[e] && this.styles[e][i] ? t(this.styles[e][i]) : {} : this.styles[e] && this.styles[e][i] ? this.styles[e][i] : null; }, _setStyleDeclaration: function (t, e, i) { this.styles[t][e] = i; }, _deleteStyleDeclaration: function (t, e) { delete this.styles[t][e]; }, _getLineStyle: function (t) { return this.styles[t]; }, _setLineStyle: function (t, e) { this.styles[t] = e; }, _deleteLineStyle: function (t) { delete this.styles[t]; }, _getWidthOfChar: function (t, e, i, r) { if (!this._isMeasuring && "justify" === this.textAlign && this._reSpacesAndTabs.test(e))
        return this._getWidthOfSpace(t, i); t.save(); var n = this._applyCharStylesGetWidth(t, e, i, r); return 0 !== this.charSpacing && (n += this._getWidthOfCharSpacing()), t.restore(), n > 0 ? n : 0; }, _getHeightOfChar: function (t, e, i) { var r = this._getStyleDeclaration(e, i); return r && r.fontSize ? r.fontSize : this.fontSize; }, _getWidthOfCharsAt: function (t, e, i) { var r, n, s = 0; for (r = 0; r < i; r++)
        n = this._textLines[e][r], s += this._getWidthOfChar(t, n, e, r); return s; }, _measureLine: function (t, e) { this._isMeasuring = !0; var i = this._getWidthOfCharsAt(t, e, this._textLines[e].length); return 0 !== this.charSpacing && (i -= this._getWidthOfCharSpacing()), this._isMeasuring = !1, i > 0 ? i : 0; }, _getWidthOfSpace: function (t, e) { if (this.__widthOfSpace[e])
        return this.__widthOfSpace[e]; var i = this._textLines[e], r = this._getWidthOfWords(t, i, e, 0), n = this.width - r, s = i.length - i.replace(this._reSpacesAndTabs, "").length, o = Math.max(n / s, t.measureText(" ").width); return this.__widthOfSpace[e] = o, o; }, _getWidthOfWords: function (t, e, i, r) { for (var n = 0, s = 0; s < e.length; s++) {
        var o = e[s];
        o.match(/\s/) || (n += this._getWidthOfChar(t, o, i, s + r));
    } return n; }, _getHeightOfLine: function (t, e) { if (this.__lineHeights[e])
        return this.__lineHeights[e]; for (var i = this._textLines[e], r = this._getHeightOfChar(t, e, 0), n = 1, s = i.length; n < s; n++) {
        var o = this._getHeightOfChar(t, e, n);
        o > r && (r = o);
    } return this.__lineHeights[e] = r * this.lineHeight * this._fontSizeMult, this.__lineHeights[e]; }, _getTextHeight: function (t) { for (var e, i = 0, r = 0, n = this._textLines.length; r < n; r++)
        e = this._getHeightOfLine(t, r), i += r === n - 1 ? e / this.lineHeight : e; return i; }, toObject: function (e) { var i, r, n, s = {}; for (i in this.styles) {
        n = this.styles[i], s[i] = {};
        for (r in n)
            s[i][r] = t(n[r]);
    } return fabric.util.object.extend(this.callSuper("toObject", e), { styles: s }); } }), fabric.IText.fromObject = function (e, i) { var r = new fabric.IText(e.text, t(e)); return i && i(r), r; }; }(), function () {
    var t = fabric.util.object.clone;
    fabric.util.object.extend(fabric.IText.prototype, { initBehavior: function () { this.initAddedHandler(), this.initRemovedHandler(), this.initCursorSelectionHandlers(), this.initDoubleClickSimulation(), this.mouseMoveHandler = this.mouseMoveHandler.bind(this); }, initSelectedHandler: function () { this.on("selected", function () { var t = this; setTimeout(function () { t.selected = !0; }, 100); }); }, initAddedHandler: function () { var t = this; this.on("added", function () { var e = t.canvas; e && (e._hasITextHandlers || (e._hasITextHandlers = !0, t._initCanvasHandlers(e)), e._iTextInstances = e._iTextInstances || [], e._iTextInstances.push(t)); }); }, initRemovedHandler: function () { var t = this; this.on("removed", function () { var e = t.canvas; e && (e._iTextInstances = e._iTextInstances || [], fabric.util.removeFromArray(e._iTextInstances, t), 0 === e._iTextInstances.length && (e._hasITextHandlers = !1, t._removeCanvasHandlers(e))); }); }, _initCanvasHandlers: function (t) { t._canvasITextSelectionClearedHanlder = function () { fabric.IText.prototype.exitEditingOnOthers(t); }.bind(this), t._mouseUpITextHandler = function () { t._iTextInstances && t._iTextInstances.forEach(function (t) { t.__isMousedown = !1; }); }.bind(this), t.on("selection:cleared", t._canvasITextSelectionClearedHanlder), t.on("object:selected", t._canvasITextSelectionClearedHanlder), t.on("mouse:up", t._mouseUpITextHandler); }, _removeCanvasHandlers: function (t) { t.off("selection:cleared", t._canvasITextSelectionClearedHanlder), t.off("object:selected", t._canvasITextSelectionClearedHanlder), t.off("mouse:up", t._mouseUpITextHandler); }, _tick: function () { this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, "_onTickComplete"); }, _animateCursor: function (t, e, i, r) { var n; return n = { isAborted: !1, abort: function () { this.isAborted = !0; } }, t.animate("_currentCursorOpacity", e, { duration: i, onComplete: function () { n.isAborted || t[r](); }, onChange: function () { t.canvas && t.selectionStart === t.selectionEnd && t.renderCursorOrSelection(); }, abort: function () { return n.isAborted; } }), n; }, _onTickComplete: function () { var t = this; this._cursorTimeout1 && clearTimeout(this._cursorTimeout1), this._cursorTimeout1 = setTimeout(function () { t._currentTickCompleteState = t._animateCursor(t, 0, this.cursorDuration / 2, "_tick"); }, 100); }, initDelayedCursor: function (t) { var e = this, i = t ? 0 : this.cursorDelay; this.abortCursorAnimation(), this._currentCursorOpacity = 1, this._cursorTimeout2 = setTimeout(function () { e._tick(); }, i); }, abortCursorAnimation: function () { var t = this._currentTickState || this._currentTickCompleteState; this._currentTickState && this._currentTickState.abort(), this._currentTickCompleteState && this._currentTickCompleteState.abort(), clearTimeout(this._cursorTimeout1), clearTimeout(this._cursorTimeout2), this._currentCursorOpacity = 0, t && this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx); }, selectAll: function () { this.selectionStart = 0, this.selectionEnd = this.text.length, this._fireSelectionChanged(), this._updateTextarea(); }, getSelectedText: function () { return this.text.slice(this.selectionStart, this.selectionEnd); }, findWordBoundaryLeft: function (t) { var e = 0, i = t - 1; if (this._reSpace.test(this.text.charAt(i)))
            for (; this._reSpace.test(this.text.charAt(i));)
                e++, i--; for (; /\S/.test(this.text.charAt(i)) && i > -1;)
            e++, i--; return t - e; }, findWordBoundaryRight: function (t) { var e = 0, i = t; if (this._reSpace.test(this.text.charAt(i)))
            for (; this._reSpace.test(this.text.charAt(i));)
                e++, i++; for (; /\S/.test(this.text.charAt(i)) && i < this.text.length;)
            e++, i++; return t + e; }, findLineBoundaryLeft: function (t) { for (var e = 0, i = t - 1; !/\n/.test(this.text.charAt(i)) && i > -1;)
            e++, i--; return t - e; }, findLineBoundaryRight: function (t) { for (var e = 0, i = t; !/\n/.test(this.text.charAt(i)) && i < this.text.length;)
            e++, i++; return t + e; }, getNumNewLinesInSelectedText: function () { for (var t = this.getSelectedText(), e = 0, i = 0, r = t.length; i < r; i++)
            "\n" === t[i] && e++; return e; }, searchWordBoundary: function (t, e) { for (var i = this._reSpace.test(this.text.charAt(t)) ? t - 1 : t, r = this.text.charAt(i), n = /[ \n\.,;!\?\-]/; !n.test(r) && i > 0 && i < this.text.length;)
            i += e, r = this.text.charAt(i); return n.test(r) && "\n" !== r && (i += 1 === e ? 0 : 1), i; }, selectWord: function (t) { t = t || this.selectionStart; var e = this.searchWordBoundary(t, -1), i = this.searchWordBoundary(t, 1); this.selectionStart = e, this.selectionEnd = i, this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection(); }, selectLine: function (t) { t = t || this.selectionStart; var e = this.findLineBoundaryLeft(t), i = this.findLineBoundaryRight(t); this.selectionStart = e, this.selectionEnd = i, this._fireSelectionChanged(), this._updateTextarea(); }, enterEditing: function (t) { if (!this.isEditing && this.editable)
            return this.canvas && this.exitEditingOnOthers(this.canvas), this.isEditing = !0, this.initHiddenTextarea(t), this.hiddenTextarea.focus(), this._updateTextarea(), this._saveEditingProps(), this._setEditingProps(), this._textBeforeEdit = this.text, this._tick(), this.fire("editing:entered"), this.canvas ? (this.canvas.fire("text:editing:entered", { target: this }), this.initMouseMoveHandler(), this.canvas.renderAll(), this) : this; }, exitEditingOnOthers: function (t) { t._iTextInstances && t._iTextInstances.forEach(function (t) { t.selected = !1, t.isEditing && t.exitEditing(); }); }, initMouseMoveHandler: function () { this.canvas.on("mouse:move", this.mouseMoveHandler); }, mouseMoveHandler: function (t) { if (this.__isMousedown && this.isEditing) {
            var e = this.getSelectionStartFromPointer(t.e), i = this.selectionStart, r = this.selectionEnd;
            e !== this.__selectionStartOnMouseDown && (e > this.__selectionStartOnMouseDown ? (this.selectionStart = this.__selectionStartOnMouseDown, this.selectionEnd = e) : (this.selectionStart = e, this.selectionEnd = this.__selectionStartOnMouseDown), this.selectionStart === i && this.selectionEnd === r || (this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection()));
        } }, _setEditingProps: function () { this.hoverCursor = "text", this.canvas && (this.canvas.defaultCursor = this.canvas.moveCursor = "text"), this.borderColor = this.editingBorderColor, this.hasControls = this.selectable = !1, this.lockMovementX = this.lockMovementY = !0; }, _updateTextarea: function () { if (this.hiddenTextarea && !this.inCompositionMode && (this.cursorOffsetCache = {}, this.hiddenTextarea.value = this.text, this.hiddenTextarea.selectionStart = this.selectionStart, this.hiddenTextarea.selectionEnd = this.selectionEnd, this.selectionStart === this.selectionEnd)) {
            var t = this._calcTextareaPosition();
            this.hiddenTextarea.style.left = t.left, this.hiddenTextarea.style.top = t.top, this.hiddenTextarea.style.fontSize = t.fontSize;
        } }, _calcTextareaPosition: function () { if (!this.canvas)
            return { x: 1, y: 1 }; var t = this.text.split(""), e = this._getCursorBoundaries(t, "cursor"), i = this.get2DCursorLocation(), r = i.lineIndex, n = i.charIndex, s = this.getCurrentCharFontSize(r, n), o = 0 === r && 0 === n ? this._getLineLeftOffset(this._getLineWidth(this.ctx, r)) : e.leftOffset, a = this.calcTransformMatrix(), h = { x: e.left + o, y: e.top + e.topOffset + s }, c = this.canvas.upperCanvasEl, l = c.width - s, u = c.height - s; return h = fabric.util.transformPoint(h, a), h = fabric.util.transformPoint(h, this.canvas.viewportTransform), h.x < 0 && (h.x = 0), h.x > l && (h.x = l), h.y < 0 && (h.y = 0), h.y > u && (h.y = u), h.x += this.canvas._offset.left, h.y += this.canvas._offset.top, { left: h.x + "px", top: h.y + "px", fontSize: s }; }, _saveEditingProps: function () {
            this._savedProps = { hasControls: this.hasControls, borderColor: this.borderColor, lockMovementX: this.lockMovementX, lockMovementY: this.lockMovementY, hoverCursor: this.hoverCursor, defaultCursor: this.canvas && this.canvas.defaultCursor, moveCursor: this.canvas && this.canvas.moveCursor
            };
        }, _restoreEditingProps: function () { this._savedProps && (this.hoverCursor = this._savedProps.overCursor, this.hasControls = this._savedProps.hasControls, this.borderColor = this._savedProps.borderColor, this.lockMovementX = this._savedProps.lockMovementX, this.lockMovementY = this._savedProps.lockMovementY, this.canvas && (this.canvas.defaultCursor = this._savedProps.defaultCursor, this.canvas.moveCursor = this._savedProps.moveCursor)); }, exitEditing: function () { var t = this._textBeforeEdit !== this.text; return this.selected = !1, this.isEditing = !1, this.selectable = !0, this.selectionEnd = this.selectionStart, this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea), this.hiddenTextarea = null, this.abortCursorAnimation(), this._restoreEditingProps(), this._currentCursorOpacity = 0, this.fire("editing:exited"), t && this.fire("modified"), this.canvas && (this.canvas.off("mouse:move", this.mouseMoveHandler), this.canvas.fire("text:editing:exited", { target: this }), t && this.canvas.fire("object:modified", { target: this })), this; }, _removeExtraneousStyles: function () { for (var t in this.styles)
            this._textLines[t] || delete this.styles[t]; }, _removeCharsFromTo: function (t, e) { for (; e !== t;)
            this._removeSingleCharAndStyle(t + 1), e--; this.selectionStart = t, this.selectionEnd = t; }, _removeSingleCharAndStyle: function (t) { var e = "\n" === this.text[t - 1], i = e ? t : t - 1; this.removeStyleObject(e, i), this.text = this.text.slice(0, t - 1) + this.text.slice(t), this._textLines = this._splitTextIntoLines(); }, insertChars: function (t, e) { var i; if (this.selectionEnd - this.selectionStart > 1 && this._removeCharsFromTo(this.selectionStart, this.selectionEnd), !e && this.isEmptyStyles())
            return void this.insertChar(t, !1); for (var r = 0, n = t.length; r < n; r++)
            e && (i = fabric.copiedTextStyle[r]), this.insertChar(t[r], r < n - 1, i); }, insertChar: function (t, e, i) { var r = "\n" === this.text[this.selectionStart]; this.text = this.text.slice(0, this.selectionStart) + t + this.text.slice(this.selectionEnd), this._textLines = this._splitTextIntoLines(), this.insertStyleObjects(t, r, i), this.selectionStart += t.length, this.selectionEnd = this.selectionStart, e || (this._updateTextarea(), this.setCoords(), this._fireSelectionChanged(), this.fire("changed"), this.canvas && this.canvas.fire("text:changed", { target: this }), this.canvas && this.canvas.renderAll()); }, insertNewlineStyleObject: function (e, i, r) { this.shiftLineStyles(e, 1), this.styles[e + 1] || (this.styles[e + 1] = {}); var n = {}, s = {}; if (this.styles[e] && this.styles[e][i - 1] && (n = this.styles[e][i - 1]), r)
            s[0] = t(n), this.styles[e + 1] = s;
        else {
            for (var o in this.styles[e])
                parseInt(o, 10) >= i && (s[parseInt(o, 10) - i] = this.styles[e][o], delete this.styles[e][o]);
            this.styles[e + 1] = s;
        } this._forceClearCache = !0; }, insertCharStyleObject: function (e, i, r) { var n = this.styles[e], s = t(n); 0 !== i || r || (i = 1); for (var o in s) {
            var a = parseInt(o, 10);
            a >= i && (n[a + 1] = s[a], s[a - 1] || delete n[a]);
        } this.styles[e][i] = r || t(n[i - 1]), this._forceClearCache = !0; }, insertStyleObjects: function (t, e, i) { var r = this.get2DCursorLocation(), n = r.lineIndex, s = r.charIndex; this._getLineStyle(n) || this._setLineStyle(n, {}), "\n" === t ? this.insertNewlineStyleObject(n, s, e) : this.insertCharStyleObject(n, s, i); }, shiftLineStyles: function (e, i) { var r = t(this.styles); for (var n in this.styles) {
            var s = parseInt(n, 10);
            s > e && (this.styles[s + i] = r[s], r[s - i] || delete this.styles[s]);
        } }, removeStyleObject: function (t, e) { var i = this.get2DCursorLocation(e), r = i.lineIndex, n = i.charIndex; this._removeStyleObject(t, i, r, n); }, _getTextOnPreviousLine: function (t) { return this._textLines[t - 1]; }, _removeStyleObject: function (e, i, r, n) { if (e) {
            var s = this._getTextOnPreviousLine(i.lineIndex), o = s ? s.length : 0;
            this.styles[r - 1] || (this.styles[r - 1] = {});
            for (n in this.styles[r])
                this.styles[r - 1][parseInt(n, 10) + o] = this.styles[r][n];
            this.shiftLineStyles(i.lineIndex, -1);
        }
        else {
            var a = this.styles[r];
            a && delete a[n];
            var h = t(a);
            for (var c in h) {
                var l = parseInt(c, 10);
                l >= n && 0 !== l && (a[l - 1] = h[l], delete a[l]);
            }
        } }, insertNewline: function () { this.insertChars("\n"); }, setSelectionStartEndWithShift: function (t, e, i) { i <= t ? (e === t ? this._selectionDirection = "left" : "right" === this._selectionDirection && (this._selectionDirection = "left", this.selectionEnd = t), this.selectionStart = i) : i > t && i < e ? "right" === this._selectionDirection ? this.selectionEnd = i : this.selectionStart = i : (e === t ? this._selectionDirection = "right" : "left" === this._selectionDirection && (this._selectionDirection = "right", this.selectionStart = e), this.selectionEnd = i); }, setSelectionInBoundaries: function () { var t = this.text.length; this.selectionStart > t ? this.selectionStart = t : this.selectionStart < 0 && (this.selectionStart = 0), this.selectionEnd > t ? this.selectionEnd = t : this.selectionEnd < 0 && (this.selectionEnd = 0); } });
}(), fabric.util.object.extend(fabric.IText.prototype, { initDoubleClickSimulation: function () { this.__lastClickTime = +new Date, this.__lastLastClickTime = +new Date, this.__lastPointer = {}, this.on("mousedown", this.onMouseDown.bind(this)); }, onMouseDown: function (t) { this.__newClickTime = +new Date; var e = this.canvas.getPointer(t.e); this.isTripleClick(e) ? (this.fire("tripleclick", t), this._stopEvent(t.e)) : this.isDoubleClick(e) && (this.fire("dblclick", t), this._stopEvent(t.e)), this.__lastLastClickTime = this.__lastClickTime, this.__lastClickTime = this.__newClickTime, this.__lastPointer = e, this.__lastIsEditing = this.isEditing, this.__lastSelected = this.selected; }, isDoubleClick: function (t) { return this.__newClickTime - this.__lastClickTime < 500 && this.__lastPointer.x === t.x && this.__lastPointer.y === t.y && this.__lastIsEditing; }, isTripleClick: function (t) { return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === t.x && this.__lastPointer.y === t.y; }, _stopEvent: function (t) { t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation(); }, initCursorSelectionHandlers: function () { this.initSelectedHandler(), this.initMousedownHandler(), this.initMouseupHandler(), this.initClicks(); }, initClicks: function () { this.on("dblclick", function (t) { this.selectWord(this.getSelectionStartFromPointer(t.e)); }), this.on("tripleclick", function (t) { this.selectLine(this.getSelectionStartFromPointer(t.e)); }); }, initMousedownHandler: function () { this.on("mousedown", function (t) { if (this.editable) {
        var e = this.canvas.getPointer(t.e);
        this.__mousedownX = e.x, this.__mousedownY = e.y, this.__isMousedown = !0, this.selected && this.setCursorByClick(t.e), this.isEditing && (this.__selectionStartOnMouseDown = this.selectionStart, this.selectionStart === this.selectionEnd && this.abortCursorAnimation(), this.renderCursorOrSelection());
    } }); }, _isObjectMoved: function (t) { var e = this.canvas.getPointer(t); return this.__mousedownX !== e.x || this.__mousedownY !== e.y; }, initMouseupHandler: function () { this.on("mouseup", function (t) { this.__isMousedown = !1, this.editable && !this._isObjectMoved(t.e) && (this.__lastSelected && !this.__corner && (this.enterEditing(t.e), this.selectionStart === this.selectionEnd ? this.initDelayedCursor(!0) : this.renderCursorOrSelection()), this.selected = !0); }); }, setCursorByClick: function (t) { var e = this.getSelectionStartFromPointer(t), i = this.selectionStart, r = this.selectionEnd; t.shiftKey ? this.setSelectionStartEndWithShift(i, r, e) : (this.selectionStart = e, this.selectionEnd = e), this._fireSelectionChanged(), this._updateTextarea(); }, getSelectionStartFromPointer: function (t) { for (var e, i, r = this.getLocalPointer(t), n = 0, s = 0, o = 0, a = 0, h = 0, c = this._textLines.length; h < c; h++) {
        i = this._textLines[h], o += this._getHeightOfLine(this.ctx, h) * this.scaleY;
        var l = this._getLineWidth(this.ctx, h), u = this._getLineLeftOffset(l);
        s = u * this.scaleX;
        for (var f = 0, d = i.length; f < d; f++) {
            if (n = s, s += this._getWidthOfChar(this.ctx, i[f], h, this.flipX ? d - f : f) * this.scaleX, !(o <= r.y || s <= r.x))
                return this._getNewSelectionStartFromOffset(r, n, s, a + h, d);
            a++;
        }
        if (r.y < o)
            return this._getNewSelectionStartFromOffset(r, n, s, a + h - 1, d);
    } if ("undefined" == typeof e)
        return this.text.length; }, _getNewSelectionStartFromOffset: function (t, e, i, r, n) { var s = t.x - e, o = i - t.x, a = o > s ? 0 : 1, h = r + a; return this.flipX && (h = n - h), h > this.text.length && (h = this.text.length), h; } }), fabric.util.object.extend(fabric.IText.prototype, { initHiddenTextarea: function () { this.hiddenTextarea = fabric.document.createElement("textarea"), this.hiddenTextarea.setAttribute("autocapitalize", "off"); var t = this._calcTextareaPosition(); this.hiddenTextarea.style.cssText = "position: absolute; top: " + t.top + "; left: " + t.left + "; opacity: 0; width: 0px; height: 0px; z-index: -999;", fabric.document.body.appendChild(this.hiddenTextarea), fabric.util.addListener(this.hiddenTextarea, "keydown", this.onKeyDown.bind(this)), fabric.util.addListener(this.hiddenTextarea, "keyup", this.onKeyUp.bind(this)), fabric.util.addListener(this.hiddenTextarea, "input", this.onInput.bind(this)), fabric.util.addListener(this.hiddenTextarea, "copy", this.copy.bind(this)), fabric.util.addListener(this.hiddenTextarea, "cut", this.cut.bind(this)), fabric.util.addListener(this.hiddenTextarea, "paste", this.paste.bind(this)), fabric.util.addListener(this.hiddenTextarea, "compositionstart", this.onCompositionStart.bind(this)), fabric.util.addListener(this.hiddenTextarea, "compositionupdate", this.onCompositionUpdate.bind(this)), fabric.util.addListener(this.hiddenTextarea, "compositionend", this.onCompositionEnd.bind(this)), !this._clickHandlerInitialized && this.canvas && (fabric.util.addListener(this.canvas.upperCanvasEl, "click", this.onClick.bind(this)), this._clickHandlerInitialized = !0); }, _keysMap: { 8: "removeChars", 9: "exitEditing", 27: "exitEditing", 13: "insertNewline", 33: "moveCursorUp", 34: "moveCursorDown", 35: "moveCursorRight", 36: "moveCursorLeft", 37: "moveCursorLeft", 38: "moveCursorUp", 39: "moveCursorRight", 40: "moveCursorDown", 46: "forwardDelete" }, _ctrlKeysMapUp: { 67: "copy", 88: "cut" }, _ctrlKeysMapDown: { 65: "selectAll" }, onClick: function () { this.hiddenTextarea && this.hiddenTextarea.focus(); }, onKeyDown: function (t) { if (this.isEditing) {
        if (t.keyCode in this._keysMap)
            this[this._keysMap[t.keyCode]](t);
        else {
            if (!(t.keyCode in this._ctrlKeysMapDown && (t.ctrlKey || t.metaKey)))
                return;
            this[this._ctrlKeysMapDown[t.keyCode]](t);
        }
        t.stopImmediatePropagation(), t.preventDefault(), this.canvas && this.canvas.renderAll();
    } }, onKeyUp: function (t) { return !this.isEditing || this._copyDone ? void (this._copyDone = !1) : void (t.keyCode in this._ctrlKeysMapUp && (t.ctrlKey || t.metaKey) && (this[this._ctrlKeysMapUp[t.keyCode]](t), t.stopImmediatePropagation(), t.preventDefault(), this.canvas && this.canvas.renderAll())); }, onInput: function (t) { if (this.isEditing && !this.inCompositionMode) {
        var e, i, r, n = this.selectionStart || 0, s = this.selectionEnd || 0, o = this.text.length, a = this.hiddenTextarea.value.length;
        a > o ? (r = "left" === this._selectionDirection ? s : n, e = a - o, i = this.hiddenTextarea.value.slice(r, r + e)) : (e = a - o + s - n, i = this.hiddenTextarea.value.slice(n, n + e)), this.insertChars(i), t.stopPropagation();
    } }, onCompositionStart: function () { this.inCompositionMode = !0, this.prevCompositionLength = 0, this.compositionStart = this.selectionStart; }, onCompositionEnd: function () { this.inCompositionMode = !1; }, onCompositionUpdate: function (t) { var e = t.data; this.selectionStart = this.compositionStart, this.selectionEnd = this.selectionEnd === this.selectionStart ? this.compositionStart + this.prevCompositionLength : this.selectionEnd, this.insertChars(e, !1), this.prevCompositionLength = e.length; }, forwardDelete: function (t) { if (this.selectionStart === this.selectionEnd) {
        if (this.selectionStart === this.text.length)
            return;
        this.moveCursorRight(t);
    } this.removeChars(t); }, copy: function (t) { if (this.selectionStart !== this.selectionEnd) {
        var e = this.getSelectedText(), i = this._getClipboardData(t);
        i && i.setData("text", e), fabric.copiedText = e, fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd), t.stopImmediatePropagation(), t.preventDefault(), this._copyDone = !0;
    } }, paste: function (t) { var e = null, i = this._getClipboardData(t), r = !0; i ? (e = i.getData("text").replace(/\r/g, ""), fabric.copiedTextStyle && fabric.copiedText === e || (r = !1)) : e = fabric.copiedText, e && this.insertChars(e, r), t.stopImmediatePropagation(), t.preventDefault(); }, cut: function (t) { this.selectionStart !== this.selectionEnd && (this.copy(t), this.removeChars(t)); }, _getClipboardData: function (t) { return t && t.clipboardData || fabric.window.clipboardData; }, _getWidthBeforeCursor: function (t, e) { for (var i, r = this._textLines[t].slice(0, e), n = this._getLineWidth(this.ctx, t), s = this._getLineLeftOffset(n), o = 0, a = r.length; o < a; o++)
        i = r[o], s += this._getWidthOfChar(this.ctx, i, t, o); return s; }, getDownCursorOffset: function (t, e) { var i = this._getSelectionForOffset(t, e), r = this.get2DCursorLocation(i), n = r.lineIndex; if (n === this._textLines.length - 1 || t.metaKey || 34 === t.keyCode)
        return this.text.length - i; var s = r.charIndex, o = this._getWidthBeforeCursor(n, s), a = this._getIndexOnLine(n + 1, o), h = this._textLines[n].slice(s); return h.length + a + 2; }, _getSelectionForOffset: function (t, e) { return t.shiftKey && this.selectionStart !== this.selectionEnd && e ? this.selectionEnd : this.selectionStart; }, getUpCursorOffset: function (t, e) { var i = this._getSelectionForOffset(t, e), r = this.get2DCursorLocation(i), n = r.lineIndex; if (0 === n || t.metaKey || 33 === t.keyCode)
        return -i; var s = r.charIndex, o = this._getWidthBeforeCursor(n, s), a = this._getIndexOnLine(n - 1, o), h = this._textLines[n].slice(0, s); return -this._textLines[n - 1].length + a - h.length; }, _getIndexOnLine: function (t, e) { for (var i, r = this._getLineWidth(this.ctx, t), n = this._textLines[t], s = this._getLineLeftOffset(r), o = s, a = 0, h = 0, c = n.length; h < c; h++) {
        var l = n[h], u = this._getWidthOfChar(this.ctx, l, t, h);
        if (o += u, o > e) {
            i = !0;
            var f = o - u, d = o, g = Math.abs(f - e), p = Math.abs(d - e);
            a = p < g ? h : h - 1;
            break;
        }
    } return i || (a = n.length - 1), a; }, moveCursorDown: function (t) { this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length || this._moveCursorUpOrDown("Down", t); }, moveCursorUp: function (t) { 0 === this.selectionStart && 0 === this.selectionEnd || this._moveCursorUpOrDown("Up", t); }, _moveCursorUpOrDown: function (t, e) { var i = "get" + t + "CursorOffset", r = this[i](e, "right" === this._selectionDirection); e.shiftKey ? this.moveCursorWithShift(r) : this.moveCursorWithoutShift(r), 0 !== r && (this.setSelectionInBoundaries(), this.abortCursorAnimation(), this._currentCursorOpacity = 1, this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea()); }, moveCursorWithShift: function (t) { var e = "left" === this._selectionDirection ? this.selectionStart + t : this.selectionEnd + t; return this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, e), 0 !== t; }, moveCursorWithoutShift: function (t) { return t < 0 ? (this.selectionStart += t, this.selectionEnd = this.selectionStart) : (this.selectionEnd += t, this.selectionStart = this.selectionEnd), 0 !== t; }, moveCursorLeft: function (t) { 0 === this.selectionStart && 0 === this.selectionEnd || this._moveCursorLeftOrRight("Left", t); }, _move: function (t, e, i) { var r; if (t.altKey)
        r = this["findWordBoundary" + i](this[e]);
    else {
        if (!t.metaKey && 35 !== t.keyCode && 36 !== t.keyCode)
            return this[e] += "Left" === i ? -1 : 1, !0;
        r = this["findLineBoundary" + i](this[e]);
    } if (void 0 !== typeof r && this[e] !== r)
        return this[e] = r, !0; }, _moveLeft: function (t, e) { return this._move(t, e, "Left"); }, _moveRight: function (t, e) { return this._move(t, e, "Right"); }, moveCursorLeftWithoutShift: function (t) { var e = !0; return this._selectionDirection = "left", this.selectionEnd === this.selectionStart && 0 !== this.selectionStart && (e = this._moveLeft(t, "selectionStart")), this.selectionEnd = this.selectionStart, e; }, moveCursorLeftWithShift: function (t) { return "right" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveLeft(t, "selectionEnd") : 0 !== this.selectionStart ? (this._selectionDirection = "left", this._moveLeft(t, "selectionStart")) : void 0; }, moveCursorRight: function (t) { this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length || this._moveCursorLeftOrRight("Right", t); }, _moveCursorLeftOrRight: function (t, e) { var i = "moveCursor" + t + "With"; this._currentCursorOpacity = 1, i += e.shiftKey ? "Shift" : "outShift", this[i](e) && (this.abortCursorAnimation(), this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea()); }, moveCursorRightWithShift: function (t) { return "left" === this._selectionDirection && this.selectionStart !== this.selectionEnd ? this._moveRight(t, "selectionStart") : this.selectionEnd !== this.text.length ? (this._selectionDirection = "right", this._moveRight(t, "selectionEnd")) : void 0; }, moveCursorRightWithoutShift: function (t) { var e = !0; return this._selectionDirection = "right", this.selectionStart === this.selectionEnd ? (e = this._moveRight(t, "selectionStart"), this.selectionEnd = this.selectionStart) : this.selectionStart = this.selectionEnd, e; }, removeChars: function (t) { this.selectionStart === this.selectionEnd ? this._removeCharsNearCursor(t) : this._removeCharsFromTo(this.selectionStart, this.selectionEnd), this.setSelectionEnd(this.selectionStart), this._removeExtraneousStyles(), this.canvas && this.canvas.renderAll(), this.setCoords(), this.fire("changed"), this.canvas && this.canvas.fire("text:changed", { target: this }); }, _removeCharsNearCursor: function (t) { if (0 !== this.selectionStart)
        if (t.metaKey) {
            var e = this.findLineBoundaryLeft(this.selectionStart);
            this._removeCharsFromTo(e, this.selectionStart), this.setSelectionStart(e);
        }
        else if (t.altKey) {
            var i = this.findWordBoundaryLeft(this.selectionStart);
            this._removeCharsFromTo(i, this.selectionStart), this.setSelectionStart(i);
        }
        else
            this._removeSingleCharAndStyle(this.selectionStart), this.setSelectionStart(this.selectionStart - 1); } }), function () { var t = fabric.util.toFixed, e = fabric.Object.NUM_FRACTION_DIGITS; fabric.util.object.extend(fabric.IText.prototype, { _setSVGTextLineText: function (t, e, i, r, n, s) { this._getLineStyle(t) ? this._setSVGTextLineChars(t, e, i, r, s) : fabric.Text.prototype._setSVGTextLineText.call(this, t, e, i, r, n); }, _setSVGTextLineChars: function (t, e, i, r, n) { for (var s = this._textLines[t], o = 0, a = this._getLineLeftOffset(this._getLineWidth(this.ctx, t)) - this.width / 2, h = this._getSVGLineTopOffset(t), c = this._getHeightOfLine(this.ctx, t), l = 0, u = s.length; l < u; l++) {
        var f = this._getStyleDeclaration(t, l) || {};
        e.push(this._createTextCharSpan(s[l], f, a, h.lineTop + h.offset, o));
        var d = this._getWidthOfChar(this.ctx, s[l], t, l);
        f.textBackgroundColor && n.push(this._createTextCharBg(f, a, h.lineTop, c, d, o)), o += d;
    } }, _getSVGLineTopOffset: function (t) { for (var e = 0, i = 0, r = 0; r < t; r++)
        e += this._getHeightOfLine(this.ctx, r); return i = this._getHeightOfLine(this.ctx, r), { lineTop: e, offset: (this._fontSizeMult - this._fontSizeFraction) * i / (this.lineHeight * this._fontSizeMult) }; }, _createTextCharBg: function (i, r, n, s, o, a) { return ['\t\t<rect fill="', i.textBackgroundColor, '" x="', t(r + a, e), '" y="', t(n - this.height / 2, e), '" width="', t(o, e), '" height="', t(s / this.lineHeight, e), '"></rect>\n'].join(""); }, _createTextCharSpan: function (i, r, n, s, o) { var a = this.getSvgStyles.call(fabric.util.object.extend({ visible: !0, fill: this.fill, stroke: this.stroke, type: "text", getSvgFilter: fabric.Object.prototype.getSvgFilter }, r)); return ['\t\t\t<tspan x="', t(n + o, e), '" y="', t(s - this.height / 2, e), '" ', r.fontFamily ? 'font-family="' + r.fontFamily.replace(/"/g, "'") + '" ' : "", r.fontSize ? 'font-size="' + r.fontSize + '" ' : "", r.fontStyle ? 'font-style="' + r.fontStyle + '" ' : "", r.fontWeight ? 'font-weight="' + r.fontWeight + '" ' : "", r.textDecoration ? 'text-decoration="' + r.textDecoration + '" ' : "", 'style="', a, '">', fabric.util.string.escapeXml(i), "</tspan>\n"].join(""); } }); }(), function (t) {
    "use strict";
    var e = t.fabric || (t.fabric = {}), i = e.util.object.clone;
    e.Textbox = e.util.createClass(e.IText, e.Observable, { type: "textbox", minWidth: 20, dynamicMinWidth: 2, __cachedLines: null, lockScalingY: !0, lockScalingFlip: !0, initialize: function (t, i) { this.ctx = e.util.createCanvasElement().getContext("2d"), this.callSuper("initialize", t, i), this.setControlsVisibility(e.Textbox.getTextboxControlVisibility()), this._dimensionAffectingProps.width = !0; }, _initDimensions: function (t) { this.__skipDimension || (t || (t = e.util.createCanvasElement().getContext("2d"), this._setTextStyles(t)), this.dynamicMinWidth = 0, this._textLines = this._splitTextIntoLines(), this.dynamicMinWidth > this.width && this._set("width", this.dynamicMinWidth), this._clearCache(), this.height = this._getTextHeight(t)); }, _generateStyleMap: function () { for (var t = 0, e = 0, i = 0, r = {}, n = 0; n < this._textLines.length; n++)
            "\n" === this.text[i] && n > 0 ? (e = 0, i++, t++) : " " === this.text[i] && n > 0 && (e++, i++), r[n] = { line: t, offset: e }, i += this._textLines[n].length, e += this._textLines[n].length; return r; }, _getStyleDeclaration: function (t, e, i) { if (this._styleMap) {
            var r = this._styleMap[t];
            if (!r)
                return i ? {} : null;
            t = r.line, e = r.offset + e;
        } return this.callSuper("_getStyleDeclaration", t, e, i); }, _setStyleDeclaration: function (t, e, i) { var r = this._styleMap[t]; t = r.line, e = r.offset + e, this.styles[t][e] = i; }, _deleteStyleDeclaration: function (t, e) { var i = this._styleMap[t]; t = i.line, e = i.offset + e, delete this.styles[t][e]; }, _getLineStyle: function (t) { var e = this._styleMap[t]; return this.styles[e.line]; }, _setLineStyle: function (t, e) { var i = this._styleMap[t]; this.styles[i.line] = e; }, _deleteLineStyle: function (t) { var e = this._styleMap[t]; delete this.styles[e.line]; }, _wrapText: function (t, e) { var i, r = e.split(this._reNewline), n = []; for (i = 0; i < r.length; i++)
            n = n.concat(this._wrapLine(t, r[i], i)); return n; }, _measureText: function (t, e, i, r) { var n = 0; r = r || 0; for (var s = 0, o = e.length; s < o; s++)
            n += this._getWidthOfChar(t, e[s], i, s + r); return n; }, _wrapLine: function (t, e, i) { for (var r = 0, n = [], s = "", o = e.split(" "), a = "", h = 0, c = " ", l = 0, u = 0, f = 0, d = !0, g = this._getWidthOfCharSpacing(), p = 0; p < o.length; p++)
            a = o[p], l = this._measureText(t, a, i, h), h += a.length, r += u + l - g, r >= this.width && !d ? (n.push(s), s = "", r = l, d = !0) : r += g, d || (s += c), s += a, u = this._measureText(t, c, i, h), h++, d = !1, l > f && (f = l); return p && n.push(s), f > this.dynamicMinWidth && (this.dynamicMinWidth = f - g), n; }, _splitTextIntoLines: function () { var t = this.textAlign; this.ctx.save(), this._setTextStyles(this.ctx), this.textAlign = "left"; var e = this._wrapText(this.ctx, this.text); return this.textAlign = t, this.ctx.restore(), this._textLines = e, this._styleMap = this._generateStyleMap(), e; }, setOnGroup: function (t, e) { "scaleX" === t && (this.set("scaleX", Math.abs(1 / e)), this.set("width", this.get("width") * e / ("undefined" == typeof this.__oldScaleX ? 1 : this.__oldScaleX)), this.__oldScaleX = e); }, get2DCursorLocation: function (t) { "undefined" == typeof t && (t = this.selectionStart); for (var e = this._textLines.length, i = 0, r = 0; r < e; r++) {
            var n = this._textLines[r], s = n.length;
            if (t <= i + s)
                return { lineIndex: r, charIndex: t - i };
            i += s, "\n" !== this.text[i] && " " !== this.text[i] || i++;
        } return { lineIndex: e - 1, charIndex: this._textLines[e - 1].length }; }, _getCursorBoundariesOffsets: function (t, e) { for (var i = 0, r = 0, n = this.get2DCursorLocation(), s = this._textLines[n.lineIndex].split(""), o = this._getLineLeftOffset(this._getLineWidth(this.ctx, n.lineIndex)), a = 0; a < n.charIndex; a++)
            r += this._getWidthOfChar(this.ctx, s[a], n.lineIndex, a); for (a = 0; a < n.lineIndex; a++)
            i += this._getHeightOfLine(this.ctx, a); return "cursor" === e && (i += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, n.lineIndex) / this.lineHeight - this.getCurrentCharFontSize(n.lineIndex, n.charIndex) * (1 - this._fontSizeFraction)), { top: i, left: r, lineLeft: o }; }, getMinWidth: function () { return Math.max(this.minWidth, this.dynamicMinWidth); }, toObject: function (t) { return e.util.object.extend(this.callSuper("toObject", t), { minWidth: this.minWidth }); } }), e.Textbox.fromObject = function (t, r) { var n = new e.Textbox(t.text, i(t)); return r && r(n), n; }, e.Textbox.getTextboxControlVisibility = function () { return { tl: !1, tr: !1, br: !1, bl: !1, ml: !0, mt: !1, mr: !0, mb: !1, mtr: !0 }; };
}("undefined" != typeof exports ? exports : this), function () { var t = fabric.Canvas.prototype._setObjectScale; fabric.Canvas.prototype._setObjectScale = function (e, i, r, n, s, o, a) { var h = i.target; if (!(h instanceof fabric.Textbox))
    return t.call(fabric.Canvas.prototype, e, i, r, n, s, o, a); var c = h.width * (e.x / i.scaleX / (h.width + h.strokeWidth)); return c >= h.getMinWidth() ? (h.set("width", c), !0) : void 0; }, fabric.Group.prototype._refreshControlsVisibility = function () { if ("undefined" != typeof fabric.Textbox)
    for (var t = this._objects.length; t--;)
        if (this._objects[t] instanceof fabric.Textbox)
            return void this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility()); }; var e = fabric.util.object.clone; fabric.util.object.extend(fabric.Textbox.prototype, { _removeExtraneousStyles: function () { for (var t in this._styleMap)
        this._textLines[t] || delete this.styles[this._styleMap[t].line]; }, insertCharStyleObject: function (t, e, i) { var r = this._styleMap[t]; t = r.line, e = r.offset + e, fabric.IText.prototype.insertCharStyleObject.apply(this, [t, e, i]); }, insertNewlineStyleObject: function (t, e, i) { var r = this._styleMap[t]; t = r.line, e = r.offset + e, fabric.IText.prototype.insertNewlineStyleObject.apply(this, [t, e, i]); }, shiftLineStyles: function (t, i) { var r = e(this.styles), n = this._styleMap[t]; t = n.line; for (var s in this.styles) {
        var o = parseInt(s, 10);
        o > t && (this.styles[o + i] = r[o], r[o - i] || delete this.styles[o]);
    } }, _getTextOnPreviousLine: function (t) { for (var e = this._textLines[t - 1]; this._styleMap[t - 2] && this._styleMap[t - 2].line === this._styleMap[t - 1].line;)
        e = this._textLines[t - 2] + e, t--; return e; }, removeStyleObject: function (t, e) { var i = this.get2DCursorLocation(e), r = this._styleMap[i.lineIndex], n = r.line, s = r.offset + i.charIndex; this._removeStyleObject(t, i, n, s); } }); }(), function () { var t = fabric.IText.prototype._getNewSelectionStartFromOffset; fabric.IText.prototype._getNewSelectionStartFromOffset = function (e, i, r, n, s) { n = t.call(this, e, i, r, n, s); for (var o = 0, a = 0, h = 0; h < this._textLines.length && (o += this._textLines[h].length, !(o + a >= n)); h++)
    "\n" !== this.text[o + a] && " " !== this.text[o + a] || a++; return n - h + a; }; }(), function () { function request(t, e, i) { var r = URL.parse(t); r.port || (r.port = 0 === r.protocol.indexOf("https:") ? 443 : 80); var n = 0 === r.protocol.indexOf("https:") ? HTTPS : HTTP, s = n.request({ hostname: r.hostname, port: r.port, path: r.path, method: "GET" }, function (t) { var r = ""; e && t.setEncoding(e), t.on("end", function () { i(r); }), t.on("data", function (e) { 200 === t.statusCode && (r += e); }); }); s.on("error", function (t) { t.errno === process.ECONNREFUSED ? fabric.log("ECONNREFUSED: connection refused to " + r.hostname + ":" + r.port) : fabric.log(t.message), i(null); }), s.end(); } function requestFs(t, e) { var i = require("fs"); i.readFile(t, function (t, i) { if (t)
    throw fabric.log(t), t; e(i); }); } if ("undefined" == typeof document || "undefined" == typeof window) {
    var DOMParser = require("xmldom").DOMParser, URL = require("url"), HTTP = require("http"), HTTPS = require("https"), Canvas = require("canvas"), Image = require("canvas").Image;
    fabric.util.loadImage = function (t, e, i) { function r(r) { r ? (n.src = new Buffer(r, "binary"), n._src = t, e && e.call(i, n)) : (n = null, e && e.call(i, null, !0)); } var n = new Image; t && (t instanceof Buffer || 0 === t.indexOf("data")) ? (n.src = n._src = t, e && e.call(i, n)) : t && 0 !== t.indexOf("http") ? requestFs(t, r) : t ? request(t, "binary", r) : e && e.call(i, t); }, fabric.loadSVGFromURL = function (t, e, i) { t = t.replace(/^\n\s*/, "").replace(/\?.*$/, "").trim(), 0 !== t.indexOf("http") ? requestFs(t, function (t) { fabric.loadSVGFromString(t.toString(), e, i); }) : request(t, "", function (t) { fabric.loadSVGFromString(t, e, i); }); }, fabric.loadSVGFromString = function (t, e, i) { var r = (new DOMParser).parseFromString(t); fabric.parseSVGDocument(r.documentElement, function (t, i) { e && e(t, i); }, i); }, fabric.util.getScript = function (url, callback) { request(url, "", function (body) { eval(body), callback && callback(); }); }, fabric.createCanvasForNode = function (t, e, i, r) { r = r || i; var n = fabric.document.createElement("canvas"), s = new Canvas(t || 600, e || 600, r), o = new Canvas(t || 600, e || 600, r); n.style = {}, n.width = s.width, n.height = s.height, i = i || {}, i.nodeCanvas = s, i.nodeCacheCanvas = o; var a = fabric.Canvas || fabric.StaticCanvas, h = new a(n, i); return h.nodeCanvas = s, h.nodeCacheCanvas = o, h.contextContainer = s.getContext("2d"), h.contextCache = o.getContext("2d"), h.Font = Canvas.Font, h; };
    var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;
    fabric.StaticCanvas.prototype._initStatic = function (t, e) { t = t || fabric.document.createElement("canvas"), this.nodeCanvas = new Canvas(t.width, t.height), this.nodeCacheCanvas = new Canvas(t.width, t.height), originaInitStatic.call(this, t, e), this.contextContainer = this.nodeCanvas.getContext("2d"), this.contextCache = this.nodeCacheCanvas.getContext("2d"), this.Font = Canvas.Font; }, fabric.StaticCanvas.prototype.createPNGStream = function () { return this.nodeCanvas.createPNGStream(); }, fabric.StaticCanvas.prototype.createJPEGStream = function (t) { return this.nodeCanvas.createJPEGStream(t); }, fabric.StaticCanvas.prototype._initRetinaScaling = function () { if (this._isRetinaScaling())
        return this.lowerCanvasEl.setAttribute("width", this.width * fabric.devicePixelRatio), this.lowerCanvasEl.setAttribute("height", this.height * fabric.devicePixelRatio), this.nodeCanvas.width = this.width * fabric.devicePixelRatio, this.nodeCanvas.height = this.height * fabric.devicePixelRatio, this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio), this; }, fabric.Canvas && (fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling);
    var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;
    fabric.StaticCanvas.prototype._setBackstoreDimension = function (t, e) { return origSetBackstoreDimension.call(this, t, e), this.nodeCanvas[t] = e, this; }, fabric.Canvas && (fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension);
} }();
let tablatureStyle = {
    stringCount: 6,
    smuflText: {
        fontFamily: "Bravura",
        fontSize: 38
    },
    fallback: {
        fontFamily: "Segoe UI",
    },
    page: {
        width: 1200,
        height: 3200
    },
    documentState: {
        transposition: {
            fontSize: 12,
            fontFamily: "Times New Roman",
            fontStyle: "bold"
        },
        tempo: {
            fontSize: 12,
            fontFamily: "Bravura",
            fontStyle: "bold"
        },
        section: {
            fontSize: 14,
            fontFamily: "Times New Roman",
            fontStyle: "bold"
        },
        sectionTextPadding: 2,
        alternativeEndingText: {
            fontSize: 12,
            fontFamily: "Times New Roman",
            fontStyle: "bold"
        },
        alternativeEndingHeight: 16,
        alternativeEndingTextPadding: 2,
        endAlternativeEndingRightMargin: 4
    },
    bar: {
        lineHeight: 12,
        beamThickness: 4,
        beamSpacing: 4,
        timeSignature: {
            fontSize: 42,
            fontFamily: "Bravura",
            lineHeight: 0.5
        },
        timeSignatureOffset: -12,
    },
    note: {
        margin: 2,
        ellipseAroundLongNotes: true,
        longNoteEllipsePadding: 1,
        dot: {
            radius: 1.5,
            offset: 3,
            spacing: 2
        },
        flagSpacing: 4,
        tuplet: {
            fontSize: 20,
            fontFamily: "Bravura",
        },
    },
    chordDiagram: {
        gridThickness: 1,
        nutThickness: 3,
        elementSpacing: 2,
        cellHeight: 11,
        cellWidth: 7,
        nameText: {
            fontSize: 14,
            fontFamily: "Times New Roman",
            fontStyle: "bold"
        },
        fingeringText: {
            fontSize: 10,
            fontFamily: "Times New Roman",
            fontStyle: "italic"
        },
        fretText: {
            fontSize: 10,
            fontFamily: "Times New Roman",
            fontStyle: "italic"
        },
        fingeringTokenRadius: 2.5,
        specialStringTokenPadding: { top: -24, bottom: -8 }
    },
    ornaments: {
        artificialHarmonicsText: {
            fontSize: 12,
            fontFamily: "Times New Roman",
            fontStyle: "bold"
        },
        connectionInstructionText: {
            fontSize: 12,
            fontFamily: "Times New Roman",
            fontStyle: "italic"
        },
        rasgueadoText: {
            fontSize: 12,
            fontFamily: "Times New Roman",
            fontStyle: "bold italic"
        },
    },
    title: {
        fontSize: 32,
        fontFamily: "Felix Titling"
    },
    fretNumber: {
        fontSize: 12,
        fontFamily: "Segoe UI"
    },
    lyrics: {
        fontSize: 13,
        fontFamily: "Times New Roman"
    }
};
let callbackObjects;
let renderer;
window.onerror = function (errorMessage, url, lineNumber) {
    alert(errorMessage + "\n" + url + "#" + lineNumber);
};
window.onload = () => {
    let canvas = document.getElementById("staff");
    //let fabricCanvas = new fabric.StaticCanvas(canvas, tablatureStyle.page);
    let fabricCanvas = new fabric.Canvas(canvas, tablatureStyle.page);
    renderer = new TR.PrimitiveRenderer(fabricCanvas, tablatureStyle);
    //renderer.drawChord(113.557998657227, 169.242, "F#m", [{fret:2,finger:1,},{fret:4,finger:3,},{fret:4,finger:4,},{fret:2,finger:1,},{fret:2,finger:1,},{fret:2,finger:1,},]);
    //renderer.drawChord(440, 169.242, "D", ['x','x',0,{fret:2,finger:1,},{fret:3,finger:3,},{fret:2,finger:2,},])
    //renderer.drawFretNumber("2", 100, 100, true);
    //renderer.drawTitle("test!!!", 400, 100);
    //renderer.drawBarLine(Core.MusicTheory.BarLine.BeginAndEndRepeat, 100, 100);
    //renderer.drawFlag(BaseNoteValue.SixtyFourth, 100, 100, OffBarDirection.Top);
    //renderer.drawTuplet("3", 100, 100);
    //renderer.drawTie(100, 300, 100, OffBarDirection.Top);
    renderer.drawBeatModifier(100, 100, Core.MusicTheory.BeatModifier.Tenuto, Core.MusicTheory.OffBarDirection.Bottom);
};
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        var BarLine;
        (function (BarLine) {
            BarLine[BarLine["Standard"] = 0] = "Standard";
            BarLine[BarLine["Double"] = 1] = "Double";
            BarLine[BarLine["End"] = 2] = "End";
            BarLine[BarLine["BeginRepeat"] = 3] = "BeginRepeat";
            BarLine[BarLine["EndRepeat"] = 4] = "EndRepeat";
            BarLine[BarLine["BeginAndEndRepeat"] = 5] = "BeginAndEndRepeat";
            BarLine[BarLine["BeginRepeatAndEnd"] = 6] = "BeginRepeatAndEnd";
        })(BarLine = MusicTheory.BarLine || (MusicTheory.BarLine = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        var BaseNoteValue;
        (function (BaseNoteValue) {
            BaseNoteValue[BaseNoteValue["Large"] = 3] = "Large";
            BaseNoteValue[BaseNoteValue["Long"] = 2] = "Long";
            BaseNoteValue[BaseNoteValue["Double"] = 1] = "Double";
            BaseNoteValue[BaseNoteValue["Whole"] = 0] = "Whole";
            BaseNoteValue[BaseNoteValue["Half"] = -1] = "Half";
            BaseNoteValue[BaseNoteValue["Quater"] = -2] = "Quater";
            BaseNoteValue[BaseNoteValue["Eighth"] = -3] = "Eighth";
            BaseNoteValue[BaseNoteValue["Sixteenth"] = -4] = "Sixteenth";
            BaseNoteValue[BaseNoteValue["ThirtySecond"] = -5] = "ThirtySecond";
            BaseNoteValue[BaseNoteValue["SixtyFourth"] = -6] = "SixtyFourth";
            BaseNoteValue[BaseNoteValue["HundredTwentyEighth"] = -7] = "HundredTwentyEighth";
            BaseNoteValue[BaseNoteValue["TwoHundredFiftySixth"] = -8] = "TwoHundredFiftySixth";
        })(BaseNoteValue = MusicTheory.BaseNoteValue || (MusicTheory.BaseNoteValue = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        var BeatModifier;
        (function (BeatModifier) {
            BeatModifier[BeatModifier["Accent"] = 1] = "Accent";
            BeatModifier[BeatModifier["Marcato"] = 2] = "Marcato";
            BeatModifier[BeatModifier["Staccato"] = 11] = "Staccato";
            BeatModifier[BeatModifier["Staccatissimo"] = 12] = "Staccatissimo";
            BeatModifier[BeatModifier["Tenuto"] = 13] = "Tenuto";
            BeatModifier[BeatModifier["Fermata"] = 14] = "Fermata";
            BeatModifier[BeatModifier["PickstrokeDown"] = 21] = "PickstrokeDown";
            BeatModifier[BeatModifier["PickstrokeUp"] = 22] = "PickstrokeUp";
            BeatModifier[BeatModifier["Trill"] = 31] = "Trill";
            BeatModifier[BeatModifier["Mordent"] = 32] = "Mordent";
            BeatModifier[BeatModifier["LowerMordent"] = 33] = "LowerMordent";
            BeatModifier[BeatModifier["Turn"] = 34] = "Turn";
            BeatModifier[BeatModifier["InvertedTurn"] = 35] = "InvertedTurn";
        })(BeatModifier = MusicTheory.BeatModifier || (MusicTheory.BeatModifier = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        // This enum is convertible from NoteConnection
        var GlissDirection;
        // This enum is convertible from NoteConnection
        (function (GlissDirection) {
            GlissDirection[GlissDirection["FromHigher"] = 2] = "FromHigher";
            GlissDirection[GlissDirection["FromLower"] = 3] = "FromLower";
            GlissDirection[GlissDirection["ToHigher"] = 4] = "ToHigher";
            GlissDirection[GlissDirection["ToLower"] = 5] = "ToLower";
        })(GlissDirection = MusicTheory.GlissDirection || (MusicTheory.GlissDirection = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        var NoteValueAugment;
        (function (NoteValueAugment) {
            NoteValueAugment[NoteValueAugment["None"] = 0] = "None";
            NoteValueAugment[NoteValueAugment["Dot"] = 1] = "Dot";
            NoteValueAugment[NoteValueAugment["TwoDots"] = 2] = "TwoDots";
            NoteValueAugment[NoteValueAugment["ThreeDots"] = 3] = "ThreeDots";
        })(NoteValueAugment = MusicTheory.NoteValueAugment || (MusicTheory.NoteValueAugment = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var MusicTheory;
    (function (MusicTheory) {
        var OffBarDirection;
        (function (OffBarDirection) {
            OffBarDirection[OffBarDirection["Top"] = 0] = "Top";
            OffBarDirection[OffBarDirection["Bottom"] = 1] = "Bottom";
        })(OffBarDirection = MusicTheory.OffBarDirection || (MusicTheory.OffBarDirection = {}));
    })(MusicTheory = Core.MusicTheory || (Core.MusicTheory = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var Smufl;
    (function (Smufl) {
        var Metadata;
        (function (Metadata) {
            Metadata.SmuflClasses = {
                "accidentals": [
                    "accidentalFlat",
                    "accidentalNatural",
                    "accidentalSharp",
                    "accidentalDoubleSharp",
                    "accidentalDoubleFlat",
                    "accidentalTripleSharp",
                    "accidentalTripleFlat",
                    "accidentalNaturalFlat",
                    "accidentalNaturalSharp",
                    "accidentalSharpSharp",
                    "accidentalParensLeft",
                    "accidentalParensRight",
                    "accidentalQuarterToneFlatArrowUp",
                    "accidentalThreeQuarterTonesFlatArrowDown",
                    "accidentalQuarterToneSharpNaturalArrowUp",
                    "accidentalQuarterToneFlatNaturalArrowDown",
                    "accidentalThreeQuarterTonesSharpArrowUp",
                    "accidentalQuarterToneSharpArrowDown",
                    "accidentalFiveQuarterTonesSharpArrowUp",
                    "accidentalThreeQuarterTonesSharpArrowDown",
                    "accidentalThreeQuarterTonesFlatArrowUp",
                    "accidentalFiveQuarterTonesFlatArrowDown",
                    "accidentalArrowUp",
                    "accidentalArrowDown",
                    "accidentalQuarterToneFlatStein",
                    "accidentalThreeQuarterTonesFlatZimmermann",
                    "accidentalQuarterToneSharpStein",
                    "accidentalThreeQuarterTonesSharpStein",
                    "accidentalNarrowReversedFlat",
                    "accidentalNarrowReversedFlatAndFlat",
                    "accidentalReversedFlatArrowUp",
                    "accidentalReversedFlatArrowDown",
                    "accidentalFilledReversedFlatArrowUp",
                    "accidentalFilledReversedFlatArrowDown",
                    "accidentalReversedFlatAndFlatArrowUp",
                    "accidentalReversedFlatAndFlatArrowDown",
                    "accidentalFilledReversedFlatAndFlat",
                    "accidentalFilledReversedFlatAndFlatArrowUp",
                    "accidentalFilledReversedFlatAndFlatArrowDown",
                    "accidentalHalfSharpArrowUp",
                    "accidentalHalfSharpArrowDown",
                    "accidentalOneAndAHalfSharpsArrowUp",
                    "accidentalOneAndAHalfSharpsArrowDown",
                    "accidentalSims12Down",
                    "accidentalSims6Down",
                    "accidentalSims4Down",
                    "accidentalSims12Up",
                    "accidentalSims6Up",
                    "accidentalSims4Up",
                    "accidentalJohnstonPlus",
                    "accidentalJohnstonMinus",
                    "accidentalJohnstonEl",
                    "accidentalJohnstonSeven",
                    "accidentalJohnstonUp",
                    "accidentalJohnstonDown",
                    "accidentalJohnston13",
                    "accidentalJohnston31",
                    "accidentalDoubleFlatOneArrowDown",
                    "accidentalFlatOneArrowDown",
                    "accidentalNaturalOneArrowDown",
                    "accidentalSharpOneArrowDown",
                    "accidentalDoubleSharpOneArrowDown",
                    "accidentalDoubleFlatOneArrowUp",
                    "accidentalFlatOneArrowUp",
                    "accidentalNaturalOneArrowUp",
                    "accidentalSharpOneArrowUp",
                    "accidentalDoubleSharpOneArrowUp",
                    "accidentalDoubleFlatTwoArrowsDown",
                    "accidentalFlatTwoArrowsDown",
                    "accidentalNaturalTwoArrowsDown",
                    "accidentalSharpTwoArrowsDown",
                    "accidentalDoubleSharpTwoArrowsDown",
                    "accidentalDoubleFlatTwoArrowsUp",
                    "accidentalFlatTwoArrowsUp",
                    "accidentalNaturalTwoArrowsUp",
                    "accidentalSharpTwoArrowsUp",
                    "accidentalDoubleSharpTwoArrowsUp",
                    "accidentalDoubleFlatThreeArrowsDown",
                    "accidentalFlatThreeArrowsDown",
                    "accidentalNaturalThreeArrowsDown",
                    "accidentalSharpThreeArrowsDown",
                    "accidentalDoubleSharpThreeArrowsDown",
                    "accidentalDoubleFlatThreeArrowsUp",
                    "accidentalFlatThreeArrowsUp",
                    "accidentalNaturalThreeArrowsUp",
                    "accidentalSharpThreeArrowsUp",
                    "accidentalDoubleSharpThreeArrowsUp",
                    "accidentalLowerOneSeptimalComma",
                    "accidentalRaiseOneSeptimalComma",
                    "accidentalLowerTwoSeptimalCommas",
                    "accidentalRaiseTwoSeptimalCommas",
                    "accidentalLowerOneUndecimalQuartertone",
                    "accidentalRaiseOneUndecimalQuartertone",
                    "accidentalLowerOneTridecimalQuartertone",
                    "accidentalRaiseOneTridecimalQuartertone",
                    "accidentalCombiningLower17Schisma",
                    "accidentalCombiningRaise17Schisma",
                    "accidentalCombiningLower19Schisma",
                    "accidentalCombiningRaise19Schisma",
                    "accidentalCombiningLower23Limit29LimitComma",
                    "accidentalCombiningRaise23Limit29LimitComma",
                    "accidentalCombiningLower31Schisma",
                    "accidentalCombiningRaise31Schisma",
                    "accidentalCombiningOpenCurlyBrace",
                    "accidentalCombiningCloseCurlyBrace",
                    "accidentalDoubleFlatEqualTempered",
                    "accidentalFlatEqualTempered",
                    "accidentalNaturalEqualTempered",
                    "accidentalSharpEqualTempered",
                    "accidentalDoubleSharpEqualTempered",
                    "accidentalQuarterFlatEqualTempered",
                    "accidentalQuarterSharpEqualTempered",
                    "accidentalCombiningLower53LimitComma",
                    "accidentalCombiningRaise53LimitComma",
                    "accidentalEnharmonicTilde",
                    "accidentalEnharmonicAlmostEqualTo",
                    "accidentalEnharmonicEquals",
                    "accSagittal5v7KleismaUp",
                    "accSagittal5v7KleismaDown",
                    "accSagittal5CommaUp",
                    "accSagittal5CommaDown",
                    "accSagittal7CommaUp",
                    "accSagittal7CommaDown",
                    "accSagittal25SmallDiesisUp",
                    "accSagittal25SmallDiesisDown",
                    "accSagittal35MediumDiesisUp",
                    "accSagittal35MediumDiesisDown",
                    "accSagittal11MediumDiesisUp",
                    "accSagittal11MediumDiesisDown",
                    "accSagittal11LargeDiesisUp",
                    "accSagittal11LargeDiesisDown",
                    "accSagittal35LargeDiesisUp",
                    "accSagittal35LargeDiesisDown",
                    "accSagittalSharp25SDown",
                    "accSagittalFlat25SUp",
                    "accSagittalSharp7CDown",
                    "accSagittalFlat7CUp",
                    "accSagittalSharp5CDown",
                    "accSagittalFlat5CUp",
                    "accSagittalSharp5v7kDown",
                    "accSagittalFlat5v7kUp",
                    "accSagittalSharp",
                    "accSagittalFlat",
                    "accSagittalUnused1",
                    "accSagittalUnused2",
                    "accSagittalSharp5v7kUp",
                    "accSagittalFlat5v7kDown",
                    "accSagittalSharp5CUp",
                    "accSagittalFlat5CDown",
                    "accSagittalSharp7CUp",
                    "accSagittalFlat7CDown",
                    "accSagittalSharp25SUp",
                    "accSagittalFlat25SDown",
                    "accSagittalSharp35MUp",
                    "accSagittalFlat35MDown",
                    "accSagittalSharp11MUp",
                    "accSagittalFlat11MDown",
                    "accSagittalSharp11LUp",
                    "accSagittalFlat11LDown",
                    "accSagittalSharp35LUp",
                    "accSagittalFlat35LDown",
                    "accSagittalDoubleSharp25SDown",
                    "accSagittalDoubleFlat25SUp",
                    "accSagittalDoubleSharp7CDown",
                    "accSagittalDoubleFlat7CUp",
                    "accSagittalDoubleSharp5CDown",
                    "accSagittalDoubleFlat5CUp",
                    "accSagittalDoubleSharp5v7kDown",
                    "accSagittalDoubleFlat5v7kUp",
                    "accSagittalDoubleSharp",
                    "accSagittalDoubleFlat",
                    "accSagittal7v11KleismaUp",
                    "accSagittal7v11KleismaDown",
                    "accSagittal17CommaUp",
                    "accSagittal17CommaDown",
                    "accSagittal55CommaUp",
                    "accSagittal55CommaDown",
                    "accSagittal7v11CommaUp",
                    "accSagittal7v11CommaDown",
                    "accSagittal5v11SmallDiesisUp",
                    "accSagittal5v11SmallDiesisDown",
                    "accSagittalSharp5v11SDown",
                    "accSagittalFlat5v11SUp",
                    "accSagittalSharp7v11CDown",
                    "accSagittalFlat7v11CUp",
                    "accSagittalSharp55CDown",
                    "accSagittalFlat55CUp",
                    "accSagittalSharp17CDown",
                    "accSagittalFlat17CUp",
                    "accSagittalSharp7v11kDown",
                    "accSagittalFlat7v11kUp",
                    "accSagittalSharp7v11kUp",
                    "accSagittalFlat7v11kDown",
                    "accSagittalSharp17CUp",
                    "accSagittalFlat17CDown",
                    "accSagittalSharp55CUp",
                    "accSagittalFlat55CDown",
                    "accSagittalSharp7v11CUp",
                    "accSagittalFlat7v11CDown",
                    "accSagittalSharp5v11SUp",
                    "accSagittalFlat5v11SDown",
                    "accSagittalDoubleSharp5v11SDown",
                    "accSagittalDoubleFlat5v11SUp",
                    "accSagittalDoubleSharp7v11CDown",
                    "accSagittalDoubleFlat7v11CUp",
                    "accSagittalDoubleSharp55CDown",
                    "accSagittalDoubleFlat55CUp",
                    "accSagittalDoubleSharp17CDown",
                    "accSagittalDoubleFlat17CUp",
                    "accSagittalDoubleSharp7v11kDown",
                    "accSagittalDoubleFlat7v11kUp",
                    "accSagittal23CommaUp",
                    "accSagittal23CommaDown",
                    "accSagittal5v19CommaUp",
                    "accSagittal5v19CommaDown",
                    "accSagittal5v23SmallDiesisUp",
                    "accSagittal5v23SmallDiesisDown",
                    "accSagittalSharp5v23SDown",
                    "accSagittalFlat5v23SUp",
                    "accSagittalSharp5v19CDown",
                    "accSagittalFlat5v19CUp",
                    "accSagittalSharp23CDown",
                    "accSagittalFlat23CUp",
                    "accSagittalSharp23CUp",
                    "accSagittalFlat23CDown",
                    "accSagittalSharp5v19CUp",
                    "accSagittalFlat5v19CDown",
                    "accSagittalSharp5v23SUp",
                    "accSagittalFlat5v23SDown",
                    "accSagittalDoubleSharp5v23SDown",
                    "accSagittalDoubleFlat5v23SUp",
                    "accSagittalDoubleSharp5v19CDown",
                    "accSagittalDoubleFlat5v19CUp",
                    "accSagittalDoubleSharp23CDown",
                    "accSagittalDoubleFlat23CUp",
                    "accSagittal19SchismaUp",
                    "accSagittal19SchismaDown",
                    "accSagittal17KleismaUp",
                    "accSagittal17KleismaDown",
                    "accSagittal143CommaUp",
                    "accSagittal143CommaDown",
                    "accSagittal11v49CommaUp",
                    "accSagittal11v49CommaDown",
                    "accSagittal19CommaUp",
                    "accSagittal19CommaDown",
                    "accSagittal7v19CommaUp",
                    "accSagittal7v19CommaDown",
                    "accSagittal49SmallDiesisUp",
                    "accSagittal49SmallDiesisDown",
                    "accSagittal23SmallDiesisUp",
                    "accSagittal23SmallDiesisDown",
                    "accSagittal5v13MediumDiesisUp",
                    "accSagittal5v13MediumDiesisDown",
                    "accSagittal11v19MediumDiesisUp",
                    "accSagittal11v19MediumDiesisDown",
                    "accSagittal49MediumDiesisUp",
                    "accSagittal49MediumDiesisDown",
                    "accSagittal5v49MediumDiesisUp",
                    "accSagittal5v49MediumDiesisDown",
                    "accSagittal49LargeDiesisUp",
                    "accSagittal49LargeDiesisDown",
                    "accSagittal11v19LargeDiesisUp",
                    "accSagittal11v19LargeDiesisDown",
                    "accSagittal5v13LargeDiesisUp",
                    "accSagittal5v13LargeDiesisDown",
                    "accSagittalSharp23SDown",
                    "accSagittalFlat23SUp",
                    "accSagittalSharp49SDown",
                    "accSagittalFlat49SUp",
                    "accSagittalSharp7v19CDown",
                    "accSagittalFlat7v19CUp",
                    "accSagittalSharp19CDown",
                    "accSagittalFlat19CUp",
                    "accSagittalSharp11v49CDown",
                    "accSagittalFlat11v49CUp",
                    "accSagittalSharp143CDown",
                    "accSagittalFlat143CUp",
                    "accSagittalSharp17kDown",
                    "accSagittalFlat17kUp",
                    "accSagittalSharp19sDown",
                    "accSagittalFlat19sUp",
                    "accSagittalSharp19sUp",
                    "accSagittalFlat19sDown",
                    "accSagittalSharp17kUp",
                    "accSagittalFlat17kDown",
                    "accSagittalSharp143CUp",
                    "accSagittalFlat143CDown",
                    "accSagittalSharp11v49CUp",
                    "accSagittalFlat11v49CDown",
                    "accSagittalSharp19CUp",
                    "accSagittalFlat19CDown",
                    "accSagittalSharp7v19CUp",
                    "accSagittalFlat7v19CDown",
                    "accSagittalSharp49SUp",
                    "accSagittalFlat49SDown",
                    "accSagittalSharp23SUp",
                    "accSagittalFlat23SDown",
                    "accSagittalSharp5v13MUp",
                    "accSagittalFlat5v13MDown",
                    "accSagittalSharp11v19MUp",
                    "accSagittalFlat11v19MDown",
                    "accSagittalSharp49MUp",
                    "accSagittalFlat49MDown",
                    "accSagittalSharp5v49MUp",
                    "accSagittalFlat5v49MDown",
                    "accSagittalSharp49LUp",
                    "accSagittalFlat49LDown",
                    "accSagittalSharp11v19LUp",
                    "accSagittalFlat11v19LDown",
                    "accSagittalSharp5v13LUp",
                    "accSagittalFlat5v13LDown",
                    "accSagittalUnused3",
                    "accSagittalUnused4",
                    "accSagittalDoubleSharp23SDown",
                    "accSagittalDoubleFlat23SUp",
                    "accSagittalDoubleSharp49SDown",
                    "accSagittalDoubleFlat49SUp",
                    "accSagittalDoubleSharp7v19CDown",
                    "accSagittalDoubleFlat7v19CUp",
                    "accSagittalDoubleSharp19CDown",
                    "accSagittalDoubleFlat19CUp",
                    "accSagittalDoubleSharp11v49CDown",
                    "accSagittalDoubleFlat11v49CUp",
                    "accSagittalDoubleSharp143CDown",
                    "accSagittalDoubleFlat143CUp",
                    "accSagittalDoubleSharp17kDown",
                    "accSagittalDoubleFlat17kUp",
                    "accSagittalDoubleSharp19sDown",
                    "accSagittalDoubleFlat19sUp",
                    "accSagittalShaftUp",
                    "accSagittalShaftDown",
                    "accSagittalAcute",
                    "accSagittalGrave",
                    "accidentalWyschnegradsky1TwelfthsSharp",
                    "accidentalWyschnegradsky2TwelfthsSharp",
                    "accidentalWyschnegradsky3TwelfthsSharp",
                    "accidentalWyschnegradsky4TwelfthsSharp",
                    "accidentalWyschnegradsky5TwelfthsSharp",
                    "accidentalWyschnegradsky6TwelfthsSharp",
                    "accidentalWyschnegradsky7TwelfthsSharp",
                    "accidentalWyschnegradsky8TwelfthsSharp",
                    "accidentalWyschnegradsky9TwelfthsSharp",
                    "accidentalWyschnegradsky10TwelfthsSharp",
                    "accidentalWyschnegradsky11TwelfthsSharp",
                    "accidentalWyschnegradsky1TwelfthsFlat",
                    "accidentalWyschnegradsky2TwelfthsFlat",
                    "accidentalWyschnegradsky3TwelfthsFlat",
                    "accidentalWyschnegradsky4TwelfthsFlat",
                    "accidentalWyschnegradsky5TwelfthsFlat",
                    "accidentalWyschnegradsky6TwelfthsFlat",
                    "accidentalWyschnegradsky7TwelfthsFlat",
                    "accidentalWyschnegradsky8TwelfthsFlat",
                    "accidentalWyschnegradsky9TwelfthsFlat",
                    "accidentalWyschnegradsky10TwelfthsFlat",
                    "accidentalWyschnegradsky11TwelfthsFlat",
                    "accidentalBuyukMucennebFlat",
                    "accidentalKucukMucennebFlat",
                    "accidentalBakiyeFlat",
                    "accidentalKomaFlat",
                    "accidentalKomaSharp",
                    "accidentalBakiyeSharp",
                    "accidentalKucukMucennebSharp",
                    "accidentalBuyukMucennebSharp",
                    "accidental1CommaSharp",
                    "accidental2CommaSharp",
                    "accidental3CommaSharp",
                    "accidental5CommaSharp",
                    "accidental1CommaFlat",
                    "accidental2CommaFlat",
                    "accidental3CommaFlat",
                    "accidental4CommaFlat",
                    "accidentalKoron",
                    "accidentalSori",
                    "accidentalXenakisOneThirdToneSharp",
                    "accidentalXenakisTwoThirdTonesSharp",
                    "accidentalQuarterToneSharpBusotti",
                    "accidentalSharpOneHorizontalStroke",
                    "accidentalThreeQuarterTonesSharpBusotti",
                    "accidentalQuarterToneSharpWiggle",
                    "accidentalTavenerSharp",
                    "accidentalTavenerFlat",
                    "accidentalQuarterToneFlatPenderecki",
                    "accidentalCommaSlashUp",
                    "accidentalCommaSlashDown",
                    "accidentalWilsonPlus",
                    "accidentalWilsonMinus",
                    "accidentalLargeDoubleSharp",
                    "accidentalQuarterToneSharp4",
                    "accidentalQuarterToneFlat4",
                    "accidentalQuarterToneFlatFilledReversed",
                    "accidentalSharpReversed",
                    "accidentalNaturalReversed",
                    "accidentalDoubleFlatReversed",
                    "accidentalFlatTurned",
                    "accidentalDoubleFlatTurned",
                    "accidentalThreeQuarterTonesFlatGrisey",
                    "accidentalThreeQuarterTonesFlatTartini",
                    "accidentalQuarterToneFlatVanBlankenburg",
                    "accidentalThreeQuarterTonesFlatCouper",
                    "accidentalOneThirdToneSharpFerneyhough",
                    "accidentalOneThirdToneFlatFerneyhough",
                    "accidentalTwoThirdTonesSharpFerneyhough",
                    "accidentalTwoThirdTonesFlatFerneyhough",
                    "accidentalOneQuarterToneSharpFerneyhough",
                    "accidentalOneQuarterToneFlatFerneyhough",
                    "accidentalDoubleFlatArabic",
                    "accidentalThreeQuarterTonesFlatArabic",
                    "accidentalFlatArabic",
                    "accidentalQuarterToneFlatArabic",
                    "accidentalNaturalArabic",
                    "accidentalQuarterToneSharpArabic",
                    "accidentalSharpArabic",
                    "accidentalThreeQuarterTonesSharpArabic",
                    "accidentalDoubleSharpArabic",
                    "accidentalRaisedStockhausen",
                    "accidentalLoweredStockhausen",
                    "accidentalFlatRaisedStockhausen",
                    "accidentalFlatLoweredStockhausen",
                    "accidentalNaturalRaisedStockhausen",
                    "accidentalNaturalLoweredStockhausen",
                    "accidentalSharpRaisedStockhausen",
                    "accidentalSharpLoweredStockhausen",
                    "accidentalOneQuarterToneSharpStockhausen",
                    "accidentalOneQuarterToneFlatStockhausen",
                    "accidentalThreeQuarterTonesSharpStockhausen",
                    "accidentalFlatRepeatedSpaceStockhausen",
                    "accidentalFlatRepeatedLineStockhausen",
                    "accidentalSharpRepeatedSpaceStockhausen",
                    "accidentalSharpRepeatedLineStockhausen"
                ],
                "accidentals24EDOArrows": [
                    "accidentalQuarterToneFlatArrowUp",
                    "accidentalThreeQuarterTonesFlatArrowDown",
                    "accidentalQuarterToneSharpNaturalArrowUp",
                    "accidentalQuarterToneFlatNaturalArrowDown",
                    "accidentalThreeQuarterTonesSharpArrowUp",
                    "accidentalQuarterToneSharpArrowDown",
                    "accidentalFiveQuarterTonesSharpArrowUp",
                    "accidentalThreeQuarterTonesSharpArrowDown",
                    "accidentalThreeQuarterTonesFlatArrowUp",
                    "accidentalFiveQuarterTonesFlatArrowDown",
                    "accidentalArrowUp",
                    "accidentalArrowDown"
                ],
                "accidentals53EDOTurkish": [
                    "accidental1CommaSharp",
                    "accidental2CommaSharp",
                    "accidental3CommaSharp",
                    "accidental5CommaSharp",
                    "accidental1CommaFlat",
                    "accidental2CommaFlat",
                    "accidental3CommaFlat",
                    "accidental4CommaFlat"
                ],
                "accidentals72EDOWyschnegradsky": [
                    "accidentalWyschnegradsky1TwelfthsSharp",
                    "accidentalWyschnegradsky2TwelfthsSharp",
                    "accidentalWyschnegradsky3TwelfthsSharp",
                    "accidentalWyschnegradsky4TwelfthsSharp",
                    "accidentalWyschnegradsky5TwelfthsSharp",
                    "accidentalWyschnegradsky6TwelfthsSharp",
                    "accidentalWyschnegradsky7TwelfthsSharp",
                    "accidentalWyschnegradsky8TwelfthsSharp",
                    "accidentalWyschnegradsky9TwelfthsSharp",
                    "accidentalWyschnegradsky10TwelfthsSharp",
                    "accidentalWyschnegradsky11TwelfthsSharp",
                    "accidentalWyschnegradsky1TwelfthsFlat",
                    "accidentalWyschnegradsky2TwelfthsFlat",
                    "accidentalWyschnegradsky3TwelfthsFlat",
                    "accidentalWyschnegradsky4TwelfthsFlat",
                    "accidentalWyschnegradsky5TwelfthsFlat",
                    "accidentalWyschnegradsky6TwelfthsFlat",
                    "accidentalWyschnegradsky7TwelfthsFlat",
                    "accidentalWyschnegradsky8TwelfthsFlat",
                    "accidentalWyschnegradsky9TwelfthsFlat",
                    "accidentalWyschnegradsky10TwelfthsFlat",
                    "accidentalWyschnegradsky11TwelfthsFlat"
                ],
                "accidentalsAEU": [
                    "accidentalBuyukMucennebFlat",
                    "accidentalKucukMucennebFlat",
                    "accidentalBakiyeFlat",
                    "accidentalKomaFlat",
                    "accidentalKomaSharp",
                    "accidentalBakiyeSharp",
                    "accidentalKucukMucennebSharp",
                    "accidentalBuyukMucennebSharp"
                ],
                "accidentalsArabic": [
                    "accidentalDoubleFlatArabic",
                    "accidentalThreeQuarterTonesFlatArabic",
                    "accidentalFlatArabic",
                    "accidentalQuarterToneFlatArabic",
                    "accidentalNaturalArabic",
                    "accidentalQuarterToneSharpArabic",
                    "accidentalSharpArabic",
                    "accidentalThreeQuarterTonesSharpArabic",
                    "accidentalDoubleSharpArabic"
                ],
                "accidentalsHelmholtzEllis": [
                    "accidentalDoubleFlatOneArrowDown",
                    "accidentalFlatOneArrowDown",
                    "accidentalNaturalOneArrowDown",
                    "accidentalSharpOneArrowDown",
                    "accidentalDoubleSharpOneArrowDown",
                    "accidentalDoubleFlatOneArrowUp",
                    "accidentalFlatOneArrowUp",
                    "accidentalNaturalOneArrowUp",
                    "accidentalSharpOneArrowUp",
                    "accidentalDoubleSharpOneArrowUp",
                    "accidentalDoubleFlatTwoArrowsDown",
                    "accidentalFlatTwoArrowsDown",
                    "accidentalNaturalTwoArrowsDown",
                    "accidentalSharpTwoArrowsDown",
                    "accidentalDoubleSharpTwoArrowsDown",
                    "accidentalDoubleFlatTwoArrowsUp",
                    "accidentalFlatTwoArrowsUp",
                    "accidentalNaturalTwoArrowsUp",
                    "accidentalSharpTwoArrowsUp",
                    "accidentalDoubleSharpTwoArrowsUp",
                    "accidentalDoubleFlatThreeArrowsDown",
                    "accidentalFlatThreeArrowsDown",
                    "accidentalNaturalThreeArrowsDown",
                    "accidentalSharpThreeArrowsDown",
                    "accidentalDoubleSharpThreeArrowsDown",
                    "accidentalDoubleFlatThreeArrowsUp",
                    "accidentalFlatThreeArrowsUp",
                    "accidentalNaturalThreeArrowsUp",
                    "accidentalSharpThreeArrowsUp",
                    "accidentalDoubleSharpThreeArrowsUp",
                    "accidentalLowerOneSeptimalComma",
                    "accidentalRaiseOneSeptimalComma",
                    "accidentalLowerTwoSeptimalCommas",
                    "accidentalRaiseTwoSeptimalCommas",
                    "accidentalLowerOneUndecimalQuartertone",
                    "accidentalRaiseOneUndecimalQuartertone",
                    "accidentalLowerOneTridecimalQuartertone",
                    "accidentalRaiseOneTridecimalQuartertone",
                    "accidentalCombiningLower17Schisma",
                    "accidentalCombiningRaise17Schisma",
                    "accidentalCombiningLower19Schisma",
                    "accidentalCombiningRaise19Schisma",
                    "accidentalCombiningLower23Limit29LimitComma",
                    "accidentalCombiningRaise23Limit29LimitComma",
                    "accidentalCombiningLower31Schisma",
                    "accidentalCombiningRaise31Schisma",
                    "accidentalCombiningOpenCurlyBrace",
                    "accidentalCombiningCloseCurlyBrace",
                    "accidentalDoubleFlatEqualTempered",
                    "accidentalFlatEqualTempered",
                    "accidentalNaturalEqualTempered",
                    "accidentalSharpEqualTempered",
                    "accidentalDoubleSharpEqualTempered",
                    "accidentalQuarterFlatEqualTempered",
                    "accidentalQuarterSharpEqualTempered",
                    "accidentalCombiningLower53LimitComma",
                    "accidentalCombiningRaise53LimitComma",
                    "accidentalEnharmonicTilde",
                    "accidentalEnharmonicAlmostEqualTo",
                    "accidentalEnharmonicEquals"
                ],
                "accidentalsJohnston": [
                    "accidentalJohnstonPlus",
                    "accidentalJohnstonMinus",
                    "accidentalJohnstonEl",
                    "accidentalJohnstonSeven",
                    "accidentalJohnstonUp",
                    "accidentalJohnstonDown",
                    "accidentalJohnston13",
                    "accidentalJohnston31"
                ],
                "accidentalsPersian": [
                    "accidentalKoron",
                    "accidentalSori"
                ],
                "accidentalsSagittalAthenian": [
                    "accSagittal7v11KleismaUp",
                    "accSagittal7v11KleismaDown",
                    "accSagittal17CommaUp",
                    "accSagittal17CommaDown",
                    "accSagittal55CommaUp",
                    "accSagittal55CommaDown",
                    "accSagittal7v11CommaUp",
                    "accSagittal7v11CommaDown",
                    "accSagittal5v11SmallDiesisUp",
                    "accSagittal5v11SmallDiesisDown",
                    "accSagittalSharp5v11SDown",
                    "accSagittalFlat5v11SUp",
                    "accSagittalSharp7v11CDown",
                    "accSagittalFlat7v11CUp",
                    "accSagittalSharp55CDown",
                    "accSagittalFlat55CUp",
                    "accSagittalSharp17CDown",
                    "accSagittalFlat17CUp",
                    "accSagittalSharp7v11kDown",
                    "accSagittalFlat7v11kUp",
                    "accSagittalSharp7v11kUp",
                    "accSagittalFlat7v11kDown",
                    "accSagittalSharp17CUp",
                    "accSagittalFlat17CDown",
                    "accSagittalSharp55CUp",
                    "accSagittalFlat55CDown",
                    "accSagittalSharp7v11CUp",
                    "accSagittalFlat7v11CDown",
                    "accSagittalSharp5v11SUp",
                    "accSagittalFlat5v11SDown",
                    "accSagittalDoubleSharp5v11SDown",
                    "accSagittalDoubleFlat5v11SUp",
                    "accSagittalDoubleSharp7v11CDown",
                    "accSagittalDoubleFlat7v11CUp",
                    "accSagittalDoubleSharp55CDown",
                    "accSagittalDoubleFlat55CUp",
                    "accSagittalDoubleSharp17CDown",
                    "accSagittalDoubleFlat17CUp",
                    "accSagittalDoubleSharp7v11kDown",
                    "accSagittalDoubleFlat7v11kUp"
                ],
                "accidentalsSagittalDiacritics": [
                    "accSagittalShaftUp",
                    "accSagittalShaftDown",
                    "accSagittalAcute",
                    "accSagittalGrave"
                ],
                "accidentalsSagittalMixed": [
                    "accidentalFlat",
                    "accidentalNatural",
                    "accidentalSharp",
                    "accidentalDoubleFlat",
                    "accSagittal5v7KleismaUp",
                    "accSagittal5v7KleismaDown",
                    "accSagittal5CommaUp",
                    "accSagittal5CommaDown",
                    "accSagittal7CommaUp",
                    "accSagittal7CommaDown",
                    "accSagittal25SmallDiesisUp",
                    "accSagittal25SmallDiesisDown",
                    "accSagittal35MediumDiesisUp",
                    "accSagittal35MediumDiesisDown",
                    "accSagittal11MediumDiesisUp",
                    "accSagittal11MediumDiesisDown",
                    "accSagittal11LargeDiesisUp",
                    "accSagittal11LargeDiesisDown",
                    "accSagittal35LargeDiesisUp",
                    "accSagittal35LargeDiesisDown",
                    "accidentalLargeDoubleSharp"
                ],
                "accidentalsSagittalPromethean": [
                    "accSagittal19SchismaUp",
                    "accSagittal19SchismaDown",
                    "accSagittal17KleismaUp",
                    "accSagittal17KleismaDown",
                    "accSagittal143CommaUp",
                    "accSagittal143CommaDown",
                    "accSagittal11v49CommaUp",
                    "accSagittal11v49CommaDown",
                    "accSagittal19CommaUp",
                    "accSagittal19CommaDown",
                    "accSagittal7v19CommaUp",
                    "accSagittal7v19CommaDown",
                    "accSagittal49SmallDiesisUp",
                    "accSagittal49SmallDiesisDown",
                    "accSagittal23SmallDiesisUp",
                    "accSagittal23SmallDiesisDown",
                    "accSagittal5v13MediumDiesisUp",
                    "accSagittal5v13MediumDiesisDown",
                    "accSagittal11v19MediumDiesisUp",
                    "accSagittal11v19MediumDiesisDown",
                    "accSagittal49MediumDiesisUp",
                    "accSagittal49MediumDiesisDown",
                    "accSagittal5v49MediumDiesisUp",
                    "accSagittal5v49MediumDiesisDown",
                    "accSagittal49LargeDiesisUp",
                    "accSagittal49LargeDiesisDown",
                    "accSagittal11v19LargeDiesisUp",
                    "accSagittal11v19LargeDiesisDown",
                    "accSagittal5v13LargeDiesisUp",
                    "accSagittal5v13LargeDiesisDown",
                    "accSagittalSharp23SDown",
                    "accSagittalFlat23SUp",
                    "accSagittalSharp49SDown",
                    "accSagittalFlat49SUp",
                    "accSagittalSharp7v19CDown",
                    "accSagittalFlat7v19CUp",
                    "accSagittalSharp19CDown",
                    "accSagittalFlat19CUp",
                    "accSagittalSharp11v49CDown",
                    "accSagittalFlat11v49CUp",
                    "accSagittalSharp143CDown",
                    "accSagittalFlat143CUp",
                    "accSagittalSharp17kDown",
                    "accSagittalFlat17kUp",
                    "accSagittalSharp19sDown",
                    "accSagittalFlat19sUp",
                    "accSagittalSharp19sUp",
                    "accSagittalFlat19sDown",
                    "accSagittalSharp17kUp",
                    "accSagittalFlat17kDown",
                    "accSagittalSharp143CUp",
                    "accSagittalFlat143CDown",
                    "accSagittalSharp11v49CUp",
                    "accSagittalFlat11v49CDown",
                    "accSagittalSharp19CUp",
                    "accSagittalFlat19CDown",
                    "accSagittalSharp7v19CUp",
                    "accSagittalFlat7v19CDown",
                    "accSagittalSharp49SUp",
                    "accSagittalFlat49SDown",
                    "accSagittalSharp23SUp",
                    "accSagittalFlat23SDown",
                    "accSagittalSharp5v13MUp",
                    "accSagittalFlat5v13MDown",
                    "accSagittalSharp11v19MUp",
                    "accSagittalFlat11v19MDown",
                    "accSagittalSharp49MUp",
                    "accSagittalFlat49MDown",
                    "accSagittalSharp5v49MUp",
                    "accSagittalFlat5v49MDown",
                    "accSagittalSharp49LUp",
                    "accSagittalFlat49LDown",
                    "accSagittalSharp11v19LUp",
                    "accSagittalFlat11v19LDown",
                    "accSagittalSharp5v13LUp",
                    "accSagittalFlat5v13LDown",
                    "accSagittalUnused3",
                    "accSagittalUnused4",
                    "accSagittalDoubleSharp23SDown",
                    "accSagittalDoubleFlat23SUp",
                    "accSagittalDoubleSharp49SDown",
                    "accSagittalDoubleFlat49SUp",
                    "accSagittalDoubleSharp7v19CDown",
                    "accSagittalDoubleFlat7v19CUp",
                    "accSagittalDoubleSharp19CDown",
                    "accSagittalDoubleFlat19CUp",
                    "accSagittalDoubleSharp11v49CDown",
                    "accSagittalDoubleFlat11v49CUp",
                    "accSagittalDoubleSharp143CDown",
                    "accSagittalDoubleFlat143CUp",
                    "accSagittalDoubleSharp17kDown",
                    "accSagittalDoubleFlat17kUp",
                    "accSagittalDoubleSharp19sDown",
                    "accSagittalDoubleFlat19sUp"
                ],
                "accidentalsSagittalPure": [
                    "accidentalNatural",
                    "accSagittalSharp25SDown",
                    "accSagittalFlat25SUp",
                    "accSagittalSharp7CDown",
                    "accSagittalFlat7CUp",
                    "accSagittalSharp5CDown",
                    "accSagittalFlat5CUp",
                    "accSagittalSharp5v7kDown",
                    "accSagittalFlat5v7kUp",
                    "accSagittalSharp",
                    "accSagittalFlat",
                    "accSagittalUnused1",
                    "accSagittalUnused2",
                    "accSagittalSharp5v7kUp",
                    "accSagittalFlat5v7kDown",
                    "accSagittalSharp5CUp",
                    "accSagittalFlat5CDown",
                    "accSagittalSharp7CUp",
                    "accSagittalFlat7CDown",
                    "accSagittalSharp25SUp",
                    "accSagittalFlat25SDown",
                    "accSagittalSharp35MUp",
                    "accSagittalFlat35MDown",
                    "accSagittalSharp11MUp",
                    "accSagittalFlat11MDown",
                    "accSagittalSharp11LUp",
                    "accSagittalFlat11LDown",
                    "accSagittalSharp35LUp",
                    "accSagittalFlat35LDown",
                    "accSagittalDoubleSharp25SDown",
                    "accSagittalDoubleFlat25SUp",
                    "accSagittalDoubleSharp7CDown",
                    "accSagittalDoubleFlat7CUp",
                    "accSagittalDoubleSharp5CDown",
                    "accSagittalDoubleFlat5CUp",
                    "accSagittalDoubleSharp5v7kDown",
                    "accSagittalDoubleFlat5v7kUp",
                    "accSagittalDoubleSharp",
                    "accSagittalDoubleFlat"
                ],
                "accidentalsSagittalTrojan": [
                    "accSagittal23CommaUp",
                    "accSagittal23CommaDown",
                    "accSagittal5v19CommaUp",
                    "accSagittal5v19CommaDown",
                    "accSagittal5v23SmallDiesisUp",
                    "accSagittal5v23SmallDiesisDown",
                    "accSagittalSharp5v23SDown",
                    "accSagittalFlat5v23SUp",
                    "accSagittalSharp5v19CDown",
                    "accSagittalFlat5v19CUp",
                    "accSagittalSharp23CDown",
                    "accSagittalFlat23CUp",
                    "accSagittalSharp23CUp",
                    "accSagittalFlat23CDown",
                    "accSagittalSharp5v19CUp",
                    "accSagittalFlat5v19CDown",
                    "accSagittalSharp5v23SUp",
                    "accSagittalFlat5v23SDown",
                    "accSagittalDoubleSharp5v23SDown",
                    "accSagittalDoubleFlat5v23SUp",
                    "accSagittalDoubleSharp5v19CDown",
                    "accSagittalDoubleFlat5v19CUp",
                    "accSagittalDoubleSharp23CDown",
                    "accSagittalDoubleFlat23CUp"
                ],
                "accidentalsSims": [
                    "accidentalSims12Down",
                    "accidentalSims6Down",
                    "accidentalSims4Down",
                    "accidentalSims12Up",
                    "accidentalSims6Up",
                    "accidentalSims4Up"
                ],
                "accidentalsStandard": [
                    "accidentalFlat",
                    "accidentalNatural",
                    "accidentalSharp",
                    "accidentalDoubleSharp",
                    "accidentalDoubleFlat",
                    "accidentalTripleSharp",
                    "accidentalTripleFlat",
                    "accidentalNaturalFlat",
                    "accidentalNaturalSharp",
                    "accidentalSharpSharp",
                    "accidentalParensLeft",
                    "accidentalParensRight"
                ],
                "accidentalsSteinZimmermann": [
                    "accidentalQuarterToneFlatStein",
                    "accidentalThreeQuarterTonesFlatZimmermann",
                    "accidentalQuarterToneSharpStein",
                    "accidentalThreeQuarterTonesSharpStein",
                    "accidentalNarrowReversedFlat",
                    "accidentalNarrowReversedFlatAndFlat",
                    "accidentalReversedFlatArrowUp",
                    "accidentalReversedFlatArrowDown",
                    "accidentalFilledReversedFlatArrowUp",
                    "accidentalFilledReversedFlatArrowDown",
                    "accidentalReversedFlatAndFlatArrowUp",
                    "accidentalReversedFlatAndFlatArrowDown",
                    "accidentalFilledReversedFlatAndFlat",
                    "accidentalFilledReversedFlatAndFlatArrowUp",
                    "accidentalFilledReversedFlatAndFlatArrowDown",
                    "accidentalHalfSharpArrowUp",
                    "accidentalHalfSharpArrowDown",
                    "accidentalOneAndAHalfSharpsArrowUp",
                    "accidentalOneAndAHalfSharpsArrowDown"
                ],
                "accidentalsStockhausen": [
                    "accidentalRaisedStockhausen",
                    "accidentalLoweredStockhausen",
                    "accidentalFlatRaisedStockhausen",
                    "accidentalFlatLoweredStockhausen",
                    "accidentalNaturalRaisedStockhausen",
                    "accidentalNaturalLoweredStockhausen",
                    "accidentalSharpRaisedStockhausen",
                    "accidentalSharpLoweredStockhausen",
                    "accidentalOneQuarterToneSharpStockhausen",
                    "accidentalOneQuarterToneFlatStockhausen",
                    "accidentalThreeQuarterTonesSharpStockhausen",
                    "accidentalFlatRepeatedSpaceStockhausen",
                    "accidentalFlatRepeatedLineStockhausen",
                    "accidentalSharpRepeatedSpaceStockhausen",
                    "accidentalSharpRepeatedLineStockhausen"
                ],
                "articulations": [
                    "articAccentAbove",
                    "articAccentBelow",
                    "articStaccatoAbove",
                    "articStaccatoBelow",
                    "articTenutoAbove",
                    "articTenutoBelow",
                    "articStaccatissimoAbove",
                    "articStaccatissimoBelow",
                    "articStaccatissimoWedgeAbove",
                    "articStaccatissimoWedgeBelow",
                    "articStaccatissimoStrokeAbove",
                    "articStaccatissimoStrokeBelow",
                    "articMarcatoAbove",
                    "articMarcatoBelow",
                    "articMarcatoStaccatoAbove",
                    "articMarcatoStaccatoBelow",
                    "articAccentStaccatoAbove",
                    "articAccentStaccatoBelow",
                    "articTenutoStaccatoAbove",
                    "articTenutoStaccatoBelow",
                    "articTenutoAccentAbove",
                    "articTenutoAccentBelow",
                    "articStressAbove",
                    "articStressBelow",
                    "articUnstressAbove",
                    "articUnstressBelow",
                    "articLaissezVibrerAbove",
                    "articLaissezVibrerBelow",
                    "articSoftAccentAbove",
                    "articSoftAccentBelow",
                    "articSoftAccentStaccatoAbove",
                    "articSoftAccentStaccatoBelow",
                    "articSoftAccentTenutoAbove",
                    "articSoftAccentTenutoBelow",
                    "articSoftAccentTenutoStaccatoAbove",
                    "articSoftAccentTenutoStaccatoBelow"
                ],
                "articulationsAbove": [
                    "articAccentAbove",
                    "articStaccatoAbove",
                    "articTenutoAbove",
                    "articStaccatissimoAbove",
                    "articStaccatissimoWedgeAbove",
                    "articStaccatissimoStrokeAbove",
                    "articMarcatoAbove",
                    "articMarcatoStaccatoAbove",
                    "articAccentStaccatoAbove",
                    "articTenutoStaccatoAbove",
                    "articTenutoAccentAbove",
                    "articStressAbove",
                    "articUnstressAbove",
                    "articLaissezVibrerAbove",
                    "articSoftAccentAbove",
                    "articSoftAccentStaccatoAbove",
                    "articSoftAccentTenutoAbove",
                    "articSoftAccentTenutoStaccatoAbove"
                ],
                "articulationsBelow": [
                    "articAccentBelow",
                    "articStaccatoBelow",
                    "articTenutoBelow",
                    "articStaccatissimoBelow",
                    "articStaccatissimoWedgeBelow",
                    "articStaccatissimoStrokeBelow",
                    "articMarcatoBelow",
                    "articMarcatoStaccatoBelow",
                    "articAccentStaccatoBelow",
                    "articTenutoStaccatoBelow",
                    "articTenutoAccentBelow",
                    "articStressBelow",
                    "articUnstressBelow",
                    "articLaissezVibrerBelow",
                    "articSoftAccentBelow",
                    "articSoftAccentStaccatoBelow",
                    "articSoftAccentTenutoBelow",
                    "articSoftAccentTenutoStaccatoBelow"
                ],
                "clefs": [
                    "gClef",
                    "gClef15mb",
                    "gClef8vb",
                    "gClef8va",
                    "gClef15ma",
                    "gClef8vbOld",
                    "gClef8vbCClef",
                    "gClef8vbParens",
                    "gClefLigatedNumberBelow",
                    "gClefLigatedNumberAbove",
                    "gClefArrowUp",
                    "gClefArrowDown",
                    "cClef",
                    "cClef8vb",
                    "cClefArrowUp",
                    "cClefArrowDown",
                    "cClefSquare",
                    "cClefCombining",
                    "fClef",
                    "fClef15mb",
                    "fClef8vb",
                    "fClef8va",
                    "fClef15ma",
                    "fClefArrowUp",
                    "fClefArrowDown",
                    "unpitchedPercussionClef1",
                    "unpitchedPercussionClef2",
                    "semipitchedPercussionClef1",
                    "semipitchedPercussionClef2",
                    "6stringTabClef",
                    "4stringTabClef",
                    "schaefferClef",
                    "schaefferPreviousClef",
                    "schaefferGClefToFClef",
                    "schaefferFClefToGClef",
                    "gClefReversed",
                    "gClefTurned",
                    "cClefReversed",
                    "fClefReversed",
                    "fClefTurned",
                    "bridgeClef",
                    "accdnDiatonicClef",
                    "gClefChange",
                    "cClefChange",
                    "fClefChange",
                    "clef8",
                    "clef15",
                    "clefChangeCombining"
                ],
                "clefsC": [
                    "cClef",
                    "cClef8vb",
                    "cClefArrowUp",
                    "cClefArrowDown",
                    "cClefSquare",
                    "cClefCombining",
                    "cClefReversed"
                ],
                "clefsF": [
                    "fClef",
                    "fClef15mb",
                    "fClef8vb",
                    "fClef8va",
                    "fClef15ma",
                    "fClefArrowUp",
                    "fClefArrowDown",
                    "fClefReversed"
                ],
                "clefsG": [
                    "gClef",
                    "gClef15mb",
                    "gClef8vb",
                    "gClef8va",
                    "gClef15ma",
                    "gClef8vbOld",
                    "gClef8vbCClef",
                    "gClef8vbParens",
                    "gClefLigatedNumberBelow",
                    "gClefLigatedNumberAbove",
                    "gClefArrowUp",
                    "gClefArrowDown",
                    "gClefReversed"
                ],
                "combiningStaffPositions": [
                    "legerLine",
                    "legerLineWide",
                    "legerLineNarrow",
                    "gClefTurned",
                    "fClefTurned",
                    "noteheadDoubleWhole",
                    "noteheadDoubleWholeSquare",
                    "noteheadWhole",
                    "noteheadHalf",
                    "noteheadBlack",
                    "noteheadNull",
                    "noteheadXDoubleWhole",
                    "noteheadXWhole",
                    "noteheadXHalf",
                    "noteheadXBlack",
                    "noteheadXOrnate",
                    "noteheadPlusDoubleWhole",
                    "noteheadPlusWhole",
                    "noteheadPlusHalf",
                    "noteheadPlusBlack",
                    "noteheadCircleXDoubleWhole",
                    "noteheadCircleXWhole",
                    "noteheadCircleXHalf",
                    "noteheadCircleX",
                    "noteheadDoubleWholeWithX",
                    "noteheadWholeWithX",
                    "noteheadHalfWithX",
                    "noteheadVoidWithX",
                    "noteheadSquareWhite",
                    "noteheadSquareBlack",
                    "noteheadTriangleUpDoubleWhole",
                    "noteheadTriangleUpWhole",
                    "noteheadTriangleUpHalf",
                    "noteheadTriangleUpWhite",
                    "noteheadTriangleUpBlack",
                    "noteheadTriangleLeftWhite",
                    "noteheadTriangleLeftBlack",
                    "noteheadTriangleRightWhite",
                    "noteheadTriangleRightBlack",
                    "noteheadTriangleDownDoubleWhole",
                    "noteheadTriangleDownWhole",
                    "noteheadTriangleDownHalf",
                    "noteheadTriangleDownWhite",
                    "noteheadTriangleDownBlack",
                    "noteheadTriangleUpRightWhite",
                    "noteheadTriangleUpRightBlack",
                    "noteheadMoonWhite",
                    "noteheadMoonBlack",
                    "noteheadTriangleRoundDownWhite",
                    "noteheadTriangleRoundDownBlack",
                    "noteheadParenthesis",
                    "noteheadSlashedBlack1",
                    "noteheadSlashedBlack2",
                    "noteheadSlashedHalf1",
                    "noteheadSlashedHalf2",
                    "noteheadSlashedWhole1",
                    "noteheadSlashedWhole2",
                    "noteheadSlashedDoubleWhole1",
                    "noteheadSlashedDoubleWhole2",
                    "noteheadDiamondDoubleWhole",
                    "noteheadDiamondWhole",
                    "noteheadDiamondHalf",
                    "noteheadDiamondBlack",
                    "noteheadDiamondWhite",
                    "noteheadDiamondWhiteWide",
                    "noteheadDiamondDoubleWholeOld",
                    "noteheadDiamondWholeOld",
                    "noteheadDiamondHalfOld",
                    "noteheadDiamondBlackOld",
                    "noteheadDiamondHalfFilled",
                    "noteheadCircledBlack",
                    "noteheadCircledHalf",
                    "noteheadCircledWhole",
                    "noteheadCircledDoubleWhole",
                    "noteheadLargeArrowUpDoubleWhole",
                    "noteheadLargeArrowUpWhole",
                    "noteheadLargeArrowUpHalf",
                    "noteheadLargeArrowUpBlack",
                    "noteheadLargeArrowDownDoubleWhole",
                    "noteheadLargeArrowDownWhole",
                    "noteheadLargeArrowDownHalf",
                    "noteheadLargeArrowDownBlack",
                    "noteheadParenthesisLeft",
                    "noteheadParenthesisRight",
                    "noteheadCircleSlash",
                    "noteheadHeavyX",
                    "noteheadHeavyXHat",
                    "noteheadWholeFilled",
                    "noteheadHalfFilled",
                    "noteheadDiamondOpen",
                    "noteheadSlashVerticalEnds",
                    "noteheadSlashHorizontalEnds",
                    "noteheadSlashWhiteWhole",
                    "noteheadSlashWhiteHalf",
                    "noteheadSlashDiamondWhite",
                    "noteheadSlashVerticalEndsSmall",
                    "noteheadSlashX",
                    "noteheadSlashVerticalEndsMuted",
                    "noteheadSlashHorizontalEndsMuted",
                    "noteheadSlashWhiteMuted",
                    "noteheadRoundBlackLarge",
                    "noteheadRoundWhiteLarge",
                    "noteheadRoundWhiteWithDotLarge",
                    "noteheadRoundBlack",
                    "noteheadRoundWhite",
                    "noteheadRoundWhiteWithDot",
                    "noteheadRoundBlackSlashedLarge",
                    "noteheadRoundWhiteSlashedLarge",
                    "noteheadRoundBlackSlashed",
                    "noteheadRoundWhiteSlashed",
                    "noteheadSquareBlackLarge",
                    "noteheadSquareBlackWhite",
                    "noteheadClusterSquareWhite",
                    "noteheadClusterSquareBlack",
                    "noteheadClusterRoundWhite",
                    "noteheadClusterRoundBlack",
                    "noteheadClusterDoubleWhole2nd",
                    "noteheadClusterWhole2nd",
                    "noteheadClusterHalf2nd",
                    "noteheadClusterQuarter2nd",
                    "noteheadClusterDoubleWhole3rd",
                    "noteheadClusterWhole3rd",
                    "noteheadClusterHalf3rd",
                    "noteheadClusterQuarter3rd",
                    "noteheadClusterDoubleWholeTop",
                    "noteheadClusterDoubleWholeMiddle",
                    "noteheadClusterDoubleWholeBottom",
                    "noteheadClusterWholeTop",
                    "noteheadClusterWholeMiddle",
                    "noteheadClusterWholeBottom",
                    "noteheadClusterHalfTop",
                    "noteheadClusterHalfMiddle",
                    "noteheadClusterHalfBottom",
                    "noteheadClusterQuarterTop",
                    "noteheadClusterQuarterMiddle",
                    "noteheadClusterQuarterBottom",
                    "noteheadDiamondClusterWhite2nd",
                    "noteheadDiamondClusterBlack2nd",
                    "noteheadDiamondClusterWhite3rd",
                    "noteheadDiamondClusterBlack3rd",
                    "noteheadDiamondClusterWhiteTop",
                    "noteheadDiamondClusterWhiteMiddle",
                    "noteheadDiamondClusterWhiteBottom",
                    "noteheadDiamondClusterBlackTop",
                    "noteheadDiamondClusterBlackMiddle",
                    "noteheadDiamondClusterBlackBottom",
                    "noteheadRectangularClusterBlackTop",
                    "noteheadRectangularClusterBlackMiddle",
                    "noteheadRectangularClusterBlackBottom",
                    "noteheadRectangularClusterWhiteTop",
                    "noteheadRectangularClusterWhiteMiddle",
                    "noteheadRectangularClusterWhiteBottom",
                    "noteDoWhole",
                    "noteReWhole",
                    "noteMiWhole",
                    "noteFaWhole",
                    "noteSoWhole",
                    "noteLaWhole",
                    "noteTiWhole",
                    "noteSiWhole",
                    "noteDoHalf",
                    "noteReHalf",
                    "noteMiHalf",
                    "noteFaHalf",
                    "noteSoHalf",
                    "noteLaHalf",
                    "noteTiHalf",
                    "noteSiHalf",
                    "noteDoBlack",
                    "noteReBlack",
                    "noteMiBlack",
                    "noteFaBlack",
                    "noteSoBlack",
                    "noteLaBlack",
                    "noteTiBlack",
                    "noteSiBlack",
                    "noteAFlatWhole",
                    "noteAWhole",
                    "noteASharpWhole",
                    "noteBFlatWhole",
                    "noteBWhole",
                    "noteBSharpWhole",
                    "noteCFlatWhole",
                    "noteCWhole",
                    "noteCSharpWhole",
                    "noteDFlatWhole",
                    "noteDWhole",
                    "noteDSharpWhole",
                    "noteEFlatWhole",
                    "noteEWhole",
                    "noteESharpWhole",
                    "noteFFlatWhole",
                    "noteFWhole",
                    "noteFSharpWhole",
                    "noteGFlatWhole",
                    "noteGWhole",
                    "noteGSharpWhole",
                    "noteHWhole",
                    "noteHSharpWhole",
                    "noteAFlatHalf",
                    "noteAHalf",
                    "noteASharpHalf",
                    "noteBFlatHalf",
                    "noteBHalf",
                    "noteBSharpHalf",
                    "noteCFlatHalf",
                    "noteCHalf",
                    "noteCSharpHalf",
                    "noteDFlatHalf",
                    "noteDHalf",
                    "noteDSharpHalf",
                    "noteEFlatHalf",
                    "noteEHalf",
                    "noteESharpHalf",
                    "noteFFlatHalf",
                    "noteFHalf",
                    "noteFSharpHalf",
                    "noteGFlatHalf",
                    "noteGHalf",
                    "noteGSharpHalf",
                    "noteHHalf",
                    "noteHSharpHalf",
                    "noteAFlatBlack",
                    "noteABlack",
                    "noteASharpBlack",
                    "noteBFlatBlack",
                    "noteBBlack",
                    "noteBSharpBlack",
                    "noteCFlatBlack",
                    "noteCBlack",
                    "noteCSharpBlack",
                    "noteDFlatBlack",
                    "noteDBlack",
                    "noteDSharpBlack",
                    "noteEFlatBlack",
                    "noteEBlack",
                    "noteESharpBlack",
                    "noteFFlatBlack",
                    "noteFBlack",
                    "noteFSharpBlack",
                    "noteGFlatBlack",
                    "noteGBlack",
                    "noteGSharpBlack",
                    "noteHBlack",
                    "noteHSharpBlack",
                    "noteEmptyWhole",
                    "noteEmptyHalf",
                    "noteEmptyBlack",
                    "noteShapeRoundWhite",
                    "noteShapeRoundBlack",
                    "noteShapeSquareWhite",
                    "noteShapeSquareBlack",
                    "noteShapeTriangleRightWhite",
                    "noteShapeTriangleRightBlack",
                    "noteShapeTriangleLeftWhite",
                    "noteShapeTriangleLeftBlack",
                    "noteShapeDiamondWhite",
                    "noteShapeDiamondBlack",
                    "noteShapeTriangleUpWhite",
                    "noteShapeTriangleUpBlack",
                    "noteShapeMoonWhite",
                    "noteShapeMoonBlack",
                    "noteShapeTriangleRoundWhite",
                    "noteShapeTriangleRoundBlack",
                    "noteDoubleWhole",
                    "noteDoubleWholeSquare",
                    "noteWhole",
                    "noteHalfUp",
                    "noteHalfDown",
                    "noteQuarterUp",
                    "noteQuarterDown",
                    "note8thUp",
                    "note8thDown",
                    "note16thUp",
                    "note16thDown",
                    "note32ndUp",
                    "note32ndDown",
                    "note64thUp",
                    "note64thDown",
                    "note128thUp",
                    "note128thDown",
                    "note256thUp",
                    "note256thDown",
                    "note512thUp",
                    "note512thDown",
                    "note1024thUp",
                    "note1024thDown",
                    "augmentationDot",
                    "textBlackNoteShortStem",
                    "textBlackNoteLongStem",
                    "textBlackNoteFrac8thShortStem",
                    "textBlackNoteFrac8thLongStem",
                    "textBlackNoteFrac16thShortStem",
                    "textBlackNoteFrac16thLongStem",
                    "textBlackNoteFrac32ndLongStem",
                    "textCont8thBeamShortStem",
                    "textCont8thBeamLongStem",
                    "textCont16thBeamShortStem",
                    "textCont16thBeamLongStem",
                    "textCont32ndBeamLongStem",
                    "textAugmentationDot",
                    "textTie",
                    "textTupletBracketStartShortStem",
                    "textTuplet3ShortStem",
                    "textTupletBracketEndShortStem",
                    "textTupletBracketStartLongStem",
                    "textTuplet3LongStem",
                    "textTupletBracketEndLongStem",
                    "stem",
                    "stemSprechgesang",
                    "stemSwished",
                    "stemPendereckiTremolo",
                    "stemSulPonticello",
                    "stemBowOnBridge",
                    "stemBowOnTailpiece",
                    "stemBuzzRoll",
                    "stemDamp",
                    "stemVibratoPulse",
                    "stemMultiphonicsBlack",
                    "stemMultiphonicsWhite",
                    "stemMultiphonicsBlackWhite",
                    "stemSussurando",
                    "stemRimShot",
                    "stemHarpStringNoise",
                    "flag8thUp",
                    "flag8thDown",
                    "flag16thUp",
                    "flag16thDown",
                    "flag32ndUp",
                    "flag32ndDown",
                    "flag64thUp",
                    "flag64thDown",
                    "flag128thUp",
                    "flag128thDown",
                    "flag256thUp",
                    "flag256thDown",
                    "flag512thUp",
                    "flag512thDown",
                    "flag1024thUp",
                    "flag1024thDown",
                    "flagInternalUp",
                    "flagInternalDown",
                    "accidentalFlat",
                    "accidentalNatural",
                    "accidentalSharp",
                    "accidentalDoubleSharp",
                    "accidentalDoubleFlat",
                    "accidentalTripleSharp",
                    "accidentalTripleFlat",
                    "accidentalNaturalFlat",
                    "accidentalNaturalSharp",
                    "accidentalSharpSharp",
                    "accidentalParensLeft",
                    "accidentalParensRight",
                    "accidentalQuarterToneFlatArrowUp",
                    "accidentalThreeQuarterTonesFlatArrowDown",
                    "accidentalQuarterToneSharpNaturalArrowUp",
                    "accidentalQuarterToneFlatNaturalArrowDown",
                    "accidentalThreeQuarterTonesSharpArrowUp",
                    "accidentalQuarterToneSharpArrowDown",
                    "accidentalFiveQuarterTonesSharpArrowUp",
                    "accidentalThreeQuarterTonesSharpArrowDown",
                    "accidentalThreeQuarterTonesFlatArrowUp",
                    "accidentalFiveQuarterTonesFlatArrowDown",
                    "accidentalArrowUp",
                    "accidentalArrowDown",
                    "accidentalQuarterToneFlatStein",
                    "accidentalThreeQuarterTonesFlatZimmermann",
                    "accidentalQuarterToneSharpStein",
                    "accidentalThreeQuarterTonesSharpStein",
                    "accidentalNarrowReversedFlat",
                    "accidentalNarrowReversedFlatAndFlat",
                    "accidentalReversedFlatArrowUp",
                    "accidentalReversedFlatArrowDown",
                    "accidentalFilledReversedFlatArrowUp",
                    "accidentalFilledReversedFlatArrowDown",
                    "accidentalReversedFlatAndFlatArrowUp",
                    "accidentalReversedFlatAndFlatArrowDown",
                    "accidentalFilledReversedFlatAndFlat",
                    "accidentalFilledReversedFlatAndFlatArrowUp",
                    "accidentalFilledReversedFlatAndFlatArrowDown",
                    "accidentalHalfSharpArrowUp",
                    "accidentalHalfSharpArrowDown",
                    "accidentalOneAndAHalfSharpsArrowUp",
                    "accidentalOneAndAHalfSharpsArrowDown",
                    "accidentalSims12Down",
                    "accidentalSims6Down",
                    "accidentalSims4Down",
                    "accidentalSims12Up",
                    "accidentalSims6Up",
                    "accidentalSims4Up",
                    "accidentalJohnstonPlus",
                    "accidentalJohnstonMinus",
                    "accidentalJohnstonEl",
                    "accidentalJohnstonSeven",
                    "accidentalJohnstonUp",
                    "accidentalJohnstonDown",
                    "accidentalJohnston13",
                    "accidentalJohnston31",
                    "accidentalDoubleFlatOneArrowDown",
                    "accidentalFlatOneArrowDown",
                    "accidentalNaturalOneArrowDown",
                    "accidentalSharpOneArrowDown",
                    "accidentalDoubleSharpOneArrowDown",
                    "accidentalDoubleFlatOneArrowUp",
                    "accidentalFlatOneArrowUp",
                    "accidentalNaturalOneArrowUp",
                    "accidentalSharpOneArrowUp",
                    "accidentalDoubleSharpOneArrowUp",
                    "accidentalDoubleFlatTwoArrowsDown",
                    "accidentalFlatTwoArrowsDown",
                    "accidentalNaturalTwoArrowsDown",
                    "accidentalSharpTwoArrowsDown",
                    "accidentalDoubleSharpTwoArrowsDown",
                    "accidentalDoubleFlatTwoArrowsUp",
                    "accidentalFlatTwoArrowsUp",
                    "accidentalNaturalTwoArrowsUp",
                    "accidentalSharpTwoArrowsUp",
                    "accidentalDoubleSharpTwoArrowsUp",
                    "accidentalDoubleFlatThreeArrowsDown",
                    "accidentalFlatThreeArrowsDown",
                    "accidentalNaturalThreeArrowsDown",
                    "accidentalSharpThreeArrowsDown",
                    "accidentalDoubleSharpThreeArrowsDown",
                    "accidentalDoubleFlatThreeArrowsUp",
                    "accidentalFlatThreeArrowsUp",
                    "accidentalNaturalThreeArrowsUp",
                    "accidentalSharpThreeArrowsUp",
                    "accidentalDoubleSharpThreeArrowsUp",
                    "accidentalLowerOneSeptimalComma",
                    "accidentalRaiseOneSeptimalComma",
                    "accidentalLowerTwoSeptimalCommas",
                    "accidentalRaiseTwoSeptimalCommas",
                    "accidentalLowerOneUndecimalQuartertone",
                    "accidentalRaiseOneUndecimalQuartertone",
                    "accidentalLowerOneTridecimalQuartertone",
                    "accidentalRaiseOneTridecimalQuartertone",
                    "accidentalCombiningLower17Schisma",
                    "accidentalCombiningRaise17Schisma",
                    "accidentalCombiningLower19Schisma",
                    "accidentalCombiningRaise19Schisma",
                    "accidentalCombiningLower23Limit29LimitComma",
                    "accidentalCombiningRaise23Limit29LimitComma",
                    "accidentalCombiningLower31Schisma",
                    "accidentalCombiningRaise31Schisma",
                    "accidentalCombiningOpenCurlyBrace",
                    "accidentalCombiningCloseCurlyBrace",
                    "accidentalDoubleFlatEqualTempered",
                    "accidentalFlatEqualTempered",
                    "accidentalNaturalEqualTempered",
                    "accidentalSharpEqualTempered",
                    "accidentalDoubleSharpEqualTempered",
                    "accSagittal5v7KleismaUp",
                    "accSagittal5v7KleismaDown",
                    "accSagittal5CommaUp",
                    "accSagittal5CommaDown",
                    "accSagittal7CommaUp",
                    "accSagittal7CommaDown",
                    "accSagittal25SmallDiesisUp",
                    "accSagittal25SmallDiesisDown",
                    "accSagittal35MediumDiesisUp",
                    "accSagittal35MediumDiesisDown",
                    "accSagittal11MediumDiesisUp",
                    "accSagittal11MediumDiesisDown",
                    "accSagittal11LargeDiesisUp",
                    "accSagittal11LargeDiesisDown",
                    "accSagittal35LargeDiesisUp",
                    "accSagittal35LargeDiesisDown",
                    "accSagittalSharp25SDown",
                    "accSagittalFlat25SUp",
                    "accSagittalSharp7CDown",
                    "accSagittalFlat7CUp",
                    "accSagittalSharp5CDown",
                    "accSagittalFlat5CUp",
                    "accSagittalSharp5v7kDown",
                    "accSagittalFlat5v7kUp",
                    "accSagittalSharp",
                    "accSagittalFlat",
                    "accSagittalUnused1",
                    "accSagittalUnused2",
                    "accSagittalSharp5v7kUp",
                    "accSagittalFlat5v7kDown",
                    "accSagittalSharp5CUp",
                    "accSagittalFlat5CDown",
                    "accSagittalSharp7CUp",
                    "accSagittalFlat7CDown",
                    "accSagittalSharp25SUp",
                    "accSagittalFlat25SDown",
                    "accSagittalSharp35MUp",
                    "accSagittalFlat35MDown",
                    "accSagittalSharp11MUp",
                    "accSagittalFlat11MDown",
                    "accSagittalSharp11LUp",
                    "accSagittalFlat11LDown",
                    "accSagittalSharp35LUp",
                    "accSagittalFlat35LDown",
                    "accSagittalDoubleSharp25SDown",
                    "accSagittalDoubleFlat25SUp",
                    "accSagittalDoubleSharp7CDown",
                    "accSagittalDoubleFlat7CUp",
                    "accSagittalDoubleSharp5CDown",
                    "accSagittalDoubleFlat5CUp",
                    "accSagittalDoubleSharp5v7kDown",
                    "accSagittalDoubleFlat5v7kUp",
                    "accSagittalDoubleSharp",
                    "accSagittalDoubleFlat",
                    "accSagittal7v11KleismaUp",
                    "accSagittal7v11KleismaDown",
                    "accSagittal17CommaUp",
                    "accSagittal17CommaDown",
                    "accSagittal55CommaUp",
                    "accSagittal55CommaDown",
                    "accSagittal7v11CommaUp",
                    "accSagittal7v11CommaDown",
                    "accSagittal5v11SmallDiesisUp",
                    "accSagittal5v11SmallDiesisDown",
                    "accSagittalSharp5v11SDown",
                    "accSagittalFlat5v11SUp",
                    "accSagittalSharp7v11CDown",
                    "accSagittalFlat7v11CUp",
                    "accSagittalSharp55CDown",
                    "accSagittalFlat55CUp",
                    "accSagittalSharp17CDown",
                    "accSagittalFlat17CUp",
                    "accSagittalSharp7v11kDown",
                    "accSagittalFlat7v11kUp",
                    "accSagittalSharp7v11kUp",
                    "accSagittalFlat7v11kDown",
                    "accSagittalSharp17CUp",
                    "accSagittalFlat17CDown",
                    "accSagittalSharp55CUp",
                    "accSagittalFlat55CDown",
                    "accSagittalSharp7v11CUp",
                    "accSagittalFlat7v11CDown",
                    "accSagittalSharp5v11SUp",
                    "accSagittalFlat5v11SDown",
                    "accSagittalDoubleSharp5v11SDown",
                    "accSagittalDoubleFlat5v11SUp",
                    "accSagittalDoubleSharp7v11CDown",
                    "accSagittalDoubleFlat7v11CUp",
                    "accSagittalDoubleSharp55CDown",
                    "accSagittalDoubleFlat55CUp",
                    "accSagittalDoubleSharp17CDown",
                    "accSagittalDoubleFlat17CUp",
                    "accSagittalDoubleSharp7v11kDown",
                    "accSagittalDoubleFlat7v11kUp",
                    "accSagittal23CommaUp",
                    "accSagittal23CommaDown",
                    "accSagittal5v19CommaUp",
                    "accSagittal5v19CommaDown",
                    "accSagittal5v23SmallDiesisUp",
                    "accSagittal5v23SmallDiesisDown",
                    "accSagittalSharp5v23SDown",
                    "accSagittalFlat5v23SUp",
                    "accSagittalSharp5v19CDown",
                    "accSagittalFlat5v19CUp",
                    "accSagittalSharp23CDown",
                    "accSagittalFlat23CUp",
                    "accSagittalSharp23CUp",
                    "accSagittalFlat23CDown",
                    "accSagittalSharp5v19CUp",
                    "accSagittalFlat5v19CDown",
                    "accSagittalSharp5v23SUp",
                    "accSagittalFlat5v23SDown",
                    "accSagittalDoubleSharp5v23SDown",
                    "accSagittalDoubleFlat5v23SUp",
                    "accSagittalDoubleSharp5v19CDown",
                    "accSagittalDoubleFlat5v19CUp",
                    "accSagittalDoubleSharp23CDown",
                    "accSagittalDoubleFlat23CUp",
                    "accSagittal19SchismaUp",
                    "accSagittal19SchismaDown",
                    "accSagittal17KleismaUp",
                    "accSagittal17KleismaDown",
                    "accSagittal143CommaUp",
                    "accSagittal143CommaDown",
                    "accSagittal11v49CommaUp",
                    "accSagittal11v49CommaDown",
                    "accSagittal19CommaUp",
                    "accSagittal19CommaDown",
                    "accSagittal7v19CommaUp",
                    "accSagittal7v19CommaDown",
                    "accSagittal49SmallDiesisUp",
                    "accSagittal49SmallDiesisDown",
                    "accSagittal23SmallDiesisUp",
                    "accSagittal23SmallDiesisDown",
                    "accSagittal5v13MediumDiesisUp",
                    "accSagittal5v13MediumDiesisDown",
                    "accSagittal11v19MediumDiesisUp",
                    "accSagittal11v19MediumDiesisDown",
                    "accSagittal49MediumDiesisUp",
                    "accSagittal49MediumDiesisDown",
                    "accSagittal5v49MediumDiesisUp",
                    "accSagittal5v49MediumDiesisDown",
                    "accSagittal49LargeDiesisUp",
                    "accSagittal49LargeDiesisDown",
                    "accSagittal11v19LargeDiesisUp",
                    "accSagittal11v19LargeDiesisDown",
                    "accSagittal5v13LargeDiesisUp",
                    "accSagittal5v13LargeDiesisDown",
                    "accSagittalSharp23SDown",
                    "accSagittalFlat23SUp",
                    "accSagittalSharp49SDown",
                    "accSagittalFlat49SUp",
                    "accSagittalSharp7v19CDown",
                    "accSagittalFlat7v19CUp",
                    "accSagittalSharp19CDown",
                    "accSagittalFlat19CUp",
                    "accSagittalSharp11v49CDown",
                    "accSagittalFlat11v49CUp",
                    "accSagittalSharp143CDown",
                    "accSagittalFlat143CUp",
                    "accSagittalSharp17kDown",
                    "accSagittalFlat17kUp",
                    "accSagittalSharp19sDown",
                    "accSagittalFlat19sUp",
                    "accSagittalSharp19sUp",
                    "accSagittalFlat19sDown",
                    "accSagittalSharp17kUp",
                    "accSagittalFlat17kDown",
                    "accSagittalSharp143CUp",
                    "accSagittalFlat143CDown",
                    "accSagittalSharp11v49CUp",
                    "accSagittalFlat11v49CDown",
                    "accSagittalSharp19CUp",
                    "accSagittalFlat19CDown",
                    "accSagittalSharp7v19CUp",
                    "accSagittalFlat7v19CDown",
                    "accSagittalSharp49SUp",
                    "accSagittalFlat49SDown",
                    "accSagittalSharp23SUp",
                    "accSagittalFlat23SDown",
                    "accSagittalSharp5v13MUp",
                    "accSagittalFlat5v13MDown",
                    "accSagittalSharp11v19MUp",
                    "accSagittalFlat11v19MDown",
                    "accSagittalSharp49MUp",
                    "accSagittalFlat49MDown",
                    "accSagittalSharp5v49MUp",
                    "accSagittalFlat5v49MDown",
                    "accSagittalSharp49LUp",
                    "accSagittalFlat49LDown",
                    "accSagittalSharp11v19LUp",
                    "accSagittalFlat11v19LDown",
                    "accSagittalSharp5v13LUp",
                    "accSagittalFlat5v13LDown",
                    "accSagittalUnused3",
                    "accSagittalUnused4",
                    "accSagittalDoubleSharp23SDown",
                    "accSagittalDoubleFlat23SUp",
                    "accSagittalDoubleSharp49SDown",
                    "accSagittalDoubleFlat49SUp",
                    "accSagittalDoubleSharp7v19CDown",
                    "accSagittalDoubleFlat7v19CUp",
                    "accSagittalDoubleSharp19CDown",
                    "accSagittalDoubleFlat19CUp",
                    "accSagittalDoubleSharp11v49CDown",
                    "accSagittalDoubleFlat11v49CUp",
                    "accSagittalDoubleSharp143CDown",
                    "accSagittalDoubleFlat143CUp",
                    "accSagittalDoubleSharp17kDown",
                    "accSagittalDoubleFlat17kUp",
                    "accSagittalDoubleSharp19sDown",
                    "accSagittalDoubleFlat19sUp",
                    "accSagittalShaftUp",
                    "accSagittalShaftDown",
                    "accSagittalAcute",
                    "accSagittalGrave",
                    "accidentalWyschnegradsky1TwelfthsSharp",
                    "accidentalWyschnegradsky2TwelfthsSharp",
                    "accidentalWyschnegradsky3TwelfthsSharp",
                    "accidentalWyschnegradsky4TwelfthsSharp",
                    "accidentalWyschnegradsky5TwelfthsSharp",
                    "accidentalWyschnegradsky6TwelfthsSharp",
                    "accidentalWyschnegradsky7TwelfthsSharp",
                    "accidentalWyschnegradsky8TwelfthsSharp",
                    "accidentalWyschnegradsky9TwelfthsSharp",
                    "accidentalWyschnegradsky10TwelfthsSharp",
                    "accidentalWyschnegradsky11TwelfthsSharp",
                    "accidentalWyschnegradsky1TwelfthsFlat",
                    "accidentalWyschnegradsky2TwelfthsFlat",
                    "accidentalWyschnegradsky3TwelfthsFlat",
                    "accidentalWyschnegradsky4TwelfthsFlat",
                    "accidentalWyschnegradsky5TwelfthsFlat",
                    "accidentalWyschnegradsky6TwelfthsFlat",
                    "accidentalWyschnegradsky7TwelfthsFlat",
                    "accidentalWyschnegradsky8TwelfthsFlat",
                    "accidentalWyschnegradsky9TwelfthsFlat",
                    "accidentalWyschnegradsky10TwelfthsFlat",
                    "accidentalWyschnegradsky11TwelfthsFlat",
                    "accidentalBuyukMucennebFlat",
                    "accidentalKucukMucennebFlat",
                    "accidentalBakiyeFlat",
                    "accidentalKomaFlat",
                    "accidentalKomaSharp",
                    "accidentalBakiyeSharp",
                    "accidentalKucukMucennebSharp",
                    "accidentalBuyukMucennebSharp",
                    "accidental1CommaSharp",
                    "accidental2CommaSharp",
                    "accidental3CommaSharp",
                    "accidental5CommaSharp",
                    "accidental1CommaFlat",
                    "accidental2CommaFlat",
                    "accidental3CommaFlat",
                    "accidental4CommaFlat",
                    "accidentalKoron",
                    "accidentalSori",
                    "accidentalXenakisOneThirdToneSharp",
                    "accidentalXenakisTwoThirdTonesSharp",
                    "accidentalQuarterToneSharpBusotti",
                    "accidentalSharpOneHorizontalStroke",
                    "accidentalThreeQuarterTonesSharpBusotti",
                    "accidentalQuarterToneSharpWiggle",
                    "accidentalTavenerSharp",
                    "accidentalTavenerFlat",
                    "accidentalQuarterToneFlatPenderecki",
                    "accidentalCommaSlashUp",
                    "accidentalCommaSlashDown",
                    "accidentalWilsonPlus",
                    "accidentalWilsonMinus",
                    "accidentalLargeDoubleSharp",
                    "accidentalQuarterToneSharp4",
                    "accidentalQuarterToneFlat4",
                    "accidentalQuarterToneFlatFilledReversed",
                    "accidentalSharpReversed",
                    "accidentalNaturalReversed",
                    "accidentalDoubleFlatReversed",
                    "accidentalFlatTurned",
                    "accidentalDoubleFlatTurned",
                    "accidentalThreeQuarterTonesFlatGrisey",
                    "accidentalThreeQuarterTonesFlatTartini",
                    "accidentalQuarterToneFlatVanBlankenburg",
                    "accidentalThreeQuarterTonesFlatCouper",
                    "accidentalOneThirdToneSharpFerneyhough",
                    "accidentalOneThirdToneFlatFerneyhough",
                    "accidentalTwoThirdTonesSharpFerneyhough",
                    "accidentalTwoThirdTonesFlatFerneyhough",
                    "articAccentAbove",
                    "articAccentBelow",
                    "articStaccatoAbove",
                    "articStaccatoBelow",
                    "articTenutoAbove",
                    "articTenutoBelow",
                    "articStaccatissimoAbove",
                    "articStaccatissimoBelow",
                    "articStaccatissimoWedgeAbove",
                    "articStaccatissimoWedgeBelow",
                    "articStaccatissimoStrokeAbove",
                    "articStaccatissimoStrokeBelow",
                    "articMarcatoAbove",
                    "articMarcatoBelow",
                    "articMarcatoStaccatoAbove",
                    "articMarcatoStaccatoBelow",
                    "articAccentStaccatoAbove",
                    "articAccentStaccatoBelow",
                    "articTenutoStaccatoAbove",
                    "articTenutoStaccatoBelow",
                    "articTenutoAccentAbove",
                    "articTenutoAccentBelow",
                    "articStressAbove",
                    "articStressBelow",
                    "articUnstressAbove",
                    "articUnstressBelow",
                    "articLaissezVibrerAbove",
                    "articLaissezVibrerBelow",
                    "fermataAbove",
                    "fermataBelow",
                    "fermataVeryShortAbove",
                    "fermataVeryShortBelow",
                    "fermataShortAbove",
                    "fermataShortBelow",
                    "fermataLongAbove",
                    "fermataLongBelow",
                    "fermataVeryLongAbove",
                    "fermataVeryLongBelow",
                    "fermataLongHenzeAbove",
                    "fermataLongHenzeBelow",
                    "fermataShortHenzeAbove",
                    "fermataShortHenzeBelow",
                    "breathMarkComma",
                    "caesura",
                    "caesuraThick",
                    "caesuraShort",
                    "breathMarkSalzedo",
                    "curlewSign",
                    "restLonga",
                    "restDoubleWhole",
                    "restWhole",
                    "restHalf",
                    "restQuarter",
                    "rest8th",
                    "rest16th",
                    "rest32nd",
                    "rest64th",
                    "rest128th",
                    "rest256th",
                    "rest512th",
                    "rest1024th",
                    "restHBar",
                    "restHBarLeft",
                    "restHBarRight",
                    "restQuarterOld",
                    "restWholeLegerLine",
                    "restHalfLegerLine",
                    "repeat1Bar",
                    "repeat2Bars",
                    "repeat4Bars",
                    "mensuralGclef",
                    "mensuralGclefPetrucci",
                    "chantFclef",
                    "mensuralFclef",
                    "mensuralFclefPetrucci",
                    "chantCclef",
                    "mensuralCclefPetrucciPosMiddle",
                    "mensuralProlation1",
                    "mensuralProlation2",
                    "mensuralProlation3",
                    "mensuralProlation4",
                    "mensuralProlation5",
                    "mensuralProlation6",
                    "mensuralProlation7",
                    "mensuralProlation8",
                    "mensuralProlation9",
                    "mensuralProlation10",
                    "mensuralProlation11",
                    "mensuralProportionTempusPerfectum",
                    "mensuralProportionProportioDupla1",
                    "mensuralProportionProportioDupla2",
                    "mensuralProportionProportioTripla",
                    "mensuralProportionProportioQuadrupla",
                    "mensuralProlationCombiningDot",
                    "mensuralProlationCombiningTwoDots",
                    "mensuralProlationCombiningThreeDots",
                    "mensuralProlationCombiningThreeDotsTri",
                    "mensuralProlationCombiningDotVoid",
                    "mensuralProlationCombiningStroke",
                    "mensuralProportion1",
                    "mensuralProportion2",
                    "mensuralProportion3",
                    "mensuralProportion4",
                    "mensuralNoteheadMaximaBlack",
                    "mensuralNoteheadMaximaVoid",
                    "mensuralNoteheadMaximaBlackVoid",
                    "mensuralNoteheadMaximaWhite",
                    "mensuralNoteheadLongaBlack",
                    "mensuralNoteheadLongaVoid",
                    "mensuralNoteheadLongaBlackVoid",
                    "mensuralNoteheadLongaWhite",
                    "mensuralNoteheadSemibrevisBlack",
                    "mensuralNoteheadSemibrevisVoid",
                    "mensuralNoteheadSemibrevisBlackVoid",
                    "mensuralNoteheadSemibrevisBlackVoidTurned",
                    "mensuralNoteheadMinimaWhite",
                    "mensuralNoteheadSemiminimaWhite",
                    "mensuralCombStemUp",
                    "mensuralCombStemDown",
                    "mensuralCombStemDiagonal",
                    "mensuralCombStemUpFlagRight",
                    "mensuralCombStemDownFlagRight",
                    "mensuralCombStemUpFlagLeft",
                    "mensuralCombStemDownFlagLeft",
                    "mensuralCombStemUpFlagFlared",
                    "mensuralCombStemDownFlagFlared",
                    "mensuralCombStemUpFlagExtended",
                    "mensuralCombStemDownFlagExtended",
                    "mensuralCombStemUpFlagSemiminima",
                    "mensuralCombStemDownFlagSemiminima",
                    "mensuralCombStemUpFlagFusa",
                    "mensuralCombStemDownFlagFusa",
                    "mensuralBlackMaxima",
                    "mensuralBlackLonga",
                    "mensuralBlackBrevis",
                    "mensuralBlackSemibrevis",
                    "mensuralBlackMinima",
                    "mensuralBlackSemiminima",
                    "mensuralBlackBrevisVoid",
                    "mensuralBlackSemibrevisVoid",
                    "mensuralBlackMinimaVoid",
                    "mensuralBlackSemibrevisCaudata",
                    "mensuralBlackDragma",
                    "mensuralBlackSemibrevisOblique",
                    "mensuralWhiteMaxima",
                    "mensuralWhiteLonga",
                    "mensuralWhiteBrevis",
                    "mensuralWhiteMinima",
                    "mensuralWhiteSemiminima",
                    "mensuralWhiteFusa",
                    "chantPunctum",
                    "chantPunctumInclinatum",
                    "chantPunctumInclinatumAuctum",
                    "chantPunctumInclinatumDeminutum",
                    "chantAuctumAsc",
                    "chantAuctumDesc",
                    "chantPunctumVirga",
                    "chantPunctumVirgaReversed",
                    "chantPunctumCavum",
                    "chantPunctumLinea",
                    "chantPunctumLineaCavum",
                    "chantQuilisma",
                    "chantOriscusAscending",
                    "chantOriscusDescending",
                    "chantStrophicus",
                    "chantStrophicusAuctus",
                    "chantPodatusLower",
                    "chantPodatusUpper",
                    "chantDeminutumUpper",
                    "chantDeminutumLower",
                    "chantEntryLineAsc2nd",
                    "chantEntryLineAsc3rd",
                    "chantEntryLineAsc4th",
                    "chantEntryLineAsc5th",
                    "chantEntryLineAsc6th",
                    "chantLigaturaDesc2nd",
                    "chantLigaturaDesc3rd",
                    "chantLigaturaDesc4th",
                    "chantLigaturaDesc5th",
                    "chantConnectingLineAsc2nd",
                    "chantConnectingLineAsc3rd",
                    "chantConnectingLineAsc4th",
                    "chantConnectingLineAsc5th",
                    "chantConnectingLineAsc6th",
                    "chantIctusAbove",
                    "chantIctusBelow",
                    "chantCirculusAbove",
                    "chantCirculusBelow",
                    "chantSemicirculusAbove",
                    "chantSemicirculusBelow",
                    "chantAccentusAbove",
                    "chantAccentusBelow",
                    "chantEpisema",
                    "chantAugmentum",
                    "medRenFlatSoftB",
                    "medRenFlatHardB",
                    "medRenNatural",
                    "medRenSharpCroix",
                    "medRenFlatWithDot",
                    "medRenNaturalWithCross",
                    "mensuralSignumUp",
                    "mensuralSignumDown",
                    "mensuralCustosUp",
                    "mensuralCustosDown",
                    "chantCustosStemUpPosMiddle",
                    "chantCustosStemDownPosMiddle",
                    "mensuralCustosCheckmark",
                    "mensuralCustosTurn",
                    "mensuralColorationStartSquare",
                    "mensuralColorationEndSquare",
                    "mensuralColorationStartRound",
                    "mensuralColorationEndRound",
                    "mensuralAlterationSign",
                    "kievanCClef",
                    "kievanEndingSymbol",
                    "kievanNoteReciting",
                    "kievanNoteWhole",
                    "kievanNoteWholeFinal",
                    "kievanNoteHalfStaffLine",
                    "kievanNoteQuarterStemUp",
                    "kievanNoteQuarterStemDown",
                    "kievanNote8thStemUp",
                    "kievanNote8thStemDown",
                    "kievanAugmentationDot",
                    "kievanAccidentalSharp",
                    "kievanAccidentalFlat"
                ],
                "dynamics": [
                    "dynamicPiano",
                    "dynamicMezzo",
                    "dynamicForte",
                    "dynamicRinforzando",
                    "dynamicSforzando",
                    "dynamicZ",
                    "dynamicNiente",
                    "dynamicPPPPPP",
                    "dynamicPPPPP",
                    "dynamicPPPP",
                    "dynamicPPP",
                    "dynamicPP",
                    "dynamicMP",
                    "dynamicMF",
                    "dynamicPF",
                    "dynamicFF",
                    "dynamicFFF",
                    "dynamicFFFF",
                    "dynamicFFFFF",
                    "dynamicFFFFFF",
                    "dynamicFortePiano",
                    "dynamicForzando",
                    "dynamicSforzando1",
                    "dynamicSforzandoPiano",
                    "dynamicSforzandoPianissimo",
                    "dynamicSforzato",
                    "dynamicSforzatoPiano",
                    "dynamicSforzatoFF",
                    "dynamicRinforzando1",
                    "dynamicRinforzando2",
                    "dynamicCrescendoHairpin",
                    "dynamicDiminuendoHairpin",
                    "dynamicMessaDiVoce",
                    "dynamicNienteForHairpin",
                    "dynamicHairpinParenthesisLeft",
                    "dynamicHairpinParenthesisRight",
                    "dynamicHairpinBracketLeft",
                    "dynamicHairpinBracketRight",
                    "dynamicCombinedSeparatorColon",
                    "dynamicCombinedSeparatorHyphen",
                    "dynamicCombinedSeparatorSpace"
                ],
                "figuredBass": [
                    "figbass0",
                    "figbass1",
                    "figbass2",
                    "figbass2Raised",
                    "figbass3",
                    "figbass4",
                    "figbass4Raised",
                    "figbass5",
                    "figbass5Raised1",
                    "figbass5Raised2",
                    "figbass5Raised3",
                    "figbass6",
                    "figbass6Raised",
                    "figbass7",
                    "figbass7Raised1",
                    "figbass7Raised2",
                    "figbass8",
                    "figbass9",
                    "figbass9Raised",
                    "figbassDoubleFlat",
                    "figbassFlat",
                    "figbassNatural",
                    "figbassSharp",
                    "figbassDoubleSharp",
                    "figbassBracketLeft",
                    "figbassBracketRight",
                    "figbassParensLeft",
                    "figbassParensRight",
                    "figbassPlus",
                    "figbassCombiningRaising",
                    "figbassCombiningLowering",
                    "figbass6Raised2",
                    "figbass7Diminished"
                ],
                "forTextBasedApplications": [
                    "bracket",
                    "staff1Line",
                    "staff2Lines",
                    "staff3Lines",
                    "staff4Lines",
                    "staff5Lines",
                    "staff6Lines",
                    "staff1LineWide",
                    "staff2LinesWide",
                    "staff3LinesWide",
                    "staff4LinesWide",
                    "staff5LinesWide",
                    "staff6LinesWide",
                    "staff1LineNarrow",
                    "staff2LinesNarrow",
                    "staff3LinesNarrow",
                    "staff4LinesNarrow",
                    "staff5LinesNarrow",
                    "staff6LinesNarrow",
                    "barlineSingle",
                    "barlineDouble",
                    "barlineFinal",
                    "barlineReverseFinal",
                    "barlineHeavy",
                    "barlineHeavyHeavy",
                    "barlineDashed",
                    "barlineDotted",
                    "barlineShort",
                    "barlineTick",
                    "repeatLeft",
                    "repeatRight",
                    "repeatRightLeft",
                    "dalSegno",
                    "daCapo",
                    "leftRepeatSmall",
                    "rightRepeatSmall",
                    "timeSigCombNumerator",
                    "timeSigCombDenominator",
                    "noteDoubleWhole",
                    "noteDoubleWholeSquare",
                    "noteWhole",
                    "noteHalfUp",
                    "noteHalfDown",
                    "noteQuarterUp",
                    "noteQuarterDown",
                    "note8thUp",
                    "note8thDown",
                    "note16thUp",
                    "note16thDown",
                    "note32ndUp",
                    "note32ndDown",
                    "note64thUp",
                    "note64thDown",
                    "note128thUp",
                    "note128thDown",
                    "note256thUp",
                    "note256thDown",
                    "note512thUp",
                    "note512thDown",
                    "note1024thUp",
                    "note1024thDown",
                    "augmentationDot",
                    "textBlackNoteShortStem",
                    "textBlackNoteLongStem",
                    "textBlackNoteFrac8thShortStem",
                    "textBlackNoteFrac8thLongStem",
                    "textBlackNoteFrac16thShortStem",
                    "textBlackNoteFrac16thLongStem",
                    "textBlackNoteFrac32ndLongStem",
                    "textCont8thBeamShortStem",
                    "textCont8thBeamLongStem",
                    "textCont16thBeamShortStem",
                    "textCont16thBeamLongStem",
                    "textCont32ndBeamLongStem",
                    "textAugmentationDot",
                    "textTie",
                    "textTupletBracketStartShortStem",
                    "textTuplet3ShortStem",
                    "textTupletBracketEndShortStem",
                    "textTupletBracketStartLongStem",
                    "textTuplet3LongStem",
                    "textTupletBracketEndLongStem",
                    "stem",
                    "stemSprechgesang",
                    "stemSwished",
                    "stemPendereckiTremolo",
                    "stemSulPonticello",
                    "stemBowOnBridge",
                    "stemBowOnTailpiece",
                    "stemBuzzRoll",
                    "stemDamp",
                    "stemVibratoPulse",
                    "stemMultiphonicsBlack",
                    "stemMultiphonicsWhite",
                    "stemMultiphonicsBlackWhite",
                    "stemSussurando",
                    "stemRimShot",
                    "stemHarpStringNoise",
                    "restHBarMiddle",
                    "chantStaff",
                    "chantStaffWide",
                    "chantStaffNarrow",
                    "chantDivisioMinima",
                    "chantDivisioMaior",
                    "chantDivisioMaxima",
                    "chantDivisioFinalis",
                    "chantVirgula",
                    "chantCaesura",
                    "staffPosRaise1",
                    "staffPosRaise2",
                    "staffPosRaise3",
                    "staffPosRaise4",
                    "staffPosRaise5",
                    "staffPosRaise6",
                    "staffPosRaise7",
                    "staffPosRaise8",
                    "staffPosLower1",
                    "staffPosLower2",
                    "staffPosLower3",
                    "staffPosLower4",
                    "staffPosLower5",
                    "staffPosLower6",
                    "staffPosLower7",
                    "staffPosLower8",
                    "luteStaff6Lines",
                    "luteStaff6LinesWide",
                    "luteStaff6LinesNarrow",
                    "luteBarlineStartRepeat",
                    "luteBarlineEndRepeat",
                    "luteBarlineFinal",
                    "metricModulationArrowLeft",
                    "metricModulationArrowRight"
                ],
                "multiGlyphForms": [
                    "ornamentTopLeftConcaveStroke",
                    "ornamentTopLeftConvexStroke",
                    "ornamentHighLeftConcaveStroke",
                    "ornamentHighLeftConvexStroke",
                    "ornamentLeftVerticalStroke",
                    "ornamentLeftVerticalStrokeWithCross",
                    "ornamentLeftShakeT",
                    "ornamentLeftPlus",
                    "ornamentLowLeftConcaveStroke",
                    "ornamentLowLeftConvexStroke",
                    "ornamentBottomLeftConcaveStroke",
                    "ornamentBottomLeftConcaveStrokeLarge",
                    "ornamentBottomLeftConvexStroke",
                    "ornamentZigZagLineNoRightEnd",
                    "ornamentZigZagLineWithRightEnd",
                    "ornamentMiddleVerticalStroke",
                    "ornamentTopRightConcaveStroke",
                    "ornamentTopRightConvexStroke",
                    "ornamentHighRightConcaveStroke",
                    "ornamentHighRightConvexStroke",
                    "ornamentRightVerticalStroke",
                    "ornamentLowRightConcaveStroke",
                    "ornamentLowRightConvexStroke",
                    "ornamentBottomRightConcaveStroke",
                    "ornamentBottomRightConvexStroke",
                    "wiggleTrillFastest",
                    "wiggleTrillFasterStill",
                    "wiggleTrillFaster",
                    "wiggleTrillFast",
                    "wiggleTrill",
                    "wiggleTrillSlow",
                    "wiggleTrillSlower",
                    "wiggleTrillSlowerStill",
                    "wiggleTrillSlowest",
                    "wiggleArpeggiatoUp",
                    "wiggleArpeggiatoDown",
                    "wiggleArpeggiatoUpSwash",
                    "wiggleArpeggiatoDownSwash",
                    "wiggleArpeggiatoUpArrow",
                    "wiggleArpeggiatoDownArrow",
                    "wiggleGlissando",
                    "wiggleVibrato",
                    "wiggleVibratoWide",
                    "guitarVibratoStroke",
                    "guitarWideVibratoStroke",
                    "wiggleWavy",
                    "wiggleSquareWave",
                    "wiggleSawtooth",
                    "wiggleGlissandoGroup1",
                    "wiggleGlissandoGroup2",
                    "wiggleGlissandoGroup3",
                    "wiggleCircularConstant",
                    "wiggleCircularConstantFlipped",
                    "wiggleCircularConstantLarge",
                    "wiggleCircularConstantFlippedLarge",
                    "wiggleCircularStart",
                    "wiggleCircularLargest",
                    "wiggleCircularLargerStill",
                    "wiggleCircularLarger",
                    "wiggleCircularLarge",
                    "wiggleCircular",
                    "wiggleCircularSmall",
                    "wiggleCircularEnd",
                    "wiggleVibratoStart",
                    "wiggleVibratoSmallestFastest",
                    "wiggleVibratoSmallestFasterStill",
                    "wiggleVibratoSmallestFaster",
                    "wiggleVibratoSmallestFast",
                    "wiggleVibratoSmallestSlow",
                    "wiggleVibratoSmallestSlower",
                    "wiggleVibratoSmallestSlowest",
                    "wiggleVibratoSmallFastest",
                    "wiggleVibratoSmallFasterStill",
                    "wiggleVibratoSmallFaster",
                    "wiggleVibratoSmallFast",
                    "wiggleVibratoSmallSlow",
                    "wiggleVibratoSmallSlower",
                    "wiggleVibratoSmallSlowest",
                    "wiggleVibratoMediumFastest",
                    "wiggleVibratoMediumFasterStill",
                    "wiggleVibratoMediumFaster",
                    "wiggleVibratoMediumFast",
                    "wiggleVibratoMediumSlow",
                    "wiggleVIbratoMediumSlower",
                    "wiggleVibratoMediumSlowest",
                    "wiggleVibratoLargeFastest",
                    "wiggleVibratoLargeFasterStill",
                    "wiggleVibratoLargeFaster",
                    "wiggleVibratoLargeFast",
                    "wiggleVibratoLargeSlow",
                    "wiggleVibratoLargeSlower",
                    "wiggleVibratoLargeSlowest",
                    "wiggleVibratoLargestFastest",
                    "wiggleVibratoLargestFasterStill",
                    "wiggleVibratoLargestFaster",
                    "wiggleVibratoLargestFast",
                    "wiggleVibratoLargestSlow",
                    "wiggleVIbratoLargestSlower",
                    "wiggleVibratoLargestSlowest",
                    "wiggleRandom1",
                    "wiggleRandom2",
                    "wiggleRandom3",
                    "wiggleRandom4"
                ],
                "noteheadSetCircleX": [
                    "noteheadCircleXDoubleWhole",
                    "noteheadCircleXWhole",
                    "noteheadCircleXHalf",
                    "noteheadCircleX",
                    "noteheadDoubleWholeWithX"
                ],
                "noteheadSetCircled": [
                    "noteheadCircledBlack",
                    "noteheadCircledHalf",
                    "noteheadCircledWhole",
                    "noteheadCircledDoubleWhole",
                    "noteheadCircledBlackLarge",
                    "noteheadCircledHalfLarge",
                    "noteheadCircledWholeLarge",
                    "noteheadCircledDoubleWholeLarge",
                    "noteheadCircledXLarge"
                ],
                "noteheadSetDefault": [
                    "noteheadDoubleWhole",
                    "noteheadDoubleWholeSquare",
                    "noteheadWhole",
                    "noteheadHalf",
                    "noteheadBlack",
                    "noteheadClusterDoubleWhole2nd",
                    "noteheadClusterWhole2nd",
                    "noteheadClusterHalf2nd",
                    "noteheadClusterQuarter2nd",
                    "noteheadClusterDoubleWhole3rd",
                    "noteheadClusterWhole3rd",
                    "noteheadClusterHalf3rd",
                    "noteheadClusterQuarter3rd",
                    "noteheadClusterDoubleWholeTop",
                    "noteheadClusterDoubleWholeMiddle",
                    "noteheadClusterDoubleWholeBottom",
                    "noteheadClusterWholeTop",
                    "noteheadClusterWholeMiddle",
                    "noteheadClusterWholeBottom",
                    "noteheadClusterHalfTop",
                    "noteheadClusterHalfMiddle",
                    "noteheadClusterHalfBottom",
                    "noteheadClusterQuarterTop",
                    "noteheadClusterQuarterMiddle",
                    "noteheadClusterQuarterBottom"
                ],
                "noteheadSetDiamond": [
                    "noteheadDiamondDoubleWhole",
                    "noteheadDiamondWhole",
                    "noteheadDiamondHalf",
                    "noteheadDiamondBlack",
                    "noteheadDiamondClusterWhite2nd",
                    "noteheadDiamondClusterBlack2nd",
                    "noteheadDiamondClusterWhite3rd",
                    "noteheadDiamondClusterBlack3rd",
                    "noteheadDiamondClusterWhiteTop",
                    "noteheadDiamondClusterWhiteMiddle",
                    "noteheadDiamondClusterWhiteBottom",
                    "noteheadDiamondClusterBlackTop",
                    "noteheadDiamondClusterBlackMiddle",
                    "noteheadDiamondClusterBlackBottom"
                ],
                "noteheadSetDiamondOld": [
                    "noteheadDiamondDoubleWholeOld",
                    "noteheadDiamondWholeOld",
                    "noteheadDiamondHalfOld",
                    "noteheadDiamondBlackOld",
                    "noteheadDiamondHalfFilled"
                ],
                "noteheadSetHeavyX": [
                    "noteheadHeavyX",
                    "noteheadHeavyXHat"
                ],
                "noteheadSetLargeArrowDown": [
                    "noteheadLargeArrowDownDoubleWhole",
                    "noteheadLargeArrowDownWhole",
                    "noteheadLargeArrowDownHalf",
                    "noteheadLargeArrowDownBlack"
                ],
                "noteheadSetLargeArrowUp": [
                    "noteheadLargeArrowUpDoubleWhole",
                    "noteheadLargeArrowUpWhole",
                    "noteheadLargeArrowUpHalf",
                    "noteheadLargeArrowUpBlack"
                ],
                "noteheadSetNamesPitch": [
                    "noteAFlatWhole",
                    "noteAWhole",
                    "noteASharpWhole",
                    "noteBFlatWhole",
                    "noteBWhole",
                    "noteBSharpWhole",
                    "noteCFlatWhole",
                    "noteCWhole",
                    "noteCSharpWhole",
                    "noteDFlatWhole",
                    "noteDWhole",
                    "noteDSharpWhole",
                    "noteEFlatWhole",
                    "noteEWhole",
                    "noteESharpWhole",
                    "noteFFlatWhole",
                    "noteFWhole",
                    "noteFSharpWhole",
                    "noteGFlatWhole",
                    "noteGWhole",
                    "noteGSharpWhole",
                    "noteHWhole",
                    "noteHSharpWhole",
                    "noteAFlatHalf",
                    "noteAHalf",
                    "noteASharpHalf",
                    "noteBFlatHalf",
                    "noteBHalf",
                    "noteBSharpHalf",
                    "noteCFlatHalf",
                    "noteCHalf",
                    "noteCSharpHalf",
                    "noteDFlatHalf",
                    "noteDHalf",
                    "noteDSharpHalf",
                    "noteEFlatHalf",
                    "noteEHalf",
                    "noteESharpHalf",
                    "noteFFlatHalf",
                    "noteFHalf",
                    "noteFSharpHalf",
                    "noteGFlatHalf",
                    "noteGHalf",
                    "noteGSharpHalf",
                    "noteHHalf",
                    "noteHSharpHalf",
                    "noteAFlatBlack",
                    "noteABlack",
                    "noteASharpBlack",
                    "noteBFlatBlack",
                    "noteBBlack",
                    "noteBSharpBlack",
                    "noteCFlatBlack",
                    "noteCBlack",
                    "noteCSharpBlack",
                    "noteDFlatBlack",
                    "noteDBlack",
                    "noteDSharpBlack",
                    "noteEFlatBlack",
                    "noteEBlack",
                    "noteESharpBlack",
                    "noteFFlatBlack",
                    "noteFBlack",
                    "noteFSharpBlack",
                    "noteGFlatBlack",
                    "noteGBlack",
                    "noteGSharpBlack",
                    "noteHBlack",
                    "noteHSharpBlack"
                ],
                "noteheadSetNamesSolfege": [
                    "noteDoWhole",
                    "noteReWhole",
                    "noteMiWhole",
                    "noteFaWhole",
                    "noteSoWhole",
                    "noteLaWhole",
                    "noteTiWhole",
                    "noteSiWhole",
                    "noteDoHalf",
                    "noteReHalf",
                    "noteMiHalf",
                    "noteFaHalf",
                    "noteSoHalf",
                    "noteLaHalf",
                    "noteTiHalf",
                    "noteSiHalf",
                    "noteDoBlack",
                    "noteReBlack",
                    "noteMiBlack",
                    "noteFaBlack",
                    "noteSoBlack",
                    "noteLaBlack",
                    "noteTiBlack",
                    "noteSiBlack"
                ],
                "noteheadSetPlus": [
                    "noteheadPlusDoubleWhole",
                    "noteheadPlusWhole",
                    "noteheadPlusHalf",
                    "noteheadPlusBlack",
                    "noteheadCircleXDoubleWhole"
                ],
                "noteheadSetRoundLarge": [
                    "noteheadRoundBlackLarge",
                    "noteheadRoundWhiteLarge",
                    "noteheadRoundWhiteWithDotLarge",
                    "noteheadRoundBlackSlashedLarge",
                    "noteheadRoundWhiteSlashedLarge"
                ],
                "noteheadSetRoundSmall": [
                    "noteheadRoundBlack",
                    "noteheadRoundWhite",
                    "noteheadRoundWhiteWithDot",
                    "noteheadRoundBlackSlashed",
                    "noteheadRoundWhiteSlashed"
                ],
                "noteheadSetSacredHarp": [
                    "noteShapeRoundWhite",
                    "noteShapeRoundBlack",
                    "noteShapeSquareWhite",
                    "noteShapeSquareBlack",
                    "noteShapeTriangleRightWhite",
                    "noteShapeTriangleRightBlack",
                    "noteShapeTriangleLeftWhite",
                    "noteShapeTriangleLeftBlack",
                    "noteShapeDiamondWhite",
                    "noteShapeDiamondBlack",
                    "noteShapeTriangleUpWhite",
                    "noteShapeTriangleUpBlack",
                    "noteShapeMoonWhite",
                    "noteShapeMoonBlack",
                    "noteShapeTriangleRoundWhite",
                    "noteShapeTriangleRoundBlack",
                    "noteShapeRoundDoubleWhole",
                    "noteShapeSquareDoubleWhole",
                    "noteShapeTriangleRightDoubleWhole",
                    "noteShapeTriangleLeftDoubleWhole",
                    "noteShapeDiamondDoubleWhole",
                    "noteShapeTriangleUpDoubleWhole",
                    "noteShapeMoonDoubleWhole",
                    "noteShapeTriangleRoundDoubleWhole",
                    "noteShapeKeystoneDoubleWhole",
                    "noteShapeQuarterMoonDoubleWhole",
                    "noteShapeIsoscelesTriangleDoubleWhole",
                    "noteShapeMoonLeftDoubleWhole",
                    "noteShapeArrowheadLeftDoubleWhole",
                    "noteShapeTriangleRoundLeftDoubleWhole"
                ],
                "noteheadSetSlashHorizontalEnds": [
                    "noteheadSlashHorizontalEnds",
                    "noteheadSlashWhiteHalf",
                    "noteheadSlashDiamondWhite",
                    "noteheadSlashX",
                    "noteheadSlashHorizontalEndsMuted",
                    "noteheadSlashWhiteMuted",
                    "noteheadSlashWhiteDoubleWhole"
                ],
                "noteheadSetSlashVerticalEnds": [
                    "noteheadSlashVerticalEnds",
                    "noteheadSlashWhiteHalf",
                    "noteheadSlashDiamondWhite",
                    "noteheadSlashVerticalEndsSmall",
                    "noteheadSlashVerticalEndsMuted",
                    "noteheadSlashWhiteMuted"
                ],
                "noteheadSetSlashed1": [
                    "noteheadSlashedBlack1",
                    "noteheadSlashedHalf1",
                    "noteheadSlashedWhole1",
                    "noteheadSlashedDoubleWhole1"
                ],
                "noteheadSetSlashed2": [
                    "noteheadSlashedBlack2",
                    "noteheadSlashedHalf2",
                    "noteheadSlashedWhole2",
                    "noteheadSlashedDoubleWhole2"
                ],
                "noteheadSetSquare": [
                    "noteheadSquareBlackLarge",
                    "noteheadSquareBlackWhite",
                    "noteheadRectangularClusterBlackTop",
                    "noteheadRectangularClusterBlackMiddle",
                    "noteheadRectangularClusterBlackBottom",
                    "noteheadRectangularClusterWhiteTop",
                    "noteheadRectangularClusterWhiteMiddle",
                    "noteheadRectangularClusterWhiteBottom"
                ],
                "noteheadSetTriangleDown": [
                    "noteheadTriangleDownDoubleWhole",
                    "noteheadTriangleDownWhole",
                    "noteheadTriangleDownHalf",
                    "noteheadTriangleDownWhite",
                    "noteheadTriangleDownBlack"
                ],
                "noteheadSetTriangleLeft": [
                    "noteheadTriangleLeftWhite",
                    "noteheadTriangleLeftBlack"
                ],
                "noteheadSetTriangleRight": [
                    "noteheadTriangleRightWhite",
                    "noteheadTriangleRightBlack"
                ],
                "noteheadSetTriangleUp": [
                    "noteheadTriangleUpDoubleWhole",
                    "noteheadTriangleUpWhole",
                    "noteheadTriangleUpHalf",
                    "noteheadTriangleUpWhite",
                    "noteheadTriangleUpBlack"
                ],
                "noteheadSetWithX": [
                    "noteheadDoubleWholeWithX",
                    "noteheadWholeWithX",
                    "noteheadHalfWithX",
                    "noteheadVoidWithX"
                ],
                "noteheadSetX": [
                    "noteheadXDoubleWhole",
                    "noteheadXWhole",
                    "noteheadXHalf",
                    "noteheadXBlack",
                    "noteheadXOrnate",
                    "noteheadXOrnateEllipse"
                ],
                "noteheads": [
                    "noteheadDoubleWhole",
                    "noteheadDoubleWholeSquare",
                    "noteheadWhole",
                    "noteheadHalf",
                    "noteheadBlack",
                    "noteheadNull",
                    "noteheadXDoubleWhole",
                    "noteheadXWhole",
                    "noteheadXHalf",
                    "noteheadXBlack",
                    "noteheadXOrnate",
                    "noteheadXOrnateEllipse",
                    "noteheadPlusDoubleWhole",
                    "noteheadPlusWhole",
                    "noteheadPlusHalf",
                    "noteheadPlusBlack",
                    "noteheadCircleXDoubleWhole",
                    "noteheadCircleXWhole",
                    "noteheadCircleXHalf",
                    "noteheadCircleX",
                    "noteheadDoubleWholeWithX",
                    "noteheadWholeWithX",
                    "noteheadHalfWithX",
                    "noteheadVoidWithX",
                    "noteheadSquareWhite",
                    "noteheadSquareBlack",
                    "noteheadTriangleUpDoubleWhole",
                    "noteheadTriangleUpWhole",
                    "noteheadTriangleUpHalf",
                    "noteheadTriangleUpWhite",
                    "noteheadTriangleUpBlack",
                    "noteheadTriangleLeftWhite",
                    "noteheadTriangleLeftBlack",
                    "noteheadTriangleRightWhite",
                    "noteheadTriangleRightBlack",
                    "noteheadTriangleDownDoubleWhole",
                    "noteheadTriangleDownWhole",
                    "noteheadTriangleDownHalf",
                    "noteheadTriangleDownWhite",
                    "noteheadTriangleDownBlack",
                    "noteheadTriangleUpRightWhite",
                    "noteheadTriangleUpRightBlack",
                    "noteheadMoonWhite",
                    "noteheadMoonBlack",
                    "noteheadTriangleRoundDownWhite",
                    "noteheadTriangleRoundDownBlack",
                    "noteheadParenthesis",
                    "noteheadSlashedBlack1",
                    "noteheadSlashedBlack2",
                    "noteheadSlashedHalf1",
                    "noteheadSlashedHalf2",
                    "noteheadSlashedWhole1",
                    "noteheadSlashedWhole2",
                    "noteheadSlashedDoubleWhole1",
                    "noteheadSlashedDoubleWhole2",
                    "noteheadDiamondDoubleWhole",
                    "noteheadDiamondWhole",
                    "noteheadDiamondHalf",
                    "noteheadDiamondBlack",
                    "noteheadDiamondWhite",
                    "noteheadDiamondWhiteWide",
                    "noteheadDiamondDoubleWholeOld",
                    "noteheadDiamondWholeOld",
                    "noteheadDiamondHalfOld",
                    "noteheadDiamondBlackOld",
                    "noteheadDiamondHalfFilled",
                    "noteheadCircledBlack",
                    "noteheadCircledHalf",
                    "noteheadCircledWhole",
                    "noteheadCircledDoubleWhole",
                    "noteheadCircledBlackLarge",
                    "noteheadCircledHalfLarge",
                    "noteheadCircledWholeLarge",
                    "noteheadCircledDoubleWholeLarge",
                    "noteheadCircledXLarge",
                    "noteheadLargeArrowUpDoubleWhole",
                    "noteheadLargeArrowUpWhole",
                    "noteheadLargeArrowUpHalf",
                    "noteheadLargeArrowUpBlack",
                    "noteheadLargeArrowDownDoubleWhole",
                    "noteheadLargeArrowDownWhole",
                    "noteheadLargeArrowDownHalf",
                    "noteheadLargeArrowDownBlack",
                    "noteheadParenthesisLeft",
                    "noteheadParenthesisRight",
                    "noteheadCircleSlash",
                    "noteheadHeavyX",
                    "noteheadHeavyXHat",
                    "noteheadWholeFilled",
                    "noteheadHalfFilled",
                    "noteheadDiamondOpen",
                    "noteheadSlashVerticalEnds",
                    "noteheadSlashHorizontalEnds",
                    "noteheadSlashWhiteWhole",
                    "noteheadSlashWhiteHalf",
                    "noteheadSlashDiamondWhite",
                    "noteheadSlashVerticalEndsSmall",
                    "noteheadSlashX",
                    "noteheadSlashVerticalEndsMuted",
                    "noteheadSlashHorizontalEndsMuted",
                    "noteheadSlashWhiteMuted",
                    "noteheadSlashWhiteDoubleWhole",
                    "noteheadRoundBlackLarge",
                    "noteheadRoundWhiteLarge",
                    "noteheadRoundWhiteWithDotLarge",
                    "noteheadRoundBlack",
                    "noteheadRoundWhite",
                    "noteheadRoundWhiteWithDot",
                    "noteheadRoundBlackSlashedLarge",
                    "noteheadRoundWhiteSlashedLarge",
                    "noteheadRoundBlackSlashed",
                    "noteheadRoundWhiteSlashed",
                    "noteheadSquareBlackLarge",
                    "noteheadSquareBlackWhite",
                    "noteheadRoundBlackDoubleSlashed",
                    "noteheadRoundWhiteDoubleSlashed",
                    "noteheadClusterSquareWhite",
                    "noteheadClusterSquareBlack",
                    "noteheadClusterRoundWhite",
                    "noteheadClusterRoundBlack",
                    "noteheadClusterDoubleWhole2nd",
                    "noteheadClusterWhole2nd",
                    "noteheadClusterHalf2nd",
                    "noteheadClusterQuarter2nd",
                    "noteheadClusterDoubleWhole3rd",
                    "noteheadClusterWhole3rd",
                    "noteheadClusterHalf3rd",
                    "noteheadClusterQuarter3rd",
                    "noteheadClusterDoubleWholeTop",
                    "noteheadClusterDoubleWholeMiddle",
                    "noteheadClusterDoubleWholeBottom",
                    "noteheadClusterWholeTop",
                    "noteheadClusterWholeMiddle",
                    "noteheadClusterWholeBottom",
                    "noteheadClusterHalfTop",
                    "noteheadClusterHalfMiddle",
                    "noteheadClusterHalfBottom",
                    "noteheadClusterQuarterTop",
                    "noteheadClusterQuarterMiddle",
                    "noteheadClusterQuarterBottom",
                    "noteheadDiamondClusterWhite2nd",
                    "noteheadDiamondClusterBlack2nd",
                    "noteheadDiamondClusterWhite3rd",
                    "noteheadDiamondClusterBlack3rd",
                    "noteheadDiamondClusterWhiteTop",
                    "noteheadDiamondClusterWhiteMiddle",
                    "noteheadDiamondClusterWhiteBottom",
                    "noteheadDiamondClusterBlackTop",
                    "noteheadDiamondClusterBlackMiddle",
                    "noteheadDiamondClusterBlackBottom",
                    "noteheadRectangularClusterBlackTop",
                    "noteheadRectangularClusterBlackMiddle",
                    "noteheadRectangularClusterBlackBottom",
                    "noteheadRectangularClusterWhiteTop",
                    "noteheadRectangularClusterWhiteMiddle",
                    "noteheadRectangularClusterWhiteBottom",
                    "noteDoWhole",
                    "noteReWhole",
                    "noteMiWhole",
                    "noteFaWhole",
                    "noteSoWhole",
                    "noteLaWhole",
                    "noteTiWhole",
                    "noteSiWhole",
                    "noteDoHalf",
                    "noteReHalf",
                    "noteMiHalf",
                    "noteFaHalf",
                    "noteSoHalf",
                    "noteLaHalf",
                    "noteTiHalf",
                    "noteSiHalf",
                    "noteDoBlack",
                    "noteReBlack",
                    "noteMiBlack",
                    "noteFaBlack",
                    "noteSoBlack",
                    "noteLaBlack",
                    "noteTiBlack",
                    "noteSiBlack",
                    "noteAFlatWhole",
                    "noteAWhole",
                    "noteASharpWhole",
                    "noteBFlatWhole",
                    "noteBWhole",
                    "noteBSharpWhole",
                    "noteCFlatWhole",
                    "noteCWhole",
                    "noteCSharpWhole",
                    "noteDFlatWhole",
                    "noteDWhole",
                    "noteDSharpWhole",
                    "noteEFlatWhole",
                    "noteEWhole",
                    "noteESharpWhole",
                    "noteFFlatWhole",
                    "noteFWhole",
                    "noteFSharpWhole",
                    "noteGFlatWhole",
                    "noteGWhole",
                    "noteGSharpWhole",
                    "noteHWhole",
                    "noteHSharpWhole",
                    "noteAFlatHalf",
                    "noteAHalf",
                    "noteASharpHalf",
                    "noteBFlatHalf",
                    "noteBHalf",
                    "noteBSharpHalf",
                    "noteCFlatHalf",
                    "noteCHalf",
                    "noteCSharpHalf",
                    "noteDFlatHalf",
                    "noteDHalf",
                    "noteDSharpHalf",
                    "noteEFlatHalf",
                    "noteEHalf",
                    "noteESharpHalf",
                    "noteFFlatHalf",
                    "noteFHalf",
                    "noteFSharpHalf",
                    "noteGFlatHalf",
                    "noteGHalf",
                    "noteGSharpHalf",
                    "noteHHalf",
                    "noteHSharpHalf",
                    "noteAFlatBlack",
                    "noteABlack",
                    "noteASharpBlack",
                    "noteBFlatBlack",
                    "noteBBlack",
                    "noteBSharpBlack",
                    "noteCFlatBlack",
                    "noteCBlack",
                    "noteCSharpBlack",
                    "noteDFlatBlack",
                    "noteDBlack",
                    "noteDSharpBlack",
                    "noteEFlatBlack",
                    "noteEBlack",
                    "noteESharpBlack",
                    "noteFFlatBlack",
                    "noteFBlack",
                    "noteFSharpBlack",
                    "noteGFlatBlack",
                    "noteGBlack",
                    "noteGSharpBlack",
                    "noteHBlack",
                    "noteHSharpBlack",
                    "noteEmptyWhole",
                    "noteEmptyHalf",
                    "noteEmptyBlack",
                    "noteShapeRoundDoubleWhole",
                    "noteShapeSquareDoubleWhole",
                    "noteShapeTriangleRightDoubleWhole",
                    "noteShapeTriangleLeftDoubleWhole",
                    "noteShapeDiamondDoubleWhole",
                    "noteShapeTriangleUpDoubleWhole",
                    "noteShapeMoonDoubleWhole",
                    "noteShapeTriangleRoundDoubleWhole",
                    "noteShapeKeystoneDoubleWhole",
                    "noteShapeQuarterMoonDoubleWhole",
                    "noteShapeIsoscelesTriangleDoubleWhole",
                    "noteShapeMoonLeftDoubleWhole",
                    "noteShapeArrowheadLeftDoubleWhole",
                    "noteShapeTriangleRoundLeftDoubleWhole"
                ],
                "octaves": [
                    "ottava",
                    "ottavaAlta",
                    "ottavaBassa",
                    "ottavaBassaBa",
                    "quindicesima",
                    "quindicesimaAlta",
                    "quindicesimaBassa",
                    "ventiduesima",
                    "ventiduesimaAlta",
                    "ventiduesimaBassa",
                    "octaveParensLeft",
                    "octaveParensRight",
                    "ottavaBassaVb",
                    "quindicesimaBassaMb",
                    "ventiduesimaBassaMb",
                    "octaveBassa",
                    "octaveLoco",
                    "octaveBaselineA",
                    "octaveSuperscriptA",
                    "octaveBaselineB",
                    "octaveSuperscriptB",
                    "octaveBaselineM",
                    "octaveSuperscriptM",
                    "octaveBaselineV",
                    "octaveSuperscriptV"
                ],
                "ornaments": [
                    "graceNoteAcciaccaturaStemUp",
                    "graceNoteAcciaccaturaStemDown",
                    "graceNoteAppoggiaturaStemUp",
                    "graceNoteAppoggiaturaStemDown",
                    "graceNoteSlashStemUp",
                    "graceNoteSlashStemDown",
                    "ornamentTrill",
                    "ornamentTurn",
                    "ornamentTurnInverted",
                    "ornamentTurnSlash",
                    "ornamentTurnUp",
                    "ornamentTurnUpS",
                    "ornamentMordent",
                    "ornamentMordentInverted",
                    "ornamentTremblement",
                    "ornamentHaydn",
                    "ornamentPortDeVoixV",
                    "ornamentRightFacingHalfCircle",
                    "ornamentLeftFacingHalfCircle",
                    "ornamentRightFacingHook",
                    "ornamentLeftFacingHook",
                    "ornamentHookBeforeNote",
                    "ornamentHookAfterNote",
                    "ornamentUpCurve",
                    "ornamentDownCurve",
                    "ornamentShortObliqueLineBeforeNote",
                    "ornamentShortObliqueLineAfterNote",
                    "ornamentObliqueLineBeforeNote",
                    "ornamentObliqueLineAfterNote",
                    "ornamentDoubleObliqueLinesBeforeNote",
                    "ornamentDoubleObliqueLinesAfterNote",
                    "ornamentObliqueLineHorizBeforeNote",
                    "ornamentObliqueLineHorizAfterNote",
                    "ornamentComma",
                    "ornamentShake3",
                    "ornamentVerticalLine",
                    "ornamentShakeMuffat1",
                    "glissandoUp",
                    "glissandoDown",
                    "ornamentSchleifer",
                    "ornamentPinceCouperin",
                    "ornamentTremblementCouperin",
                    "ornamentPrecompSlide",
                    "ornamentPrecompDescendingSlide",
                    "ornamentPrecompAppoggTrill",
                    "ornamentPrecompAppoggTrillSuffix",
                    "ornamentPrecompTurnTrillDAnglebert",
                    "ornamentPrecompSlideTrillDAnglebert",
                    "ornamentPrecompSlideTrillMarpurg",
                    "ornamentPrecompTurnTrillBach",
                    "ornamentPrecompSlideTrillBach",
                    "ornamentPrecompSlideTrillMuffat",
                    "ornamentPrecompSlideTrillSuffixMuffat",
                    "ornamentPrecompTrillSuffixDandrieu",
                    "ornamentPrecompPortDeVoixMordent"
                ],
                "parenthesesNotehead": [
                    "noteheadParenthesisLeft",
                    "noteheadParenthesisRight"
                ],
                "pauses": [
                    "fermataAbove",
                    "fermataBelow",
                    "fermataVeryShortAbove",
                    "fermataVeryShortBelow",
                    "fermataShortAbove",
                    "fermataShortBelow",
                    "fermataLongAbove",
                    "fermataLongBelow",
                    "fermataVeryLongAbove",
                    "fermataVeryLongBelow",
                    "fermataLongHenzeAbove",
                    "fermataLongHenzeBelow",
                    "fermataShortHenzeAbove",
                    "fermataShortHenzeBelow",
                    "breathMarkComma",
                    "caesura",
                    "caesuraThick",
                    "caesuraShort",
                    "breathMarkSalzedo",
                    "curlewSign"
                ],
                "pausesAbove": [
                    "fermataAbove",
                    "fermataVeryShortAbove",
                    "fermataShortAbove",
                    "fermataLongAbove",
                    "fermataVeryLongAbove",
                    "fermataLongHenzeAbove",
                    "fermataShortHenzeAbove"
                ],
                "pausesBelow": [
                    "fermataBelow",
                    "fermataVeryShortBelow",
                    "fermataShortBelow",
                    "fermataLongBelow",
                    "fermataVeryLongBelow",
                    "fermataLongHenzeBelow",
                    "fermataShortHenzeBelow"
                ],
                "rests": [
                    "restMaxima",
                    "restLonga",
                    "restDoubleWhole",
                    "restWhole",
                    "restHalf",
                    "restQuarter",
                    "rest8th",
                    "rest16th",
                    "rest32nd",
                    "rest64th",
                    "rest128th",
                    "rest256th",
                    "rest512th",
                    "rest1024th",
                    "restHBar",
                    "restHBarLeft",
                    "restHBarRight",
                    "restQuarterOld",
                    "restDoubleWholeLegerLine",
                    "restWholeLegerLine",
                    "restHalfLegerLine",
                    "restQuarterZ"
                ],
                "stemDecorations": [
                    "tremolo1",
                    "tremolo2",
                    "tremolo3",
                    "tremolo4",
                    "tremolo5",
                    "buzzRoll",
                    "pendereckiTremolo",
                    "unmeasuredTremolo",
                    "unmeasuredTremoloSimple",
                    "windMultiphonicsBlackStem",
                    "windMultiphonicsWhiteStem",
                    "windMultiphonicsBlackWhiteStem",
                    "stringsBowBehindBridge",
                    "stringsBowOnBridge",
                    "stringsBowOnTailpiece",
                    "stringsVibratoPulse",
                    "pluckedDampOnStem",
                    "vocalSprechgesang",
                    "vocalsSussurando",
                    "harpStringNoiseStem",
                    "pictRimShotOnStem",
                    "pictSwishStem",
                    "pictTurnRightStem",
                    "pictTurnLeftStem",
                    "pictTurnRightLeftStem",
                    "pictCrushStem",
                    "pictDeadNoteStem",
                    "accdnRicochetStem2",
                    "accdnRicochetStem3",
                    "accdnRicochetStem4",
                    "accdnRicochetStem5",
                    "accdnRicochetStem6"
                ],
                "tf_chordSymbols": [
                    "csymDiminished",
                    "csymHalfDiminished",
                    "csymAugmented",
                    "csymMajorSeventh"
                ],
                "tf_daseianNotation": [
                    "daseianGraves1",
                    "daseianGraves2",
                    "daseianGraves3",
                    "daseianGraves4",
                    "daseianFinales1",
                    "daseianFinales2",
                    "daseianFinales3",
                    "daseianFinales4",
                    "daseianSuperiores1",
                    "daseianSuperiores2",
                    "daseianSuperiores3",
                    "daseianSuperiores4",
                    "daseianExcellentes1",
                    "daseianExcellentes2",
                    "daseianExcellentes3",
                    "daseianExcellentes4",
                    "daseianResidua1",
                    "daseianResidua2"
                ],
                "tf_figuredBass": [
                    "figbass0",
                    "figbass1",
                    "figbass2",
                    "figbass2Raised",
                    "figbass3",
                    "figbass4",
                    "figbass4Raised",
                    "figbass5",
                    "figbass5Raised1",
                    "figbass5Raised2",
                    "figbass5Raised3",
                    "figbass6",
                    "figbass6Raised",
                    "figbass7",
                    "figbass7Raised1",
                    "figbass7Raised2",
                    "figbass8",
                    "figbass9",
                    "figbass9Raised",
                    "figbassDoubleFlat",
                    "figbassFlat",
                    "figbassNatural",
                    "figbassSharp",
                    "figbassDoubleSharp",
                    "figbassBracketLeft",
                    "figbassBracketRight",
                    "figbassParensLeft",
                    "figbassParensRight",
                    "figbassPlus",
                    "figbassCombiningRaising",
                    "figbassCombiningLowering",
                    "figbass7Diminished",
                    "fingering0",
                    "fingering1",
                    "fingering2",
                    "fingering3",
                    "fingering4",
                    "fingering5",
                    "fingeringTUpper",
                    "fingeringPLower",
                    "fingeringTLower",
                    "fingeringILower",
                    "fingeringMLower",
                    "fingeringALower",
                    "fingeringCLower",
                    "fingeringXLower",
                    "fingeringELower",
                    "fingeringOLower",
                    "fingeringSubstitutionAbove",
                    "fingeringSubstitutionBelow",
                    "fingeringSubstitutionDash",
                    "fingeringMultipleNotes"
                ],
                "tf_hairpins": [
                    "dynamicCrescendoHairpin",
                    "dynamicDiminuendoHairpin",
                    "dynamicMessaDiVoce"
                ],
                "tf_harpPedals": [
                    "harpPedalRaised",
                    "harpPedalCentered",
                    "harpPedalLowered",
                    "harpPedalDivider"
                ],
                "tf_metronomeMarks": [
                    "metNoteDoubleWhole",
                    "metNoteDoubleWholeSquare",
                    "metNoteWhole",
                    "metNoteHalfUp",
                    "metNoteHalfDown",
                    "metNoteQuarterUp",
                    "metNoteQuarterDown",
                    "metNote8thUp",
                    "metNote8thDown",
                    "metNote16thUp",
                    "metNote16thDown",
                    "metNote32ndUp",
                    "metNote32ndDown",
                    "metNote64thUp",
                    "metNote64thDown",
                    "metNote128thUp",
                    "metNote128thDown",
                    "metNote256thUp",
                    "metNote256thDown",
                    "metNote512thUp",
                    "metNote512thDown",
                    "metNote1024thUp",
                    "metNote1024thDown",
                    "metAugmentationDot"
                ],
                "tf_ornaments": [
                    "graceNoteAcciaccaturaStemUp",
                    "graceNoteAcciaccaturaStemDown",
                    "graceNoteAppoggiaturaStemUp",
                    "graceNoteAppoggiaturaStemDown",
                    "graceNoteSlashStemUp",
                    "graceNoteSlashStemDown",
                    "ornamentTrill",
                    "ornamentTurn",
                    "ornamentTurnInverted",
                    "ornamentTurnSlash",
                    "ornamentTurnUp",
                    "ornamentTurnUpS",
                    "ornamentMordent",
                    "ornamentMordentInverted",
                    "ornamentTremblement",
                    "ornamentHaydn",
                    "ornamentPortDeVoixV",
                    "ornamentRightFacingHalfCircle",
                    "ornamentLeftFacingHalfCircle",
                    "ornamentRightFacingHook",
                    "ornamentLeftFacingHook",
                    "ornamentHookBeforeNote",
                    "ornamentHookAfterNote",
                    "ornamentUpCurve",
                    "ornamentDownCurve",
                    "ornamentShortObliqueLineBeforeNote",
                    "ornamentShortObliqueLineAfterNote",
                    "ornamentObliqueLineBeforeNote",
                    "ornamentObliqueLineAfterNote",
                    "ornamentDoubleObliqueLinesBeforeNote",
                    "ornamentDoubleObliqueLinesAfterNote",
                    "ornamentObliqueLineHorizBeforeNote",
                    "ornamentObliqueLineHorizAfterNote",
                    "ornamentComma",
                    "ornamentShake3",
                    "ornamentVerticalLine",
                    "ornamentShakeMuffat1",
                    "glissandoUp",
                    "glissandoDown",
                    "ornamentSchleifer",
                    "ornamentTopLeftConcaveStroke",
                    "ornamentTopLeftConvexStroke",
                    "ornamentHighLeftConcaveStroke",
                    "ornamentHighLeftConvexStroke",
                    "ornamentLeftVerticalStroke",
                    "ornamentLeftVerticalStrokeWithCross",
                    "ornamentLeftShakeT",
                    "ornamentLeftPlus",
                    "ornamentLowLeftConcaveStroke",
                    "ornamentLowLeftConvexStroke",
                    "ornamentBottomLeftConcaveStroke",
                    "ornamentBottomLeftConcaveStrokeLarge",
                    "ornamentBottomLeftConvexStroke",
                    "ornamentZigZagLineNoRightEnd",
                    "ornamentZigZagLineWithRightEnd",
                    "ornamentMiddleVerticalStroke",
                    "ornamentTopRightConcaveStroke",
                    "ornamentTopRightConvexStroke",
                    "ornamentHighRightConcaveStroke",
                    "ornamentHighRightConvexStroke",
                    "ornamentRightVerticalStroke",
                    "ornamentLowRightConcaveStroke",
                    "ornamentLowRightConvexStroke",
                    "ornamentBottomRightConcaveStroke",
                    "ornamentBottomRightConvexStroke",
                    "ornamentPrecompSlide",
                    "ornamentPrecompDescendingSlide",
                    "ornamentPrecompAppoggTrill",
                    "ornamentPrecompAppoggTrillSuffix",
                    "ornamentPrecompTurnTrillDAnglebert",
                    "ornamentPrecompSlideTrillDAnglebert",
                    "ornamentPrecompSlideTrillMarpurg",
                    "ornamentPrecompTurnTrillBach",
                    "ornamentPrecompSlideTrillBach",
                    "ornamentPrecompSlideTrillMuffat",
                    "ornamentPrecompSlideTrillSuffixMuffat",
                    "ornamentPrecompTrillSuffixDandrieu",
                    "ornamentPrecompPortDeVoixMordent",
                    "ornamentPrecompTrillWithMordent",
                    "ornamentPrecompCadence",
                    "ornamentPrecompCadenceWithTurn",
                    "ornamentPrecompDoubleCadenceLowerPrefix",
                    "ornamentPrecompCadenceUpperPrefix",
                    "ornamentPrecompCadenceUpperPrefixTurn",
                    "ornamentPrecompDoubleCadenceUpperPrefix",
                    "ornamentPrecompDoubleCadenceUpperPrefixTurn",
                    "ornamentPrecompMordentRelease",
                    "ornamentPrecompMordentUpperPrefix",
                    "ornamentPrecompInvertedMordentUpperPrefix",
                    "ornamentPrecompTrillLowerSuffix"
                ],
                "tf_pedals": [
                    "keyboardPedalPed",
                    "keyboardPedalP",
                    "keyboardPedalE",
                    "keyboardPedalD",
                    "keyboardPedalDot",
                    "keyboardPedalUp",
                    "keyboardPedalHalf",
                    "keyboardPedalUpNotch",
                    "keyboardPedalHyphen",
                    "keyboardPedalSost",
                    "keyboardPedalS"
                ],
                "tf_pictograms": [
                    "pictGlsp",
                    "pictXyl",
                    "pictXylTenor",
                    "pictXylBass",
                    "pictXylTrough",
                    "pictXylTenorTrough",
                    "pictMar",
                    "pictVib",
                    "pictVibMotorOff",
                    "pictEmptyTrap",
                    "pictGlspSmithBrindle",
                    "pictXylSmithBrindle",
                    "pictMarSmithBrindle",
                    "pictVibSmithBrindle",
                    "pictCrotales",
                    "pictSteelDrums",
                    "pictCelesta",
                    "pictLithophone",
                    "pictTubaphone",
                    "pictTubularBells",
                    "pictWindChimesGlass",
                    "pictChimes",
                    "pictBambooChimes",
                    "pictShellChimes",
                    "pictGlassTubeChimes",
                    "pictGlassPlateChimes",
                    "pictMetalTubeChimes",
                    "pictMetalPlateChimes",
                    "pictTimpani",
                    "pictSnareDrum",
                    "pictSnareDrumSnaresOff",
                    "pictSnareDrumMilitary",
                    "pictBassDrum",
                    "pictBassDrumOnSide",
                    "pictTenorDrum",
                    "pictTomTom",
                    "pictTomTomChinese",
                    "pictTomTomJapanese",
                    "pictTomTomIndoAmerican",
                    "pictTambourine",
                    "pictTimbales",
                    "pictBongos",
                    "pictConga",
                    "pictLogDrum",
                    "pictSlitDrum",
                    "pictBrakeDrum",
                    "pictGobletDrum",
                    "pictTabla",
                    "pictCuica",
                    "pictWoodBlock",
                    "pictTempleBlocks",
                    "pictClaves",
                    "pictGuiro",
                    "pictRatchet",
                    "pictFootballRatchet",
                    "pictWhip",
                    "pictBoardClapper",
                    "pictCastanets",
                    "pictCastanetsWithHandle",
                    "pictQuijada",
                    "pictBambooScraper",
                    "pictRecoReco",
                    "pictTriangle",
                    "pictAnvil",
                    "pictSleighBell",
                    "pictCowBell",
                    "pictAlmglocken",
                    "pictBellPlate",
                    "pictBell",
                    "pictHandbell",
                    "pictCencerro",
                    "pictAgogo",
                    "pictShellBells",
                    "pictJingleBells",
                    "pictBellTree",
                    "pictCrashCymbals",
                    "pictSuspendedCymbal",
                    "pictHiHat",
                    "pictHiHatOnStand",
                    "pictSizzleCymbal",
                    "pictVietnameseHat",
                    "pictChineseCymbal",
                    "pictFingerCymbals",
                    "pictCymbalTongs",
                    "pictEdgeOfCymbal",
                    "pictBellOfCymbal",
                    "pictTamTam",
                    "pictTamTamWithBeater",
                    "pictGong",
                    "pictGongWithButton",
                    "pictSlideBrushOnGong",
                    "pictFlexatone",
                    "pictMaraca",
                    "pictMaracas",
                    "pictCabasa",
                    "pictThundersheet",
                    "pictVibraslap",
                    "pictSistrum",
                    "pictRainstick",
                    "pictChainRattle",
                    "pictSlideWhistle",
                    "pictBirdWhistle",
                    "pictPoliceWhistle",
                    "pictSiren",
                    "pictWindMachine",
                    "pictCarHorn",
                    "pictKlaxonHorn",
                    "pictDuckCall",
                    "pictWindWhistle",
                    "pictMegaphone",
                    "pictLotusFlute",
                    "pictPistolShot",
                    "pictCannon",
                    "pictSandpaperBlocks",
                    "pictLionsRoar",
                    "pictGlassHarp",
                    "pictGlassHarmonica",
                    "pictMusicalSaw",
                    "pictJawHarp",
                    "pictBeaterSoftXylophoneUp",
                    "pictBeaterSoftXylophoneDown",
                    "pictBeaterSoftXylophoneRight",
                    "pictBeaterSoftXylophoneLeft",
                    "pictBeaterMediumXylophoneUp",
                    "pictBeaterMediumXylophoneDown",
                    "pictBeaterMediumXylophoneRight",
                    "pictBeaterMediumXylophoneLeft",
                    "pictBeaterHardXylophoneUp",
                    "pictBeaterHardXylophoneDown",
                    "pictBeaterHardXylophoneRight",
                    "pictBeaterHardXylophoneLeft",
                    "pictBeaterWoodXylophoneUp",
                    "pictBeaterWoodXylophoneDown",
                    "pictBeaterWoodXylophoneRight",
                    "pictBeaterWoodXylophoneLeft",
                    "pictBeaterSoftGlockenspielUp",
                    "pictBeaterSoftGlockenspielDown",
                    "pictBeaterSoftGlockenspielRight",
                    "pictBeaterSoftGlockenspielLeft",
                    "pictBeaterHardGlockenspielUp",
                    "pictBeaterHardGlockenspielDown",
                    "pictBeaterHardGlockenspielRight",
                    "pictBeaterHardGlockenspielLeft",
                    "pictBeaterSoftTimpaniUp",
                    "pictBeaterSoftTimpaniDown",
                    "pictBeaterSoftTimpaniRight",
                    "pictBeaterSoftTimpaniLeft",
                    "pictBeaterMediumTimpaniUp",
                    "pictBeaterMediumTimpaniDown",
                    "pictBeaterMediumTimpaniRight",
                    "pictBeaterMediumTimpaniLeft",
                    "pictBeaterHardTimpaniUp",
                    "pictBeaterHardTimpaniDown",
                    "pictBeaterHardTimpaniRight",
                    "pictBeaterHardTimpaniLeft",
                    "pictBeaterWoodTimpaniUp",
                    "pictBeaterWoodTimpaniDown",
                    "pictBeaterWoodTimpaniRight",
                    "pictBeaterWoodTimpaniLeft",
                    "pictBeaterSoftBassDrumUp",
                    "pictBeaterSoftBassDrumDown",
                    "pictBeaterMediumBassDrumUp",
                    "pictBeaterMediumBassDrumDown",
                    "pictBeaterHardBassDrumUp",
                    "pictBeaterHardBassDrumDown",
                    "pictBeaterMetalBassDrumUp",
                    "pictBeaterMetalBassDrumDown",
                    "pictBeaterDoubleBassDrumUp",
                    "pictBeaterDoubleBassDrumDown",
                    "pictBeaterSoftYarnUp",
                    "pictBeaterSoftYarnDown",
                    "pictBeaterSoftYarnRight",
                    "pictBeaterSoftYarnLeft",
                    "pictBeaterMediumYarnUp",
                    "pictBeaterMediumYarnDown",
                    "pictBeaterMediumYarnRight",
                    "pictBeaterMediumYarnLeft",
                    "pictBeaterHardYarnUp",
                    "pictBeaterHardYarnDown",
                    "pictBeaterHardYarnRight",
                    "pictBeaterHardYarnLeft",
                    "pictBeaterSuperballUp",
                    "pictBeaterSuperballDown",
                    "pictBeaterSuperballRight",
                    "pictBeaterSuperballLeft",
                    "pictSuperball",
                    "pictWoundHardUp",
                    "pictWoundHardDown",
                    "pictWoundHardRight",
                    "pictWoundHardLeft",
                    "pictWoundSoftUp",
                    "pictWoundSoftDown",
                    "pictWoundSoftRight",
                    "pictWoundSoftLeft",
                    "pictGumSoftUp",
                    "pictGumSoftDown",
                    "pictGumSoftRight",
                    "pictGumSoftLeft",
                    "pictGumMediumUp",
                    "pictGumMediumDown",
                    "pictGumMediumRight",
                    "pictGumMediumLeft",
                    "pictGumHardUp",
                    "pictGumHardDown",
                    "pictGumHardRight",
                    "pictGumHardLeft",
                    "pictBeaterMetalUp",
                    "pictBeaterMetalDown",
                    "pictBeaterMetalRight",
                    "pictBeaterMetalLeft",
                    "pictBeaterHammerWoodUp",
                    "pictBeaterHammerWoodDown",
                    "pictBeaterHammerPlasticUp",
                    "pictBeaterHammerPlasticDown",
                    "pictBeaterHammerMetalUp",
                    "pictBeaterHammerMetalDown",
                    "pictBeaterSnareSticksUp",
                    "pictBeaterSnareSticksDown",
                    "pictBeaterJazzSticksUp",
                    "pictStickShot",
                    "pictScrapeCenterToEdge",
                    "pictScrapeEdgeToCenter",
                    "pictScrapeAroundRim",
                    "pictOnRim",
                    "pictOpenRimShot",
                    "pictHalfOpen1",
                    "pictHalfOpen2",
                    "pictOpen",
                    "pictDamp1",
                    "pictDamp2",
                    "pictDamp3",
                    "pictDamp4",
                    "pictRimShotOnStem",
                    "pictCenter1",
                    "pictCenter2",
                    "pictCenter3",
                    "pictRim1",
                    "pictRim2",
                    "pictRim3",
                    "pictNormalPosition",
                    "pictChokeCymbal",
                    "pictRightHandSquare",
                    "pictLeftHandCircle",
                    "pictSwishStem",
                    "pictTurnRightStem",
                    "pictTurnLeftStem",
                    "pictTurnRightLeftStem",
                    "pictCrushStem",
                    "pictDeadNoteStem",
                    "accdnRH3RanksPiccolo",
                    "accdnRH3RanksClarinet",
                    "accdnRH3RanksUpperTremolo8",
                    "accdnRH3RanksLowerTremolo8",
                    "accdnRH3RanksBassoon",
                    "accdnRH3RanksOboe",
                    "accdnRH3RanksViolin",
                    "accdnRH3RanksImitationMusette",
                    "accdnRH3RanksAuthenticMusette",
                    "accdnRH3RanksOrgan",
                    "accdnRH3RanksHarmonium",
                    "accdnRH3RanksBandoneon",
                    "accdnRH3RanksAccordion",
                    "accdnRH3RanksMaster",
                    "accdnRH3RanksTwoChoirs",
                    "accdnRH3RanksTremoloLower8ve",
                    "accdnRH3RanksTremoloUpper8ve",
                    "accdnRH3RanksDoubleTremoloLower8ve",
                    "accdnRH3RanksDoubleTremoloUpper8ve",
                    "accdnRH3RanksFullFactory",
                    "accdnRH4RanksSoprano",
                    "accdnRH4RanksAlto",
                    "accdnRH4RanksTenor",
                    "accdnRH4RanksMaster",
                    "accdnRH4RanksSoftBass",
                    "accdnRH4RanksSoftTenor",
                    "accdnRH4RanksBassAlto",
                    "accdnLH2Ranks8Round",
                    "accdnLH2Ranks16Round",
                    "accdnLH2Ranks8Plus16Round",
                    "accdnLH2RanksMasterRound",
                    "accdnLH2RanksMasterPlus16Round",
                    "accdnLH2RanksFullMasterRound",
                    "accdnLH3Ranks8Square",
                    "accdnLH3Ranks2Square",
                    "accdnLH3RanksDouble8Square",
                    "accdnLH3Ranks2Plus8Square",
                    "accdnLH3RanksTuttiSquare",
                    "accdnCombRH3RanksEmpty",
                    "accdnCombRH4RanksEmpty",
                    "accdnCombLH2RanksEmpty",
                    "accdnCombLH3RanksEmptySquare",
                    "accdnCombDot",
                    "accdnPush",
                    "accdnPull",
                    "accdnRicochet2",
                    "accdnRicochet3",
                    "accdnRicochet4",
                    "accdnRicochet5",
                    "accdnRicochet6",
                    "accdnRicochetStem2",
                    "accdnRicochetStem3",
                    "accdnRicochetStem4",
                    "accdnRicochetStem5",
                    "accdnRicochetStem6"
                ],
                "tf_prolations": [
                    "mensuralProportionMinor",
                    "mensuralProportionMajor",
                    "mensuralModusPerfectumVert",
                    "mensuralModusImperfectumVert",
                    "mensuralTempusPerfectumHoriz",
                    "mensuralTempusImperfectumHoriz"
                ],
                "tf_zeroWidth": [
                    "staff1Line",
                    "staff2Lines",
                    "staff3Lines",
                    "staff4Lines",
                    "staff5Lines",
                    "staff6Lines",
                    "staff1LineWide",
                    "staff2LinesWide",
                    "staff3LinesWide",
                    "staff4LinesWide",
                    "staff5LinesWide",
                    "staff6LinesWide",
                    "staff1LineNarrow",
                    "staff2LinesNarrow",
                    "staff3LinesNarrow",
                    "staff4LinesNarrow",
                    "staff5LinesNarrow",
                    "staff6LinesNarrow",
                    "legerLine",
                    "legerLineWide",
                    "legerLineNarrow",
                    "timeSig0",
                    "timeSig1",
                    "timeSig2",
                    "timeSig3",
                    "timeSig4",
                    "timeSig5",
                    "timeSig6",
                    "timeSig7",
                    "timeSig8",
                    "timeSig9",
                    "pictBeaterSoftXylophoneLeft",
                    "pictBeaterMediumXylophoneLeft",
                    "pictBeaterHardXylophoneLeft",
                    "pictBeaterWoodXylophoneLeft",
                    "pictBeaterSoftGlockenspielLeft",
                    "pictBeaterHardGlockenspielLeft",
                    "pictBeaterSoftTimpaniLeft",
                    "pictBeaterMediumTimpaniLeft",
                    "pictBeaterHardTimpaniLeft",
                    "pictBeaterWoodTimpaniLeft",
                    "pictBeaterSoftYarnLeft",
                    "pictBeaterMediumYarnLeft",
                    "pictBeaterHardYarnLeft",
                    "pictBeaterSuperballLeft",
                    "pictWoundHardLeft",
                    "pictWoundSoftLeft",
                    "pictGumSoftLeft",
                    "pictGumMediumLeft",
                    "pictGumHardLeft",
                    "pictBeaterMetalLeft",
                    "pictBeaterCombiningParentheses",
                    "pictBeaterCombiningDashedCircle",
                    "pictBeaterBox",
                    "chantStaff",
                    "chantStaffWide",
                    "chantStaffNarrow",
                    "luteStaff6Lines",
                    "luteStaff6LinesWide",
                    "luteStaff6LinesNarrow"
                ],
                "wigglesArpeggiato": [
                    "wiggleArpeggiatoUp",
                    "wiggleArpeggiatoDown",
                    "wiggleArpeggiatoUpSwash",
                    "wiggleArpeggiatoDownSwash",
                    "wiggleArpeggiatoUpArrow",
                    "wiggleArpeggiatoDownArrow"
                ],
                "wigglesArpeggiatoDown": [
                    "wiggleArpeggiatoDown",
                    "wiggleArpeggiatoDownSwash",
                    "wiggleArpeggiatoDownArrow"
                ],
                "wigglesArpeggiatoUp": [
                    "wiggleArpeggiatoUp",
                    "wiggleArpeggiatoUpSwash",
                    "wiggleArpeggiatoUpArrow"
                ],
                "wigglesCircularMotion": [
                    "wiggleCircularStart",
                    "wiggleCircularLargest",
                    "wiggleCircularLargerStill",
                    "wiggleCircularLarger",
                    "wiggleCircularLarge",
                    "wiggleCircular",
                    "wiggleCircularSmall",
                    "wiggleCircularEnd"
                ],
                "wigglesQuasiRandom": [
                    "wiggleRandom1",
                    "wiggleRandom2",
                    "wiggleRandom3",
                    "wiggleRandom4"
                ],
                "wigglesTrill": [
                    "wiggleTrillFastest",
                    "wiggleTrillFasterStill",
                    "wiggleTrillFaster",
                    "wiggleTrillFast",
                    "wiggleTrill",
                    "wiggleTrillSlow",
                    "wiggleTrillSlower",
                    "wiggleTrillSlowerStill",
                    "wiggleTrillSlowest"
                ],
                "wigglesVibrato": [
                    "wiggleVibrato",
                    "wiggleVibratoWide",
                    "guitarVibratoStroke",
                    "guitarWideVibratoStroke"
                ],
                "wigglesVibratoVariable": [
                    "wiggleVibratoStart",
                    "wiggleVibratoSmallestFastest",
                    "wiggleVibratoSmallestFasterStill",
                    "wiggleVibratoSmallestFaster",
                    "wiggleVibratoSmallestFast",
                    "wiggleVibratoSmallestSlow",
                    "wiggleVibratoSmallestSlower",
                    "wiggleVibratoSmallestSlowest",
                    "wiggleVibratoSmallFastest",
                    "wiggleVibratoSmallFasterStill",
                    "wiggleVibratoSmallFaster",
                    "wiggleVibratoSmallFast",
                    "wiggleVibratoSmallSlow",
                    "wiggleVibratoSmallSlower",
                    "wiggleVibratoSmallSlowest",
                    "wiggleVibratoMediumFastest",
                    "wiggleVibratoMediumFasterStill",
                    "wiggleVibratoMediumFaster",
                    "wiggleVibratoMediumFast",
                    "wiggleVibratoMediumSlow",
                    "wiggleVIbratoMediumSlower",
                    "wiggleVibratoMediumSlowest",
                    "wiggleVibratoLargeFastest",
                    "wiggleVibratoLargeFasterStill",
                    "wiggleVibratoLargeFaster",
                    "wiggleVibratoLargeFast",
                    "wiggleVibratoLargeSlow",
                    "wiggleVibratoLargeSlower",
                    "wiggleVibratoLargeSlowest",
                    "wiggleVibratoLargestFastest",
                    "wiggleVibratoLargestFasterStill",
                    "wiggleVibratoLargestFaster",
                    "wiggleVibratoLargestFast",
                    "wiggleVibratoLargestSlow",
                    "wiggleVIbratoLargestSlower",
                    "wiggleVibratoLargestSlowest"
                ]
            };
        })(Metadata = Smufl.Metadata || (Smufl.Metadata = {}));
    })(Smufl = Core.Smufl || (Core.Smufl = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var Smufl;
    (function (Smufl) {
        var Metadata;
        (function (Metadata) {
            Metadata.Glyphes = {
                "4stringTabClef": {
                    "codepoint": 0xE06E,
                    "description": "4-string tab clef"
                },
                "6stringTabClef": {
                    "codepoint": 0xE06D,
                    "description": "6-string tab clef"
                },
                "accSagittal11LargeDiesisDown": {
                    "codepoint": 0xE30D,
                    "description": "11 large diesis down, 3\u00b0 down [46 EDO]"
                },
                "accSagittal11LargeDiesisUp": {
                    "codepoint": 0xE30C,
                    "description": "11 large diesis up, (11L), (sharp less 11M), 3\u00b0 up [46 EDO]"
                },
                "accSagittal11MediumDiesisDown": {
                    "codepoint": 0xE30B,
                    "description": "11 medium diesis down, 1\u00b0[17 31] 2\u00b046 down, 1/4-tone down"
                },
                "accSagittal11MediumDiesisUp": {
                    "codepoint": 0xE30A,
                    "description": "11 medium diesis up, (11M), 1\u00b0[17 31] 2\u00b046 up, 1/4-tone up"
                },
                "accSagittal11v19LargeDiesisDown": {
                    "codepoint": 0xE3AB,
                    "description": "11:19 large diesis down"
                },
                "accSagittal11v19LargeDiesisUp": {
                    "codepoint": 0xE3AA,
                    "description": "11:19 large diesis up, (11:19L, apotome less 11:19M)"
                },
                "accSagittal11v19MediumDiesisDown": {
                    "codepoint": 0xE3A3,
                    "description": "11:19 medium diesis down"
                },
                "accSagittal11v19MediumDiesisUp": {
                    "codepoint": 0xE3A2,
                    "description": "11:19 medium diesis up, (11:19M, 11M plus 19s)"
                },
                "accSagittal11v49CommaDown": {
                    "codepoint": 0xE397,
                    "description": "11:49 comma down"
                },
                "accSagittal11v49CommaUp": {
                    "codepoint": 0xE396,
                    "description": "11:49 comma up, (11:49C, 11M less 49C)"
                },
                "accSagittal143CommaDown": {
                    "codepoint": 0xE395,
                    "description": "143 comma down"
                },
                "accSagittal143CommaUp": {
                    "codepoint": 0xE394,
                    "description": "143 comma up, (143C, 13L less 11M)"
                },
                "accSagittal17CommaDown": {
                    "codepoint": 0xE343,
                    "description": "17 comma down"
                },
                "accSagittal17CommaUp": {
                    "codepoint": 0xE342,
                    "description": "17 comma up, (17C)"
                },
                "accSagittal17KleismaDown": {
                    "codepoint": 0xE393,
                    "description": "17 kleisma down"
                },
                "accSagittal17KleismaUp": {
                    "codepoint": 0xE392,
                    "description": "17 kleisma up, (17k)"
                },
                "accSagittal19CommaDown": {
                    "codepoint": 0xE399,
                    "description": "19 comma down"
                },
                "accSagittal19CommaUp": {
                    "codepoint": 0xE398,
                    "description": "19 comma up, (19C)"
                },
                "accSagittal19SchismaDown": {
                    "codepoint": 0xE391,
                    "description": "19 schisma down"
                },
                "accSagittal19SchismaUp": {
                    "codepoint": 0xE390,
                    "description": "19 schisma up, (19s)"
                },
                "accSagittal23CommaDown": {
                    "codepoint": 0xE371,
                    "description": "23 comma down, 2\u00b0 down [96 EDO], 1/8-tone down"
                },
                "accSagittal23CommaUp": {
                    "codepoint": 0xE370,
                    "description": "23 comma up, (23C), 2\u00b0 up [96 EDO], 1/8-tone up"
                },
                "accSagittal23SmallDiesisDown": {
                    "codepoint": 0xE39F,
                    "description": "23 small diesis down"
                },
                "accSagittal23SmallDiesisUp": {
                    "codepoint": 0xE39E,
                    "description": "23 small diesis up, (23S)"
                },
                "accSagittal25SmallDiesisDown": {
                    "codepoint": 0xE307,
                    "description": "25 small diesis down, 2\u00b0 down [53 EDO]"
                },
                "accSagittal25SmallDiesisUp": {
                    "codepoint": 0xE306,
                    "description": "25 small diesis up, (25S, ~5:13S, ~37S, 5C\u00a0plus\u00a05C), 2\u00b0 up [53 EDO]"
                },
                "accSagittal35LargeDiesisDown": {
                    "codepoint": 0xE30F,
                    "description": "35 large diesis down, 2\u00b0 down [50 EDO], 5/18-tone down"
                },
                "accSagittal35LargeDiesisUp": {
                    "codepoint": 0xE30E,
                    "description": "35 large diesis up, (35L, ~13L, ~125L,  sharp less 35M), 2\u00b050 up"
                },
                "accSagittal35MediumDiesisDown": {
                    "codepoint": 0xE309,
                    "description": "35 medium diesis down, 1\u00b0[50] 2\u00b0[27] down, 2/9-tone down"
                },
                "accSagittal35MediumDiesisUp": {
                    "codepoint": 0xE308,
                    "description": "35 medium diesis up, (35M, ~13M, ~125M, 5C\u00a0plus\u00a07C), 2/9-tone up"
                },
                "accSagittal49LargeDiesisDown": {
                    "codepoint": 0xE3A9,
                    "description": "49 large diesis down"
                },
                "accSagittal49LargeDiesisUp": {
                    "codepoint": 0xE3A8,
                    "description": "49 large diesis up, (49L, ~31L, apotome less 49M)"
                },
                "accSagittal49MediumDiesisDown": {
                    "codepoint": 0xE3A5,
                    "description": "49 medium diesis down"
                },
                "accSagittal49MediumDiesisUp": {
                    "codepoint": 0xE3A4,
                    "description": "49 medium diesis up, (49M, ~31M, 7C plus 7C)"
                },
                "accSagittal49SmallDiesisDown": {
                    "codepoint": 0xE39D,
                    "description": "49 small diesis down"
                },
                "accSagittal49SmallDiesisUp": {
                    "codepoint": 0xE39C,
                    "description": "49 small diesis up, (49S, ~31S)"
                },
                "accSagittal55CommaDown": {
                    "codepoint": 0xE345,
                    "description": "55 comma down, 3\u00b0 down [96 EDO], 3/16-tone down"
                },
                "accSagittal55CommaUp": {
                    "codepoint": 0xE344,
                    "description": "55 comma up, (55C, 11M less 5C), 3\u00b0up [96 EDO], 3/16-tone up"
                },
                "accSagittal5CommaDown": {
                    "codepoint": 0xE303,
                    "description": "5 comma down, 1\u00b0 down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down"
                },
                "accSagittal5CommaUp": {
                    "codepoint": 0xE302,
                    "description": "5 comma up, (5C), 1\u00b0 up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up"
                },
                "accSagittal5v11SmallDiesisDown": {
                    "codepoint": 0xE349,
                    "description": "5:11 small diesis down"
                },
                "accSagittal5v11SmallDiesisUp": {
                    "codepoint": 0xE348,
                    "description": "5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C)"
                },
                "accSagittal5v13LargeDiesisDown": {
                    "codepoint": 0xE3AD,
                    "description": "5:13 large diesis down"
                },
                "accSagittal5v13LargeDiesisUp": {
                    "codepoint": 0xE3AC,
                    "description": "5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M)"
                },
                "accSagittal5v13MediumDiesisDown": {
                    "codepoint": 0xE3A1,
                    "description": "5:13 medium diesis down"
                },
                "accSagittal5v13MediumDiesisUp": {
                    "codepoint": 0xE3A0,
                    "description": "5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C)"
                },
                "accSagittal5v19CommaDown": {
                    "codepoint": 0xE373,
                    "description": "5:19 comma down, 1/20-tone down"
                },
                "accSagittal5v19CommaUp": {
                    "codepoint": 0xE372,
                    "description": "5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up"
                },
                "accSagittal5v23SmallDiesisDown": {
                    "codepoint": 0xE375,
                    "description": "5:23 small diesis down, 2\u00b0 down [60 EDO], 1/5-tone down"
                },
                "accSagittal5v23SmallDiesisUp": {
                    "codepoint": 0xE374,
                    "description": "5:23 small diesis up, (5:23S, 5C plus 23C), 2\u00b0 up [60 EDO], 1/5-tone up"
                },
                "accSagittal5v49MediumDiesisDown": {
                    "codepoint": 0xE3A7,
                    "description": "5:49 medium diesis down"
                },
                "accSagittal5v49MediumDiesisUp": {
                    "codepoint": 0xE3A6,
                    "description": "5:49 medium diesis up, (5:49M, half apotome)"
                },
                "accSagittal5v7KleismaDown": {
                    "codepoint": 0xE301,
                    "description": "5:7 kleisma down"
                },
                "accSagittal5v7KleismaUp": {
                    "codepoint": 0xE300,
                    "description": "5:7 kleisma up, (5:7k, ~11:13k, 7C\u00a0less\u00a05C)"
                },
                "accSagittal7CommaDown": {
                    "codepoint": 0xE305,
                    "description": "7 comma down, 1\u00b0 down [43 EDO], 2\u00b0 down [72 EDO], 1/6-tone down"
                },
                "accSagittal7CommaUp": {
                    "codepoint": 0xE304,
                    "description": "7 comma up, (7C), 1\u00b0 up [43 EDO], 2\u00b0 up [72 EDO], 1/6-tone up"
                },
                "accSagittal7v11CommaDown": {
                    "codepoint": 0xE347,
                    "description": "7:11 comma down, 1\u00b0 down [60 EDO], 1/10-tone down"
                },
                "accSagittal7v11CommaUp": {
                    "codepoint": 0xE346,
                    "description": "7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1\u00b0 up [60 EDO]"
                },
                "accSagittal7v11KleismaDown": {
                    "codepoint": 0xE341,
                    "description": "7:11 kleisma down"
                },
                "accSagittal7v11KleismaUp": {
                    "codepoint": 0xE340,
                    "description": "7:11 kleisma up, (7:11k, ~29k)"
                },
                "accSagittal7v19CommaDown": {
                    "codepoint": 0xE39B,
                    "description": "7:19 comma down"
                },
                "accSagittal7v19CommaUp": {
                    "codepoint": 0xE39A,
                    "description": "7:19 comma up, (7:19C, 7C less 19s)"
                },
                "accSagittalAcute": {
                    "codepoint": 0xE3F2,
                    "description": "Acute, 5 schisma up (5s), 2 cents up"
                },
                "accSagittalDoubleFlat": {
                    "codepoint": 0xE335,
                    "description": "Double flat, (2 apotomes down)[almost all EDOs], whole-tone down"
                },
                "accSagittalDoubleFlat11v49CUp": {
                    "codepoint": 0xE3E9,
                    "description": "Double flat 11:49C-up"
                },
                "accSagittalDoubleFlat143CUp": {
                    "codepoint": 0xE3EB,
                    "description": "Double flat 143C-up"
                },
                "accSagittalDoubleFlat17CUp": {
                    "codepoint": 0xE365,
                    "description": "Double flat 17C-up"
                },
                "accSagittalDoubleFlat17kUp": {
                    "codepoint": 0xE3ED,
                    "description": "Double flat 17k-up"
                },
                "accSagittalDoubleFlat19CUp": {
                    "codepoint": 0xE3E7,
                    "description": "Double flat 19C-up"
                },
                "accSagittalDoubleFlat19sUp": {
                    "codepoint": 0xE3EF,
                    "description": "Double flat 19s-up"
                },
                "accSagittalDoubleFlat23CUp": {
                    "codepoint": 0xE387,
                    "description": "Double flat 23C-up, 14\u00b0 down [96 EDO], 7/8-tone down"
                },
                "accSagittalDoubleFlat23SUp": {
                    "codepoint": 0xE3E1,
                    "description": "Double flat 23S-up"
                },
                "accSagittalDoubleFlat25SUp": {
                    "codepoint": 0xE32D,
                    "description": "Double flat 25S-up, 8\u00b0down [53 EDO]"
                },
                "accSagittalDoubleFlat49SUp": {
                    "codepoint": 0xE3E3,
                    "description": "Double flat 49S-up"
                },
                "accSagittalDoubleFlat55CUp": {
                    "codepoint": 0xE363,
                    "description": "Double flat 55C-up, 13\u00b0 down [96 EDO], 13/16-tone down"
                },
                "accSagittalDoubleFlat5CUp": {
                    "codepoint": 0xE331,
                    "description": "Double flat 5C-up, 5\u00b0[22 29] 7\u00b0[34 41] 9\u00b053 down, 11/12 tone down"
                },
                "accSagittalDoubleFlat5v11SUp": {
                    "codepoint": 0xE35F,
                    "description": "Double flat 5:11S-up"
                },
                "accSagittalDoubleFlat5v19CUp": {
                    "codepoint": 0xE385,
                    "description": "Double flat 5:19C-up, 19/20-tone down"
                },
                "accSagittalDoubleFlat5v23SUp": {
                    "codepoint": 0xE383,
                    "description": "Double flat 5:23S-up, 8\u00b0 down  [60 EDO], 4/5-tone down"
                },
                "accSagittalDoubleFlat5v7kUp": {
                    "codepoint": 0xE333,
                    "description": "Double flat 5:7k-up"
                },
                "accSagittalDoubleFlat7CUp": {
                    "codepoint": 0xE32F,
                    "description": "Double flat 7C-up, 5\u00b0 down [43 EDO], 10\u00b0 down [72 EDO], 5/6-tone down"
                },
                "accSagittalDoubleFlat7v11CUp": {
                    "codepoint": 0xE361,
                    "description": "Double flat 7:11C-up, 9\u00b0 down [60 EDO], 9/10-tone down"
                },
                "accSagittalDoubleFlat7v11kUp": {
                    "codepoint": 0xE367,
                    "description": "Double flat 7:11k-up"
                },
                "accSagittalDoubleFlat7v19CUp": {
                    "codepoint": 0xE3E5,
                    "description": "Double flat 7:19C-up"
                },
                "accSagittalDoubleSharp": {
                    "codepoint": 0xE334,
                    "description": "Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up"
                },
                "accSagittalDoubleSharp11v49CDown": {
                    "codepoint": 0xE3E8,
                    "description": "Double sharp 11:49C-down"
                },
                "accSagittalDoubleSharp143CDown": {
                    "codepoint": 0xE3EA,
                    "description": "Double sharp 143C-down"
                },
                "accSagittalDoubleSharp17CDown": {
                    "codepoint": 0xE364,
                    "description": "Double sharp 17C-down"
                },
                "accSagittalDoubleSharp17kDown": {
                    "codepoint": 0xE3EC,
                    "description": "Double sharp 17k-down"
                },
                "accSagittalDoubleSharp19CDown": {
                    "codepoint": 0xE3E6,
                    "description": "Double sharp 19C-down"
                },
                "accSagittalDoubleSharp19sDown": {
                    "codepoint": 0xE3EE,
                    "description": "Double sharp 19s-down"
                },
                "accSagittalDoubleSharp23CDown": {
                    "codepoint": 0xE386,
                    "description": "Double sharp 23C-down, 14\u00b0up [96 EDO], 7/8-tone up"
                },
                "accSagittalDoubleSharp23SDown": {
                    "codepoint": 0xE3E0,
                    "description": "Double sharp 23S-down"
                },
                "accSagittalDoubleSharp25SDown": {
                    "codepoint": 0xE32C,
                    "description": "Double sharp 25S-down, 8\u00b0up [53 EDO]"
                },
                "accSagittalDoubleSharp49SDown": {
                    "codepoint": 0xE3E2,
                    "description": "Double sharp 49S-down"
                },
                "accSagittalDoubleSharp55CDown": {
                    "codepoint": 0xE362,
                    "description": "Double sharp 55C-down, 13\u00b0 up [96 EDO], 13/16-tone up"
                },
                "accSagittalDoubleSharp5CDown": {
                    "codepoint": 0xE330,
                    "description": "Double sharp 5C-down, 5\u00b0[22 29] 7\u00b0[34 41] 9\u00b053 up, 11/12 tone up"
                },
                "accSagittalDoubleSharp5v11SDown": {
                    "codepoint": 0xE35E,
                    "description": "Double sharp 5:11S-down"
                },
                "accSagittalDoubleSharp5v19CDown": {
                    "codepoint": 0xE384,
                    "description": "Double sharp 5:19C-down, 19/20-tone up"
                },
                "accSagittalDoubleSharp5v23SDown": {
                    "codepoint": 0xE382,
                    "description": "Double sharp 5:23S-down, 8\u00b0 up [60 EDO], 4/5-tone up"
                },
                "accSagittalDoubleSharp5v7kDown": {
                    "codepoint": 0xE332,
                    "description": "Double sharp 5:7k-down"
                },
                "accSagittalDoubleSharp7CDown": {
                    "codepoint": 0xE32E,
                    "description": "Double sharp 7C-down, 5\u00b0[43] 10\u00b0[72] up, 5/6-tone up"
                },
                "accSagittalDoubleSharp7v11CDown": {
                    "codepoint": 0xE360,
                    "description": "Double sharp 7:11C-down, 9\u00b0 up [60 EDO], 9/10-tone up"
                },
                "accSagittalDoubleSharp7v11kDown": {
                    "codepoint": 0xE366,
                    "description": "Double sharp 7:11k-down"
                },
                "accSagittalDoubleSharp7v19CDown": {
                    "codepoint": 0xE3E4,
                    "description": "Double sharp 7:19C-down"
                },
                "accSagittalFlat": {
                    "codepoint": 0xE319,
                    "description": "Flat, (apotome down)[almost all EDOs], 1/2-tone down"
                },
                "accSagittalFlat11LDown": {
                    "codepoint": 0xE329,
                    "description": "Flat 11L-down, 8\u00b0 up [46 EDO]"
                },
                "accSagittalFlat11MDown": {
                    "codepoint": 0xE327,
                    "description": "Flat 11M-down, 3\u00b0 down [17 31 EDOs], 7\u00b0 down [46 EDO], 3/4-tone down"
                },
                "accSagittalFlat11v19LDown": {
                    "codepoint": 0xE3DB,
                    "description": "Flat 11:19L-down"
                },
                "accSagittalFlat11v19MDown": {
                    "codepoint": 0xE3D3,
                    "description": "Flat 11:19M-down"
                },
                "accSagittalFlat11v49CDown": {
                    "codepoint": 0xE3C7,
                    "description": "Flat 11:49C-down"
                },
                "accSagittalFlat11v49CUp": {
                    "codepoint": 0xE3B9,
                    "description": "Flat 11:49C-up"
                },
                "accSagittalFlat143CDown": {
                    "codepoint": 0xE3C5,
                    "description": "Flat 143C-down"
                },
                "accSagittalFlat143CUp": {
                    "codepoint": 0xE3BB,
                    "description": "Flat 143C-up"
                },
                "accSagittalFlat17CDown": {
                    "codepoint": 0xE357,
                    "description": "Flat 17C-down"
                },
                "accSagittalFlat17CUp": {
                    "codepoint": 0xE351,
                    "description": "Flat 17C-up"
                },
                "accSagittalFlat17kDown": {
                    "codepoint": 0xE3C3,
                    "description": "Flat 17k-down"
                },
                "accSagittalFlat17kUp": {
                    "codepoint": 0xE3BD,
                    "description": "Flat 17k-up"
                },
                "accSagittalFlat19CDown": {
                    "codepoint": 0xE3C9,
                    "description": "Flat 19C-down"
                },
                "accSagittalFlat19CUp": {
                    "codepoint": 0xE3B7,
                    "description": "Flat 19C-up"
                },
                "accSagittalFlat19sDown": {
                    "codepoint": 0xE3C1,
                    "description": "Flat 19s-down"
                },
                "accSagittalFlat19sUp": {
                    "codepoint": 0xE3BF,
                    "description": "Flat 19s-up"
                },
                "accSagittalFlat23CDown": {
                    "codepoint": 0xE37D,
                    "description": "Flat 23C-down, 10\u00b0 down [96 EDO], 5/8-tone down"
                },
                "accSagittalFlat23CUp": {
                    "codepoint": 0xE37B,
                    "description": "Flat 23C-up, 6\u00b0 down [96 EDO], 3/8-tone down"
                },
                "accSagittalFlat23SDown": {
                    "codepoint": 0xE3CF,
                    "description": "Flat 23S-down"
                },
                "accSagittalFlat23SUp": {
                    "codepoint": 0xE3B1,
                    "description": "Flat 23S-up"
                },
                "accSagittalFlat25SDown": {
                    "codepoint": 0xE323,
                    "description": "Flat 25S-down, 7\u00b0 down [53 EDO]"
                },
                "accSagittalFlat25SUp": {
                    "codepoint": 0xE311,
                    "description": "Flat 25S-up, 3\u00b0 down [53 EDO]"
                },
                "accSagittalFlat35LDown": {
                    "codepoint": 0xE32B,
                    "description": "Flat 35L-down, 5\u00b0 down [50 EDO]"
                },
                "accSagittalFlat35MDown": {
                    "codepoint": 0xE325,
                    "description": "Flat 35M-down, 4\u00b0 down [50 EDO], 6\u00b0 down [27 EDO], 13/18-tone down"
                },
                "accSagittalFlat49LDown": {
                    "codepoint": 0xE3D9,
                    "description": "Flat 49L-down"
                },
                "accSagittalFlat49MDown": {
                    "codepoint": 0xE3D5,
                    "description": "Flat 49M-down"
                },
                "accSagittalFlat49SDown": {
                    "codepoint": 0xE3CD,
                    "description": "Flat 49S-down"
                },
                "accSagittalFlat49SUp": {
                    "codepoint": 0xE3B3,
                    "description": "Flat 49S-up"
                },
                "accSagittalFlat55CDown": {
                    "codepoint": 0xE359,
                    "description": "Flat 55C-down, 11\u00b0 down [96 EDO], 11/16-tone down"
                },
                "accSagittalFlat55CUp": {
                    "codepoint": 0xE34F,
                    "description": "Flat 55C-up, 5\u00b0 down [96 EDO], 5/16-tone down"
                },
                "accSagittalFlat5CDown": {
                    "codepoint": 0xE31F,
                    "description": "Flat 5C-down, 4\u00b0[22 29] 5\u00b0[27 34 41] 6\u00b0[39 46 53] down, 7/12-tone down"
                },
                "accSagittalFlat5CUp": {
                    "codepoint": 0xE315,
                    "description": "Flat 5C-up, 2\u00b0[22,29] 3\u00b0[34 41] 4\u00b0[46 53 60] down, 5/12-tone down"
                },
                "accSagittalFlat5v11SDown": {
                    "codepoint": 0xE35D,
                    "description": "Flat 5:11S-down"
                },
                "accSagittalFlat5v11SUp": {
                    "codepoint": 0xE34B,
                    "description": "Flat 5:11S-up"
                },
                "accSagittalFlat5v13LDown": {
                    "codepoint": 0xE3DD,
                    "description": "Flat 5:13L-down"
                },
                "accSagittalFlat5v13MDown": {
                    "codepoint": 0xE3D1,
                    "description": "Flat 5:13M-down"
                },
                "accSagittalFlat5v19CDown": {
                    "codepoint": 0xE37F,
                    "description": "Flat 5:19C-down, 11/20-tone down"
                },
                "accSagittalFlat5v19CUp": {
                    "codepoint": 0xE379,
                    "description": "Flat 5:19C-up, 9/20-tone down"
                },
                "accSagittalFlat5v23SDown": {
                    "codepoint": 0xE381,
                    "description": "Flat 5:23S-down, 7\u00b0 down [60 EDO], 7/10-tone down"
                },
                "accSagittalFlat5v23SUp": {
                    "codepoint": 0xE377,
                    "description": "Flat 5:23S-up, 3\u00b0 down [60 EDO], 3/10-tone down"
                },
                "accSagittalFlat5v49MDown": {
                    "codepoint": 0xE3D7,
                    "description": "Flat 5:49M-down"
                },
                "accSagittalFlat5v7kDown": {
                    "codepoint": 0xE31D,
                    "description": "Flat 5:7k-down"
                },
                "accSagittalFlat5v7kUp": {
                    "codepoint": 0xE317,
                    "description": "Flat 5:7k-up"
                },
                "accSagittalFlat7CDown": {
                    "codepoint": 0xE321,
                    "description": "Flat 7C-down, 4\u00b0 down [43 EDO], 8\u00b0 down [72 EDO], 2/3-tone down"
                },
                "accSagittalFlat7CUp": {
                    "codepoint": 0xE313,
                    "description": "Flat 7C-up, 2\u00b0 down [43 EDO], 4\u00b0 down [72 EDO], 1/3-tone down"
                },
                "accSagittalFlat7v11CDown": {
                    "codepoint": 0xE35B,
                    "description": "Flat 7:11C-down, 6\u00b0 down [60 EDO], 3/5- tone down"
                },
                "accSagittalFlat7v11CUp": {
                    "codepoint": 0xE34D,
                    "description": "Flat 7:11C-up, 4\u00b0 down [60 EDO], 2/5-tone down"
                },
                "accSagittalFlat7v11kDown": {
                    "codepoint": 0xE355,
                    "description": "Flat 7:11k-down"
                },
                "accSagittalFlat7v11kUp": {
                    "codepoint": 0xE353,
                    "description": "Flat 7:11k-up"
                },
                "accSagittalFlat7v19CDown": {
                    "codepoint": 0xE3CB,
                    "description": "Flat 7:19C-down"
                },
                "accSagittalFlat7v19CUp": {
                    "codepoint": 0xE3B5,
                    "description": "Flat 7:19C-up"
                },
                "accSagittalGrave": {
                    "codepoint": 0xE3F3,
                    "description": "Grave, 5 schisma down, 2 cents down"
                },
                "accSagittalShaftDown": {
                    "codepoint": 0xE3F1,
                    "description": "Shaft down, (natural for use with only diacritics down)"
                },
                "accSagittalShaftUp": {
                    "codepoint": 0xE3F0,
                    "description": "Shaft up, (natural for use with only diacritics up)"
                },
                "accSagittalSharp": {
                    "codepoint": 0xE318,
                    "description": "Sharp, (apotome up)[almost all EDOs], 1/2-tone up"
                },
                "accSagittalSharp11LUp": {
                    "codepoint": 0xE328,
                    "description": "Sharp 11L-up, 8\u00b0 up [46 EDO]"
                },
                "accSagittalSharp11MUp": {
                    "codepoint": 0xE326,
                    "description": "Sharp 11M-up, 3\u00b0 up [17 31 EDOs], 7\u00b0 up [46 EDO], 3/4-tone up"
                },
                "accSagittalSharp11v19LUp": {
                    "codepoint": 0xE3DA,
                    "description": "Sharp 11:19L-up"
                },
                "accSagittalSharp11v19MUp": {
                    "codepoint": 0xE3D2,
                    "description": "Sharp 11:19M-up"
                },
                "accSagittalSharp11v49CDown": {
                    "codepoint": 0xE3B8,
                    "description": "Sharp 11:49C-down"
                },
                "accSagittalSharp11v49CUp": {
                    "codepoint": 0xE3C6,
                    "description": "Sharp 11:49C-up"
                },
                "accSagittalSharp143CDown": {
                    "codepoint": 0xE3BA,
                    "description": "Sharp 143C-down"
                },
                "accSagittalSharp143CUp": {
                    "codepoint": 0xE3C4,
                    "description": "Sharp 143C-up"
                },
                "accSagittalSharp17CDown": {
                    "codepoint": 0xE350,
                    "description": "Sharp 17C-down"
                },
                "accSagittalSharp17CUp": {
                    "codepoint": 0xE356,
                    "description": "Sharp 17C-up"
                },
                "accSagittalSharp17kDown": {
                    "codepoint": 0xE3BC,
                    "description": "Sharp 17k-down"
                },
                "accSagittalSharp17kUp": {
                    "codepoint": 0xE3C2,
                    "description": "Sharp 17k-up"
                },
                "accSagittalSharp19CDown": {
                    "codepoint": 0xE3B6,
                    "description": "Sharp 19C-down"
                },
                "accSagittalSharp19CUp": {
                    "codepoint": 0xE3C8,
                    "description": "Sharp 19C-up"
                },
                "accSagittalSharp19sDown": {
                    "codepoint": 0xE3BE,
                    "description": "Sharp 19s-down"
                },
                "accSagittalSharp19sUp": {
                    "codepoint": 0xE3C0,
                    "description": "Sharp 19s-up"
                },
                "accSagittalSharp23CDown": {
                    "codepoint": 0xE37A,
                    "description": "Sharp 23C-down, 6\u00b0 up [96 EDO], 3/8-tone up"
                },
                "accSagittalSharp23CUp": {
                    "codepoint": 0xE37C,
                    "description": "Sharp 23C-up, 10\u00b0 up [96 EDO], 5/8-tone up"
                },
                "accSagittalSharp23SDown": {
                    "codepoint": 0xE3B0,
                    "description": "Sharp 23S-down"
                },
                "accSagittalSharp23SUp": {
                    "codepoint": 0xE3CE,
                    "description": "Sharp 23S-up"
                },
                "accSagittalSharp25SDown": {
                    "codepoint": 0xE310,
                    "description": "Sharp 25S-down, 3\u00b0 up [53 EDO]"
                },
                "accSagittalSharp25SUp": {
                    "codepoint": 0xE322,
                    "description": "Sharp 25S-up, 7\u00b0 up [53 EDO]"
                },
                "accSagittalSharp35LUp": {
                    "codepoint": 0xE32A,
                    "description": "Sharp 35L-up, 5\u00b0 up [50 EDO]"
                },
                "accSagittalSharp35MUp": {
                    "codepoint": 0xE324,
                    "description": "Sharp 35M-up, 4\u00b0 up [50 EDO], 6\u00b0 up [27 EDO], 13/18-tone up"
                },
                "accSagittalSharp49LUp": {
                    "codepoint": 0xE3D8,
                    "description": "Sharp 49L-up"
                },
                "accSagittalSharp49MUp": {
                    "codepoint": 0xE3D4,
                    "description": "Sharp 49M-up"
                },
                "accSagittalSharp49SDown": {
                    "codepoint": 0xE3B2,
                    "description": "Sharp 49S-down"
                },
                "accSagittalSharp49SUp": {
                    "codepoint": 0xE3CC,
                    "description": "Sharp 49S-up"
                },
                "accSagittalSharp55CDown": {
                    "codepoint": 0xE34E,
                    "description": "Sharp 55C-down, 5\u00b0 up [96 EDO], 5/16-tone up"
                },
                "accSagittalSharp55CUp": {
                    "codepoint": 0xE358,
                    "description": "Sharp 55C-up, 11\u00b0 up [96 EDO], 11/16-tone up"
                },
                "accSagittalSharp5CDown": {
                    "codepoint": 0xE314,
                    "description": "Sharp 5C-down, 2\u00b0[22 29] 3\u00b0[34 41] 4\u00b0[46 53 60] up, 5/12-tone up"
                },
                "accSagittalSharp5CUp": {
                    "codepoint": 0xE31E,
                    "description": "Sharp 5C-up, 4\u00b0[22 29] 5\u00b0[27 34 41] 6\u00b0[39 46 53] up, 7/12-tone up"
                },
                "accSagittalSharp5v11SDown": {
                    "codepoint": 0xE34A,
                    "description": "Sharp 5:11S-down"
                },
                "accSagittalSharp5v11SUp": {
                    "codepoint": 0xE35C,
                    "description": "Sharp 5:11S-up"
                },
                "accSagittalSharp5v13LUp": {
                    "codepoint": 0xE3DC,
                    "description": "Sharp 5:13L-up"
                },
                "accSagittalSharp5v13MUp": {
                    "codepoint": 0xE3D0,
                    "description": "Sharp 5:13M-up"
                },
                "accSagittalSharp5v19CDown": {
                    "codepoint": 0xE378,
                    "description": "Sharp 5:19C-down, 9/20-tone up"
                },
                "accSagittalSharp5v19CUp": {
                    "codepoint": 0xE37E,
                    "description": "Sharp 5:19C-up, 11/20-tone up"
                },
                "accSagittalSharp5v23SDown": {
                    "codepoint": 0xE376,
                    "description": "Sharp 5:23S-down, 3\u00b0 up [60 EDO], 3/10-tone up"
                },
                "accSagittalSharp5v23SUp": {
                    "codepoint": 0xE380,
                    "description": "Sharp 5:23S-up, 7\u00b0 up [60 EDO], 7/10-tone up"
                },
                "accSagittalSharp5v49MUp": {
                    "codepoint": 0xE3D6,
                    "description": "Sharp 5:49M-up, (one and a half apotomes)"
                },
                "accSagittalSharp5v7kDown": {
                    "codepoint": 0xE316,
                    "description": "Sharp 5:7k-down"
                },
                "accSagittalSharp5v7kUp": {
                    "codepoint": 0xE31C,
                    "description": "Sharp 5:7k-up"
                },
                "accSagittalSharp7CDown": {
                    "codepoint": 0xE312,
                    "description": "Sharp 7C-down, 2\u00b0 up [43 EDO], 4\u00b0 up [72 EDO], 1/3-tone up"
                },
                "accSagittalSharp7CUp": {
                    "codepoint": 0xE320,
                    "description": "Sharp 7C-up, 4\u00b0 up [43 EDO], 8\u00b0 up [72 EDO], 2/3-tone up"
                },
                "accSagittalSharp7v11CDown": {
                    "codepoint": 0xE34C,
                    "description": "Sharp 7:11C-down, 4\u00b0 up [60 EDO], 2/5-tone up"
                },
                "accSagittalSharp7v11CUp": {
                    "codepoint": 0xE35A,
                    "description": "Sharp 7:11C-up, 6\u00b0 up [60 EDO], 3/5- tone up"
                },
                "accSagittalSharp7v11kDown": {
                    "codepoint": 0xE352,
                    "description": "Sharp 7:11k-down"
                },
                "accSagittalSharp7v11kUp": {
                    "codepoint": 0xE354,
                    "description": "Sharp 7:11k-up"
                },
                "accSagittalSharp7v19CDown": {
                    "codepoint": 0xE3B4,
                    "description": "Sharp 7:19C-down"
                },
                "accSagittalSharp7v19CUp": {
                    "codepoint": 0xE3CA,
                    "description": "Sharp 7:19C-up"
                },
                "accSagittalUnused1": {
                    "codepoint": 0xE31A,
                    "description": "Unused"
                },
                "accSagittalUnused2": {
                    "codepoint": 0xE31B,
                    "description": "Unused"
                },
                "accSagittalUnused3": {
                    "codepoint": 0xE3DE,
                    "description": "Unused"
                },
                "accSagittalUnused4": {
                    "codepoint": 0xE3DF,
                    "description": "Unused"
                },
                "accdnCombDot": {
                    "codepoint": 0xE8CA,
                    "description": "Combining accordion coupler dot"
                },
                "accdnCombLH2RanksEmpty": {
                    "codepoint": 0xE8C8,
                    "description": "Combining left hand, 2 ranks, empty"
                },
                "accdnCombLH3RanksEmptySquare": {
                    "codepoint": 0xE8C9,
                    "description": "Combining left hand, 3 ranks, empty (square)"
                },
                "accdnCombRH3RanksEmpty": {
                    "codepoint": 0xE8C6,
                    "description": "Combining right hand, 3 ranks, empty"
                },
                "accdnCombRH4RanksEmpty": {
                    "codepoint": 0xE8C7,
                    "description": "Combining right hand, 4 ranks, empty"
                },
                "accdnDiatonicClef": {
                    "codepoint": 0xE079,
                    "description": "Diatonic accordion clef"
                },
                "accdnLH2Ranks16Round": {
                    "codepoint": 0xE8BC,
                    "description": "Left hand, 2 ranks, 16' stop (round)"
                },
                "accdnLH2Ranks8Plus16Round": {
                    "codepoint": 0xE8BD,
                    "description": "Left hand, 2 ranks, 8' stop + 16' stop (round)"
                },
                "accdnLH2Ranks8Round": {
                    "codepoint": 0xE8BB,
                    "description": "Left hand, 2 ranks, 8' stop (round)"
                },
                "accdnLH2RanksFullMasterRound": {
                    "codepoint": 0xE8C0,
                    "description": "Left hand, 2 ranks, full master (round)"
                },
                "accdnLH2RanksMasterPlus16Round": {
                    "codepoint": 0xE8BF,
                    "description": "Left hand, 2 ranks, master + 16' stop (round)"
                },
                "accdnLH2RanksMasterRound": {
                    "codepoint": 0xE8BE,
                    "description": "Left hand, 2 ranks, master (round)"
                },
                "accdnLH3Ranks2Plus8Square": {
                    "codepoint": 0xE8C4,
                    "description": "Left hand, 3 ranks, 2' stop + 8' stop (square)"
                },
                "accdnLH3Ranks2Square": {
                    "codepoint": 0xE8C2,
                    "description": "Left hand, 3 ranks, 2' stop (square)"
                },
                "accdnLH3Ranks8Square": {
                    "codepoint": 0xE8C1,
                    "description": "Left hand, 3 ranks, 8' stop (square)"
                },
                "accdnLH3RanksDouble8Square": {
                    "codepoint": 0xE8C3,
                    "description": "Left hand, 3 ranks, double 8' stop (square)"
                },
                "accdnLH3RanksTuttiSquare": {
                    "codepoint": 0xE8C5,
                    "description": "Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square)"
                },
                "accdnPull": {
                    "codepoint": 0xE8CC,
                    "description": "Pull"
                },
                "accdnPush": {
                    "codepoint": 0xE8CB,
                    "description": "Push"
                },
                "accdnRH3RanksAccordion": {
                    "codepoint": 0xE8AC,
                    "description": "Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion)"
                },
                "accdnRH3RanksAuthenticMusette": {
                    "codepoint": 0xE8A8,
                    "description": "Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette)"
                },
                "accdnRH3RanksBandoneon": {
                    "codepoint": 0xE8AB,
                    "description": "Right hand, 3 ranks, 8' stop + 16' stop (bandone\u00f3n)"
                },
                "accdnRH3RanksBassoon": {
                    "codepoint": 0xE8A4,
                    "description": "Right hand, 3 ranks, 16' stop (bassoon)"
                },
                "accdnRH3RanksClarinet": {
                    "codepoint": 0xE8A1,
                    "description": "Right hand, 3 ranks, 8' stop (clarinet)"
                },
                "accdnRH3RanksDoubleTremoloLower8ve": {
                    "codepoint": 0xE8B1,
                    "description": "Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop"
                },
                "accdnRH3RanksDoubleTremoloUpper8ve": {
                    "codepoint": 0xE8B2,
                    "description": "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop"
                },
                "accdnRH3RanksFullFactory": {
                    "codepoint": 0xE8B3,
                    "description": "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop"
                },
                "accdnRH3RanksHarmonium": {
                    "codepoint": 0xE8AA,
                    "description": "Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium)"
                },
                "accdnRH3RanksImitationMusette": {
                    "codepoint": 0xE8A7,
                    "description": "Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette)"
                },
                "accdnRH3RanksLowerTremolo8": {
                    "codepoint": 0xE8A3,
                    "description": "Right hand, 3 ranks, lower tremolo 8' stop"
                },
                "accdnRH3RanksMaster": {
                    "codepoint": 0xE8AD,
                    "description": "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master)"
                },
                "accdnRH3RanksOboe": {
                    "codepoint": 0xE8A5,
                    "description": "Right hand, 3 ranks, 4' stop + 8' stop (oboe)"
                },
                "accdnRH3RanksOrgan": {
                    "codepoint": 0xE8A9,
                    "description": "Right hand, 3 ranks, 4' stop + 16' stop (organ)"
                },
                "accdnRH3RanksPiccolo": {
                    "codepoint": 0xE8A0,
                    "description": "Right hand, 3 ranks, 4' stop (piccolo)"
                },
                "accdnRH3RanksTremoloLower8ve": {
                    "codepoint": 0xE8AF,
                    "description": "Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop"
                },
                "accdnRH3RanksTremoloUpper8ve": {
                    "codepoint": 0xE8B0,
                    "description": "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop"
                },
                "accdnRH3RanksTwoChoirs": {
                    "codepoint": 0xE8AE,
                    "description": "Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop"
                },
                "accdnRH3RanksUpperTremolo8": {
                    "codepoint": 0xE8A2,
                    "description": "Right hand, 3 ranks, upper tremolo 8' stop"
                },
                "accdnRH3RanksViolin": {
                    "codepoint": 0xE8A6,
                    "description": "Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin)"
                },
                "accdnRH4RanksAlto": {
                    "codepoint": 0xE8B5,
                    "description": "Right hand, 4 ranks, alto"
                },
                "accdnRH4RanksBassAlto": {
                    "codepoint": 0xE8BA,
                    "description": "Right hand, 4 ranks, bass/alto"
                },
                "accdnRH4RanksMaster": {
                    "codepoint": 0xE8B7,
                    "description": "Right hand, 4 ranks, master"
                },
                "accdnRH4RanksSoftBass": {
                    "codepoint": 0xE8B8,
                    "description": "Right hand, 4 ranks, soft bass"
                },
                "accdnRH4RanksSoftTenor": {
                    "codepoint": 0xE8B9,
                    "description": "Right hand, 4 ranks, soft tenor"
                },
                "accdnRH4RanksSoprano": {
                    "codepoint": 0xE8B4,
                    "description": "Right hand, 4 ranks, soprano"
                },
                "accdnRH4RanksTenor": {
                    "codepoint": 0xE8B6,
                    "description": "Right hand, 4 ranks, tenor"
                },
                "accdnRicochet2": {
                    "codepoint": 0xE8CD,
                    "description": "Ricochet (2 tones)"
                },
                "accdnRicochet3": {
                    "codepoint": 0xE8CE,
                    "description": "Ricochet (3 tones)"
                },
                "accdnRicochet4": {
                    "codepoint": 0xE8CF,
                    "description": "Ricochet (4 tones)"
                },
                "accdnRicochet5": {
                    "codepoint": 0xE8D0,
                    "description": "Ricochet (5 tones)"
                },
                "accdnRicochet6": {
                    "codepoint": 0xE8D1,
                    "description": "Ricochet (6 tones)"
                },
                "accdnRicochetStem2": {
                    "codepoint": 0xE8D2,
                    "description": "Combining ricochet for stem (2 tones)"
                },
                "accdnRicochetStem3": {
                    "codepoint": 0xE8D3,
                    "description": "Combining ricochet for stem (3 tones)"
                },
                "accdnRicochetStem4": {
                    "codepoint": 0xE8D4,
                    "description": "Combining ricochet for stem (4 tones)"
                },
                "accdnRicochetStem5": {
                    "codepoint": 0xE8D5,
                    "description": "Combining ricochet for stem (5 tones)"
                },
                "accdnRicochetStem6": {
                    "codepoint": 0xE8D6,
                    "description": "Combining ricochet for stem (6 tones)"
                },
                "accidental1CommaFlat": {
                    "codepoint": 0xE454,
                    "description": "1-comma flat"
                },
                "accidental1CommaSharp": {
                    "codepoint": 0xE450,
                    "description": "1-comma sharp"
                },
                "accidental2CommaFlat": {
                    "codepoint": 0xE455,
                    "description": "2-comma flat"
                },
                "accidental2CommaSharp": {
                    "codepoint": 0xE451,
                    "description": "2-comma sharp"
                },
                "accidental3CommaFlat": {
                    "codepoint": 0xE456,
                    "description": "3-comma flat"
                },
                "accidental3CommaSharp": {
                    "codepoint": 0xE452,
                    "description": "3-comma sharp"
                },
                "accidental4CommaFlat": {
                    "codepoint": 0xE457,
                    "description": "4-comma flat"
                },
                "accidental5CommaSharp": {
                    "codepoint": 0xE453,
                    "description": "5-comma sharp"
                },
                "accidentalArrowDown": {
                    "codepoint": 0xE27B,
                    "description": "Arrow down (lower by one quarter-tone)"
                },
                "accidentalArrowUp": {
                    "codepoint": 0xE27A,
                    "description": "Arrow up (raise by one quarter-tone)"
                },
                "accidentalBakiyeFlat": {
                    "codepoint": 0xE442,
                    "description": "Bakiye (flat)"
                },
                "accidentalBakiyeSharp": {
                    "codepoint": 0xE445,
                    "description": "Bakiye (sharp)"
                },
                "accidentalBracketLeft": {
                    "codepoint": 0xE26C,
                    "description": "Accidental bracket, left"
                },
                "accidentalBracketRight": {
                    "codepoint": 0xE26D,
                    "description": "Accidental bracket, right"
                },
                "accidentalBuyukMucennebFlat": {
                    "codepoint": 0xE440,
                    "description": "B\u00fcy\u00fck m\u00fccenneb (flat)"
                },
                "accidentalBuyukMucennebSharp": {
                    "codepoint": 0xE447,
                    "description": "B\u00fcy\u00fck m\u00fccenneb (sharp)"
                },
                "accidentalCombiningCloseCurlyBrace": {
                    "codepoint": 0xE2EF,
                    "description": "Combining close curly brace"
                },
                "accidentalCombiningLower17Schisma": {
                    "codepoint": 0xE2E6,
                    "description": "Combining lower by one 17-limit schisma"
                },
                "accidentalCombiningLower19Schisma": {
                    "codepoint": 0xE2E8,
                    "description": "Combining lower by one 19-limit schisma"
                },
                "accidentalCombiningLower23Limit29LimitComma": {
                    "codepoint": 0xE2EA,
                    "description": "Combining lower by one 23-limit comma or 29-limit comma"
                },
                "accidentalCombiningLower31Schisma": {
                    "codepoint": 0xE2EC,
                    "description": "Combining lower by one 31-limit schisma"
                },
                "accidentalCombiningLower53LimitComma": {
                    "codepoint": 0xE2F7,
                    "description": "Combining lower by one 53-limit comma"
                },
                "accidentalCombiningOpenCurlyBrace": {
                    "codepoint": 0xE2EE,
                    "description": "Combining open curly brace"
                },
                "accidentalCombiningRaise17Schisma": {
                    "codepoint": 0xE2E7,
                    "description": "Combining raise by one 17-limit schisma"
                },
                "accidentalCombiningRaise19Schisma": {
                    "codepoint": 0xE2E9,
                    "description": "Combining raise by one 19-limit schisma"
                },
                "accidentalCombiningRaise23Limit29LimitComma": {
                    "codepoint": 0xE2EB,
                    "description": "Combining raise by one 23-limit comma or 29-limit comma"
                },
                "accidentalCombiningRaise31Schisma": {
                    "codepoint": 0xE2ED,
                    "description": "Combining raise by one 31-limit schisma"
                },
                "accidentalCombiningRaise53LimitComma": {
                    "codepoint": 0xE2F8,
                    "description": "Combining raise by one 53-limit comma"
                },
                "accidentalCommaSlashDown": {
                    "codepoint": 0xE47A,
                    "description": "Syntonic/Didymus comma (80:81) down (Bosanquet)"
                },
                "accidentalCommaSlashUp": {
                    "codepoint": 0xE479,
                    "description": "Syntonic/Didymus comma (80:81) up (Bosanquet)"
                },
                "accidentalDoubleFlat": {
                    "alternateCodepoint": 0x1D12B,
                    "codepoint": 0xE264,
                    "description": "Double flat"
                },
                "accidentalDoubleFlatArabic": {
                    "codepoint": 0xED30,
                    "description": "Arabic double flat"
                },
                "accidentalDoubleFlatEqualTempered": {
                    "codepoint": 0xE2F0,
                    "description": "Double flat equal tempered semitone"
                },
                "accidentalDoubleFlatOneArrowDown": {
                    "codepoint": 0xE2C0,
                    "description": "Double flat lowered by one syntonic comma"
                },
                "accidentalDoubleFlatOneArrowUp": {
                    "codepoint": 0xE2C5,
                    "description": "Double flat raised by one syntonic comma"
                },
                "accidentalDoubleFlatReversed": {
                    "codepoint": 0xE483,
                    "description": "Reversed double flat"
                },
                "accidentalDoubleFlatThreeArrowsDown": {
                    "codepoint": 0xE2D4,
                    "description": "Double flat lowered by three syntonic commas"
                },
                "accidentalDoubleFlatThreeArrowsUp": {
                    "codepoint": 0xE2D9,
                    "description": "Double flat raised by three syntonic commas"
                },
                "accidentalDoubleFlatTurned": {
                    "codepoint": 0xE485,
                    "description": "Turned double flat"
                },
                "accidentalDoubleFlatTwoArrowsDown": {
                    "codepoint": 0xE2CA,
                    "description": "Double flat lowered by two syntonic commas"
                },
                "accidentalDoubleFlatTwoArrowsUp": {
                    "codepoint": 0xE2CF,
                    "description": "Double flat raised by two syntonic commas"
                },
                "accidentalDoubleSharp": {
                    "alternateCodepoint": 0x1D12A,
                    "codepoint": 0xE263,
                    "description": "Double sharp"
                },
                "accidentalDoubleSharpArabic": {
                    "codepoint": 0xED38,
                    "description": "Arabic double sharp"
                },
                "accidentalDoubleSharpEqualTempered": {
                    "codepoint": 0xE2F4,
                    "description": "Double sharp equal tempered semitone"
                },
                "accidentalDoubleSharpOneArrowDown": {
                    "codepoint": 0xE2C4,
                    "description": "Double sharp lowered by one syntonic comma"
                },
                "accidentalDoubleSharpOneArrowUp": {
                    "codepoint": 0xE2C9,
                    "description": "Double sharp raised by one syntonic comma"
                },
                "accidentalDoubleSharpThreeArrowsDown": {
                    "codepoint": 0xE2D8,
                    "description": "Double sharp lowered by three syntonic commas"
                },
                "accidentalDoubleSharpThreeArrowsUp": {
                    "codepoint": 0xE2DD,
                    "description": "Double sharp raised by three syntonic commas"
                },
                "accidentalDoubleSharpTwoArrowsDown": {
                    "codepoint": 0xE2CE,
                    "description": "Double sharp lowered by two syntonic commas"
                },
                "accidentalDoubleSharpTwoArrowsUp": {
                    "codepoint": 0xE2D3,
                    "description": "Double sharp raised by two syntonic commas"
                },
                "accidentalEnharmonicAlmostEqualTo": {
                    "codepoint": 0xE2FA,
                    "description": "Enharmonically reinterpret accidental almost equal to"
                },
                "accidentalEnharmonicEquals": {
                    "codepoint": 0xE2FB,
                    "description": "Enharmonically reinterpret accidental equals"
                },
                "accidentalEnharmonicTilde": {
                    "codepoint": 0xE2F9,
                    "description": "Enharmonically reinterpret accidental tilde"
                },
                "accidentalFilledReversedFlatAndFlat": {
                    "codepoint": 0xE296,
                    "description": "Filled reversed flat and flat"
                },
                "accidentalFilledReversedFlatAndFlatArrowDown": {
                    "codepoint": 0xE298,
                    "description": "Filled reversed flat and flat with arrow down"
                },
                "accidentalFilledReversedFlatAndFlatArrowUp": {
                    "codepoint": 0xE297,
                    "description": "Filled reversed flat and flat with arrow up"
                },
                "accidentalFilledReversedFlatArrowDown": {
                    "codepoint": 0xE293,
                    "description": "Filled reversed flat with arrow down"
                },
                "accidentalFilledReversedFlatArrowUp": {
                    "codepoint": 0xE292,
                    "description": "Filled reversed flat with arrow up"
                },
                "accidentalFiveQuarterTonesFlatArrowDown": {
                    "codepoint": 0xE279,
                    "description": "Five-quarter-tones flat"
                },
                "accidentalFiveQuarterTonesSharpArrowUp": {
                    "codepoint": 0xE276,
                    "description": "Five-quarter-tones sharp"
                },
                "accidentalFlat": {
                    "alternateCodepoint": 0x266D,
                    "codepoint": 0xE260,
                    "description": "Flat"
                },
                "accidentalFlatArabic": {
                    "codepoint": 0xED32,
                    "description": "Arabic half-tone flat"
                },
                "accidentalFlatEqualTempered": {
                    "codepoint": 0xE2F1,
                    "description": "Flat equal tempered semitone"
                },
                "accidentalFlatLoweredStockhausen": {
                    "codepoint": 0xED53,
                    "description": "Lowered flat (Stockhausen)"
                },
                "accidentalFlatOneArrowDown": {
                    "codepoint": 0xE2C1,
                    "description": "Flat lowered by one syntonic comma"
                },
                "accidentalFlatOneArrowUp": {
                    "codepoint": 0xE2C6,
                    "description": "Flat raised by one syntonic comma"
                },
                "accidentalFlatRaisedStockhausen": {
                    "codepoint": 0xED52,
                    "description": "Raised flat (Stockhausen)"
                },
                "accidentalFlatRepeatedLineStockhausen": {
                    "codepoint": 0xED5C,
                    "description": "Repeated flat, note on line (Stockhausen)"
                },
                "accidentalFlatRepeatedSpaceStockhausen": {
                    "codepoint": 0xED5B,
                    "description": "Repeated flat, note in space (Stockhausen)"
                },
                "accidentalFlatThreeArrowsDown": {
                    "codepoint": 0xE2D5,
                    "description": "Flat lowered by three syntonic commas"
                },
                "accidentalFlatThreeArrowsUp": {
                    "codepoint": 0xE2DA,
                    "description": "Flat raised by three syntonic commas"
                },
                "accidentalFlatTurned": {
                    "codepoint": 0xE484,
                    "description": "Turned flat"
                },
                "accidentalFlatTwoArrowsDown": {
                    "codepoint": 0xE2CB,
                    "description": "Flat lowered by two syntonic commas"
                },
                "accidentalFlatTwoArrowsUp": {
                    "codepoint": 0xE2D0,
                    "description": "Flat raised by two syntonic commas"
                },
                "accidentalHalfSharpArrowDown": {
                    "codepoint": 0xE29A,
                    "description": "Half sharp with arrow down"
                },
                "accidentalHalfSharpArrowUp": {
                    "codepoint": 0xE299,
                    "description": "Half sharp with arrow up"
                },
                "accidentalJohnston13": {
                    "codepoint": 0xE2B6,
                    "description": "Thirteen (raise by 65:64)"
                },
                "accidentalJohnston31": {
                    "codepoint": 0xE2B7,
                    "description": "Inverted 13 (lower by 65:64)"
                },
                "accidentalJohnstonDown": {
                    "codepoint": 0xE2B5,
                    "description": "Down arrow (lower by 33:32)"
                },
                "accidentalJohnstonEl": {
                    "codepoint": 0xE2B2,
                    "description": "Inverted seven (raise by 36:35)"
                },
                "accidentalJohnstonMinus": {
                    "codepoint": 0xE2B1,
                    "description": "Minus (lower by 81:80)"
                },
                "accidentalJohnstonPlus": {
                    "codepoint": 0xE2B0,
                    "description": "Plus (raise by 81:80)"
                },
                "accidentalJohnstonSeven": {
                    "codepoint": 0xE2B3,
                    "description": "Seven (lower by 36:35)"
                },
                "accidentalJohnstonUp": {
                    "codepoint": 0xE2B4,
                    "description": "Up arrow (raise by 33:32)"
                },
                "accidentalKomaFlat": {
                    "codepoint": 0xE443,
                    "description": "Koma (flat)"
                },
                "accidentalKomaSharp": {
                    "codepoint": 0xE444,
                    "description": "Koma (sharp)"
                },
                "accidentalKoron": {
                    "codepoint": 0xE460,
                    "description": "Koron (quarter tone flat)"
                },
                "accidentalKucukMucennebFlat": {
                    "codepoint": 0xE441,
                    "description": "K\u00fc\u00e7\u00fck m\u00fccenneb (flat)"
                },
                "accidentalKucukMucennebSharp": {
                    "codepoint": 0xE446,
                    "description": "K\u00fc\u00e7\u00fck m\u00fccenneb (sharp)"
                },
                "accidentalLargeDoubleSharp": {
                    "codepoint": 0xE47D,
                    "description": "Large double sharp"
                },
                "accidentalLowerOneSeptimalComma": {
                    "codepoint": 0xE2DE,
                    "description": "Lower by one septimal comma"
                },
                "accidentalLowerOneTridecimalQuartertone": {
                    "codepoint": 0xE2E4,
                    "description": "Lower by one tridecimal quartertone"
                },
                "accidentalLowerOneUndecimalQuartertone": {
                    "codepoint": 0xE2E2,
                    "description": "Lower by one undecimal quartertone"
                },
                "accidentalLowerTwoSeptimalCommas": {
                    "codepoint": 0xE2E0,
                    "description": "Lower by two septimal commas"
                },
                "accidentalLoweredStockhausen": {
                    "codepoint": 0xED51,
                    "description": "Lowered (Stockhausen)"
                },
                "accidentalNarrowReversedFlat": {
                    "codepoint": 0xE284,
                    "description": "Narrow reversed flat(quarter-tone flat)"
                },
                "accidentalNarrowReversedFlatAndFlat": {
                    "codepoint": 0xE285,
                    "description": "Narrow reversed flat and flat(three-quarter-tones flat)"
                },
                "accidentalNatural": {
                    "alternateCodepoint": 0x266E,
                    "codepoint": 0xE261,
                    "description": "Natural"
                },
                "accidentalNaturalArabic": {
                    "codepoint": 0xED34,
                    "description": "Arabic natural"
                },
                "accidentalNaturalEqualTempered": {
                    "codepoint": 0xE2F2,
                    "description": "Natural equal tempered semitone"
                },
                "accidentalNaturalFlat": {
                    "codepoint": 0xE267,
                    "description": "Natural flat"
                },
                "accidentalNaturalLoweredStockhausen": {
                    "codepoint": 0xED55,
                    "description": "Lowered natural (Stockhausen)"
                },
                "accidentalNaturalOneArrowDown": {
                    "codepoint": 0xE2C2,
                    "description": "Natural lowered by one syntonic comma"
                },
                "accidentalNaturalOneArrowUp": {
                    "codepoint": 0xE2C7,
                    "description": "Natural raised by one syntonic comma"
                },
                "accidentalNaturalRaisedStockhausen": {
                    "codepoint": 0xED54,
                    "description": "Raised natural (Stockhausen)"
                },
                "accidentalNaturalReversed": {
                    "codepoint": 0xE482,
                    "description": "Reversed natural"
                },
                "accidentalNaturalSharp": {
                    "codepoint": 0xE268,
                    "description": "Natural sharp"
                },
                "accidentalNaturalThreeArrowsDown": {
                    "codepoint": 0xE2D6,
                    "description": "Natural lowered by three syntonic commas"
                },
                "accidentalNaturalThreeArrowsUp": {
                    "codepoint": 0xE2DB,
                    "description": "Natural raised by three syntonic commas"
                },
                "accidentalNaturalTwoArrowsDown": {
                    "codepoint": 0xE2CC,
                    "description": "Natural lowered by two syntonic commas"
                },
                "accidentalNaturalTwoArrowsUp": {
                    "codepoint": 0xE2D1,
                    "description": "Natural raised by two syntonic commas"
                },
                "accidentalOneAndAHalfSharpsArrowDown": {
                    "codepoint": 0xE29C,
                    "description": "One and a half sharps with arrow down"
                },
                "accidentalOneAndAHalfSharpsArrowUp": {
                    "codepoint": 0xE29B,
                    "description": "One and a half sharps with arrow up"
                },
                "accidentalOneQuarterToneFlatFerneyhough": {
                    "codepoint": 0xE48F,
                    "description": "One-quarter-tone flat (Ferneyhough)"
                },
                "accidentalOneQuarterToneFlatStockhausen": {
                    "codepoint": 0xED59,
                    "description": "One-quarter-tone flat (Stockhausen)"
                },
                "accidentalOneQuarterToneSharpFerneyhough": {
                    "codepoint": 0xE48E,
                    "description": "One-quarter-tone sharp (Ferneyhough)"
                },
                "accidentalOneQuarterToneSharpStockhausen": {
                    "codepoint": 0xED58,
                    "description": "One-quarter-tone sharp (Stockhausen)"
                },
                "accidentalOneThirdToneFlatFerneyhough": {
                    "codepoint": 0xE48B,
                    "description": "One-third-tone flat (Ferneyhough)"
                },
                "accidentalOneThirdToneSharpFerneyhough": {
                    "codepoint": 0xE48A,
                    "description": "One-third-tone sharp (Ferneyhough)"
                },
                "accidentalParensLeft": {
                    "codepoint": 0xE26A,
                    "description": "Accidental parenthesis, left"
                },
                "accidentalParensRight": {
                    "codepoint": 0xE26B,
                    "description": "Accidental parenthesis, right"
                },
                "accidentalQuarterFlatEqualTempered": {
                    "codepoint": 0xE2F5,
                    "description": "Lower by one equal tempered quarter-tone"
                },
                "accidentalQuarterSharpEqualTempered": {
                    "codepoint": 0xE2F6,
                    "description": "Raise by one equal tempered quarter tone"
                },
                "accidentalQuarterToneFlat4": {
                    "alternateCodepoint": 0x1D133,
                    "codepoint": 0xE47F,
                    "description": "Quarter-tone flat"
                },
                "accidentalQuarterToneFlatArabic": {
                    "codepoint": 0xED33,
                    "description": "Arabic quarter-tone flat"
                },
                "accidentalQuarterToneFlatArrowUp": {
                    "alternateCodepoint": 0x1D12C,
                    "codepoint": 0xE270,
                    "description": "Quarter-tone flat"
                },
                "accidentalQuarterToneFlatFilledReversed": {
                    "codepoint": 0xE480,
                    "description": "Filled reversed flat (quarter-tone flat)"
                },
                "accidentalQuarterToneFlatNaturalArrowDown": {
                    "alternateCodepoint": 0x1D12F,
                    "codepoint": 0xE273,
                    "description": "Quarter-tone flat"
                },
                "accidentalQuarterToneFlatPenderecki": {
                    "codepoint": 0xE478,
                    "description": "Quarter tone flat (Penderecki)"
                },
                "accidentalQuarterToneFlatStein": {
                    "codepoint": 0xE280,
                    "description": "Reversed flat (quarter-tone flat) (Stein)"
                },
                "accidentalQuarterToneFlatVanBlankenburg": {
                    "codepoint": 0xE488,
                    "description": "Quarter-tone flat (van Blankenburg)"
                },
                "accidentalQuarterToneSharp4": {
                    "alternateCodepoint": 0x1D132,
                    "codepoint": 0xE47E,
                    "description": "Quarter-tone sharp"
                },
                "accidentalQuarterToneSharpArabic": {
                    "codepoint": 0xED35,
                    "description": "Arabic quarter-tone sharp"
                },
                "accidentalQuarterToneSharpArrowDown": {
                    "alternateCodepoint": 0x1D131,
                    "codepoint": 0xE275,
                    "description": "Quarter-tone sharp"
                },
                "accidentalQuarterToneSharpBusotti": {
                    "codepoint": 0xE472,
                    "description": "Quarter tone sharp (Bussotti)"
                },
                "accidentalQuarterToneSharpNaturalArrowUp": {
                    "alternateCodepoint": 0x1D12E,
                    "codepoint": 0xE272,
                    "description": "Quarter-tone sharp"
                },
                "accidentalQuarterToneSharpStein": {
                    "codepoint": 0xE282,
                    "description": "Half sharp (quarter-tone sharp) (Stein)"
                },
                "accidentalQuarterToneSharpWiggle": {
                    "codepoint": 0xE475,
                    "description": "Quarter tone sharp with wiggly tail"
                },
                "accidentalRaiseOneSeptimalComma": {
                    "codepoint": 0xE2DF,
                    "description": "Raise by one septimal comma"
                },
                "accidentalRaiseOneTridecimalQuartertone": {
                    "codepoint": 0xE2E5,
                    "description": "Raise by one tridecimal quartertone"
                },
                "accidentalRaiseOneUndecimalQuartertone": {
                    "codepoint": 0xE2E3,
                    "description": "Raise by one undecimal quartertone"
                },
                "accidentalRaiseTwoSeptimalCommas": {
                    "codepoint": 0xE2E1,
                    "description": "Raise by two septimal commas"
                },
                "accidentalRaisedStockhausen": {
                    "codepoint": 0xED50,
                    "description": "Raised (Stockhausen)"
                },
                "accidentalReversedFlatAndFlatArrowDown": {
                    "codepoint": 0xE295,
                    "description": "Reversed flat and flat with arrow down"
                },
                "accidentalReversedFlatAndFlatArrowUp": {
                    "codepoint": 0xE294,
                    "description": "Reversed flat and flat with arrow up"
                },
                "accidentalReversedFlatArrowDown": {
                    "codepoint": 0xE291,
                    "description": "Reversed flat with arrow down"
                },
                "accidentalReversedFlatArrowUp": {
                    "codepoint": 0xE290,
                    "description": "Reversed flat with arrow up"
                },
                "accidentalSharp": {
                    "alternateCodepoint": 0x266F,
                    "codepoint": 0xE262,
                    "description": "Sharp"
                },
                "accidentalSharpArabic": {
                    "codepoint": 0xED36,
                    "description": "Arabic half-tone sharp"
                },
                "accidentalSharpEqualTempered": {
                    "codepoint": 0xE2F3,
                    "description": "Sharp equal tempered semitone"
                },
                "accidentalSharpLoweredStockhausen": {
                    "codepoint": 0xED57,
                    "description": "Lowered sharp (Stockhausen)"
                },
                "accidentalSharpOneArrowDown": {
                    "codepoint": 0xE2C3,
                    "description": "Sharp lowered by one syntonic comma"
                },
                "accidentalSharpOneArrowUp": {
                    "codepoint": 0xE2C8,
                    "description": "Sharp raised by one syntonic comma"
                },
                "accidentalSharpOneHorizontalStroke": {
                    "codepoint": 0xE473,
                    "description": "One or three quarter tones sharp"
                },
                "accidentalSharpRaisedStockhausen": {
                    "codepoint": 0xED56,
                    "description": "Raised sharp (Stockhausen)"
                },
                "accidentalSharpRepeatedLineStockhausen": {
                    "codepoint": 0xED5E,
                    "description": "Repeated sharp, note on line (Stockhausen)"
                },
                "accidentalSharpRepeatedSpaceStockhausen": {
                    "codepoint": 0xED5D,
                    "description": "Repeated sharp, note in space (Stockhausen)"
                },
                "accidentalSharpReversed": {
                    "codepoint": 0xE481,
                    "description": "Reversed sharp"
                },
                "accidentalSharpSharp": {
                    "codepoint": 0xE269,
                    "description": "Sharp sharp"
                },
                "accidentalSharpThreeArrowsDown": {
                    "codepoint": 0xE2D7,
                    "description": "Sharp lowered by three syntonic commas"
                },
                "accidentalSharpThreeArrowsUp": {
                    "codepoint": 0xE2DC,
                    "description": "Sharp raised by three syntonic commas"
                },
                "accidentalSharpTwoArrowsDown": {
                    "codepoint": 0xE2CD,
                    "description": "Sharp lowered by two syntonic commas"
                },
                "accidentalSharpTwoArrowsUp": {
                    "codepoint": 0xE2D2,
                    "description": "Sharp raised by two syntonic commas"
                },
                "accidentalSims12Down": {
                    "codepoint": 0xE2A0,
                    "description": "1/12 tone low"
                },
                "accidentalSims12Up": {
                    "codepoint": 0xE2A3,
                    "description": "1/12 tone high"
                },
                "accidentalSims4Down": {
                    "codepoint": 0xE2A2,
                    "description": "1/4 tone low"
                },
                "accidentalSims4Up": {
                    "codepoint": 0xE2A5,
                    "description": "1/4 tone high"
                },
                "accidentalSims6Down": {
                    "codepoint": 0xE2A1,
                    "description": "1/6 tone low"
                },
                "accidentalSims6Up": {
                    "codepoint": 0xE2A4,
                    "description": "1/6 tone high"
                },
                "accidentalSori": {
                    "codepoint": 0xE461,
                    "description": "Sori (quarter tone sharp)"
                },
                "accidentalTavenerFlat": {
                    "codepoint": 0xE477,
                    "description": "Byzantine-style Bakiye flat (Tavener)"
                },
                "accidentalTavenerSharp": {
                    "codepoint": 0xE476,
                    "description": "Byzantine-style Bu\u0308yu\u0308k mu\u0308cenneb sharp (Tavener)"
                },
                "accidentalThreeQuarterTonesFlatArabic": {
                    "codepoint": 0xED31,
                    "description": "Arabic three-quarter-tones flat"
                },
                "accidentalThreeQuarterTonesFlatArrowDown": {
                    "alternateCodepoint": 0x1D12D,
                    "codepoint": 0xE271,
                    "description": "Three-quarter-tones flat"
                },
                "accidentalThreeQuarterTonesFlatArrowUp": {
                    "codepoint": 0xE278,
                    "description": "Three-quarter-tones flat"
                },
                "accidentalThreeQuarterTonesFlatCouper": {
                    "codepoint": 0xE489,
                    "description": "Three-quarter-tones flat (Couper)"
                },
                "accidentalThreeQuarterTonesFlatGrisey": {
                    "codepoint": 0xE486,
                    "description": "Three-quarter-tones flat (Grisey)"
                },
                "accidentalThreeQuarterTonesFlatTartini": {
                    "codepoint": 0xE487,
                    "description": "Three-quarter-tones flat (Tartini)"
                },
                "accidentalThreeQuarterTonesFlatZimmermann": {
                    "codepoint": 0xE281,
                    "description": "Reversed flat and flat (three-quarter-tones flat) (Zimmermann)"
                },
                "accidentalThreeQuarterTonesSharpArabic": {
                    "codepoint": 0xED37,
                    "description": "Arabic three-quarter-tones sharp"
                },
                "accidentalThreeQuarterTonesSharpArrowDown": {
                    "codepoint": 0xE277,
                    "description": "Three-quarter-tones sharp"
                },
                "accidentalThreeQuarterTonesSharpArrowUp": {
                    "alternateCodepoint": 0x1D130,
                    "codepoint": 0xE274,
                    "description": "Three-quarter-tones sharp"
                },
                "accidentalThreeQuarterTonesSharpBusotti": {
                    "codepoint": 0xE474,
                    "description": "Three quarter tones sharp (Bussotti)"
                },
                "accidentalThreeQuarterTonesSharpStein": {
                    "codepoint": 0xE283,
                    "description": "One and a half sharps (three-quarter-tones sharp) (Stein)"
                },
                "accidentalThreeQuarterTonesSharpStockhausen": {
                    "codepoint": 0xED5A,
                    "description": "Three-quarter-tones sharp (Stockhausen)"
                },
                "accidentalTripleFlat": {
                    "codepoint": 0xE266,
                    "description": "Triple flat"
                },
                "accidentalTripleSharp": {
                    "codepoint": 0xE265,
                    "description": "Triple sharp"
                },
                "accidentalTwoThirdTonesFlatFerneyhough": {
                    "codepoint": 0xE48D,
                    "description": "Two-third-tones flat (Ferneyhough)"
                },
                "accidentalTwoThirdTonesSharpFerneyhough": {
                    "codepoint": 0xE48C,
                    "description": "Two-third-tones sharp (Ferneyhough)"
                },
                "accidentalWilsonMinus": {
                    "codepoint": 0xE47C,
                    "description": "Wilson minus (5 comma down)"
                },
                "accidentalWilsonPlus": {
                    "codepoint": 0xE47B,
                    "description": "Wilson plus (5 comma up)"
                },
                "accidentalWyschnegradsky10TwelfthsFlat": {
                    "codepoint": 0xE434,
                    "description": "5/6 tone flat"
                },
                "accidentalWyschnegradsky10TwelfthsSharp": {
                    "codepoint": 0xE429,
                    "description": "5/6 tone sharp"
                },
                "accidentalWyschnegradsky11TwelfthsFlat": {
                    "codepoint": 0xE435,
                    "description": "11/12 tone flat"
                },
                "accidentalWyschnegradsky11TwelfthsSharp": {
                    "codepoint": 0xE42A,
                    "description": "11/12 tone sharp"
                },
                "accidentalWyschnegradsky1TwelfthsFlat": {
                    "codepoint": 0xE42B,
                    "description": "1/12 tone flat"
                },
                "accidentalWyschnegradsky1TwelfthsSharp": {
                    "codepoint": 0xE420,
                    "description": "1/12 tone sharp"
                },
                "accidentalWyschnegradsky2TwelfthsFlat": {
                    "codepoint": 0xE42C,
                    "description": "1/6 tone flat"
                },
                "accidentalWyschnegradsky2TwelfthsSharp": {
                    "codepoint": 0xE421,
                    "description": "1/6 tone sharp"
                },
                "accidentalWyschnegradsky3TwelfthsFlat": {
                    "codepoint": 0xE42D,
                    "description": "1/4 tone flat"
                },
                "accidentalWyschnegradsky3TwelfthsSharp": {
                    "codepoint": 0xE422,
                    "description": "1/4 tone sharp"
                },
                "accidentalWyschnegradsky4TwelfthsFlat": {
                    "codepoint": 0xE42E,
                    "description": "1/3 tone flat"
                },
                "accidentalWyschnegradsky4TwelfthsSharp": {
                    "codepoint": 0xE423,
                    "description": "1/3 tone sharp"
                },
                "accidentalWyschnegradsky5TwelfthsFlat": {
                    "codepoint": 0xE42F,
                    "description": "5/12 tone flat"
                },
                "accidentalWyschnegradsky5TwelfthsSharp": {
                    "codepoint": 0xE424,
                    "description": "5/12 tone sharp"
                },
                "accidentalWyschnegradsky6TwelfthsFlat": {
                    "codepoint": 0xE430,
                    "description": "1/2 tone flat"
                },
                "accidentalWyschnegradsky6TwelfthsSharp": {
                    "codepoint": 0xE425,
                    "description": "1/2 tone sharp"
                },
                "accidentalWyschnegradsky7TwelfthsFlat": {
                    "codepoint": 0xE431,
                    "description": "7/12 tone flat"
                },
                "accidentalWyschnegradsky7TwelfthsSharp": {
                    "codepoint": 0xE426,
                    "description": "7/12 tone sharp"
                },
                "accidentalWyschnegradsky8TwelfthsFlat": {
                    "codepoint": 0xE432,
                    "description": "2/3 tone flat"
                },
                "accidentalWyschnegradsky8TwelfthsSharp": {
                    "codepoint": 0xE427,
                    "description": "2/3 tone sharp"
                },
                "accidentalWyschnegradsky9TwelfthsFlat": {
                    "codepoint": 0xE433,
                    "description": "3/4 tone flat"
                },
                "accidentalWyschnegradsky9TwelfthsSharp": {
                    "codepoint": 0xE428,
                    "description": "3/4 tone sharp"
                },
                "accidentalXenakisOneThirdToneSharp": {
                    "codepoint": 0xE470,
                    "description": "One-third-tone sharp (Xenakis)"
                },
                "accidentalXenakisTwoThirdTonesSharp": {
                    "codepoint": 0xE471,
                    "description": "Two-third-tones sharp (Xenakis)"
                },
                "analyticsChoralmelodie": {
                    "codepoint": 0xE86A,
                    "description": "Choralmelodie (Berg)"
                },
                "analyticsEndStimme": {
                    "alternateCodepoint": 0x1D1A8,
                    "codepoint": 0xE863,
                    "description": "End of stimme"
                },
                "analyticsHauptrhythmus": {
                    "codepoint": 0xE86B,
                    "description": "Hauptrhythmus (Berg)"
                },
                "analyticsHauptstimme": {
                    "alternateCodepoint": 0x1D1A6,
                    "codepoint": 0xE860,
                    "description": "Hauptstimme"
                },
                "analyticsInversion1": {
                    "codepoint": 0xE869,
                    "description": "Inversion 1"
                },
                "analyticsNebenstimme": {
                    "alternateCodepoint": 0x1D1A7,
                    "codepoint": 0xE861,
                    "description": "Nebenstimme"
                },
                "analyticsStartStimme": {
                    "codepoint": 0xE862,
                    "description": "Start of stimme"
                },
                "analyticsTheme": {
                    "codepoint": 0xE864,
                    "description": "Theme"
                },
                "analyticsTheme1": {
                    "codepoint": 0xE868,
                    "description": "Theme 1"
                },
                "analyticsThemeInversion": {
                    "codepoint": 0xE867,
                    "description": "Inversion of theme"
                },
                "analyticsThemeRetrograde": {
                    "codepoint": 0xE865,
                    "description": "Retrograde of theme"
                },
                "analyticsThemeRetrogradeInversion": {
                    "codepoint": 0xE866,
                    "description": "Retrograde inversion of theme"
                },
                "arpeggiatoDown": {
                    "alternateCodepoint": 0x1D184,
                    "codepoint": 0xE635,
                    "description": "Arpeggiato down"
                },
                "arpeggiatoUp": {
                    "alternateCodepoint": 0x1D183,
                    "codepoint": 0xE634,
                    "description": "Arpeggiato up"
                },
                "arrowBlackDown": {
                    "codepoint": 0xEB64,
                    "description": "Black arrow down (S)"
                },
                "arrowBlackDownLeft": {
                    "codepoint": 0xEB65,
                    "description": "Black arrow down-left (SW)"
                },
                "arrowBlackDownRight": {
                    "codepoint": 0xEB63,
                    "description": "Black arrow down-right (SE)"
                },
                "arrowBlackLeft": {
                    "codepoint": 0xEB66,
                    "description": "Black arrow left (W)"
                },
                "arrowBlackRight": {
                    "codepoint": 0xEB62,
                    "description": "Black arrow right (E)"
                },
                "arrowBlackUp": {
                    "codepoint": 0xEB60,
                    "description": "Black arrow up (N)"
                },
                "arrowBlackUpLeft": {
                    "codepoint": 0xEB67,
                    "description": "Black arrow up-left (NW)"
                },
                "arrowBlackUpRight": {
                    "codepoint": 0xEB61,
                    "description": "Black arrow up-right (NE)"
                },
                "arrowOpenDown": {
                    "codepoint": 0xEB74,
                    "description": "Open arrow down (S)"
                },
                "arrowOpenDownLeft": {
                    "codepoint": 0xEB75,
                    "description": "Open arrow down-left (SW)"
                },
                "arrowOpenDownRight": {
                    "codepoint": 0xEB73,
                    "description": "Open arrow down-right (SE)"
                },
                "arrowOpenLeft": {
                    "codepoint": 0xEB76,
                    "description": "Open arrow left (W)"
                },
                "arrowOpenRight": {
                    "codepoint": 0xEB72,
                    "description": "Open arrow right (E)"
                },
                "arrowOpenUp": {
                    "codepoint": 0xEB70,
                    "description": "Open arrow up (N)"
                },
                "arrowOpenUpLeft": {
                    "codepoint": 0xEB77,
                    "description": "Open arrow up-left (NW)"
                },
                "arrowOpenUpRight": {
                    "codepoint": 0xEB71,
                    "description": "Open arrow up-right (NE)"
                },
                "arrowWhiteDown": {
                    "codepoint": 0xEB6C,
                    "description": "White arrow down (S)"
                },
                "arrowWhiteDownLeft": {
                    "codepoint": 0xEB6D,
                    "description": "White arrow down-left (SW)"
                },
                "arrowWhiteDownRight": {
                    "codepoint": 0xEB6B,
                    "description": "White arrow down-right (SE)"
                },
                "arrowWhiteLeft": {
                    "codepoint": 0xEB6E,
                    "description": "White arrow left (W)"
                },
                "arrowWhiteRight": {
                    "codepoint": 0xEB6A,
                    "description": "White arrow right (E)"
                },
                "arrowWhiteUp": {
                    "codepoint": 0xEB68,
                    "description": "White arrow up (N)"
                },
                "arrowWhiteUpLeft": {
                    "codepoint": 0xEB6F,
                    "description": "White arrow up-left (NW)"
                },
                "arrowWhiteUpRight": {
                    "codepoint": 0xEB69,
                    "description": "White arrow up-right (NE)"
                },
                "arrowheadBlackDown": {
                    "codepoint": 0xEB7C,
                    "description": "Black arrowhead down (S)"
                },
                "arrowheadBlackDownLeft": {
                    "codepoint": 0xEB7D,
                    "description": "Black arrowhead down-left (SW)"
                },
                "arrowheadBlackDownRight": {
                    "codepoint": 0xEB7B,
                    "description": "Black arrowhead down-right (SE)"
                },
                "arrowheadBlackLeft": {
                    "codepoint": 0xEB7E,
                    "description": "Black arrowhead left (W)"
                },
                "arrowheadBlackRight": {
                    "codepoint": 0xEB7A,
                    "description": "Black arrowhead right (E)"
                },
                "arrowheadBlackUp": {
                    "codepoint": 0xEB78,
                    "description": "Black arrowhead up (N)"
                },
                "arrowheadBlackUpLeft": {
                    "codepoint": 0xEB7F,
                    "description": "Black arrowhead up-left (NW)"
                },
                "arrowheadBlackUpRight": {
                    "codepoint": 0xEB79,
                    "description": "Black arrowhead up-right (NE)"
                },
                "arrowheadOpenDown": {
                    "codepoint": 0xEB8C,
                    "description": "Open arrowhead down (S)"
                },
                "arrowheadOpenDownLeft": {
                    "codepoint": 0xEB8D,
                    "description": "Open arrowhead down-left (SW)"
                },
                "arrowheadOpenDownRight": {
                    "codepoint": 0xEB8B,
                    "description": "Open arrowhead down-right (SE)"
                },
                "arrowheadOpenLeft": {
                    "codepoint": 0xEB8E,
                    "description": "Open arrowhead left (W)"
                },
                "arrowheadOpenRight": {
                    "codepoint": 0xEB8A,
                    "description": "Open arrowhead right (E)"
                },
                "arrowheadOpenUp": {
                    "codepoint": 0xEB88,
                    "description": "Open arrowhead up (N)"
                },
                "arrowheadOpenUpLeft": {
                    "codepoint": 0xEB8F,
                    "description": "Open arrowhead up-left (NW)"
                },
                "arrowheadOpenUpRight": {
                    "codepoint": 0xEB89,
                    "description": "Open arrowhead up-right (NE)"
                },
                "arrowheadWhiteDown": {
                    "codepoint": 0xEB84,
                    "description": "White arrowhead down (S)"
                },
                "arrowheadWhiteDownLeft": {
                    "codepoint": 0xEB85,
                    "description": "White arrowhead down-left (SW)"
                },
                "arrowheadWhiteDownRight": {
                    "codepoint": 0xEB83,
                    "description": "White arrowhead down-right (SE)"
                },
                "arrowheadWhiteLeft": {
                    "codepoint": 0xEB86,
                    "description": "White arrowhead left (W)"
                },
                "arrowheadWhiteRight": {
                    "codepoint": 0xEB82,
                    "description": "White arrowhead right (E)"
                },
                "arrowheadWhiteUp": {
                    "codepoint": 0xEB80,
                    "description": "White arrowhead up (N)"
                },
                "arrowheadWhiteUpLeft": {
                    "codepoint": 0xEB87,
                    "description": "White arrowhead up-left (NW)"
                },
                "arrowheadWhiteUpRight": {
                    "codepoint": 0xEB81,
                    "description": "White arrowhead up-right (NE)"
                },
                "articAccentAbove": {
                    "alternateCodepoint": 0x1D17B,
                    "codepoint": 0xE4A0,
                    "description": "Accent above"
                },
                "articAccentBelow": {
                    "codepoint": 0xE4A1,
                    "description": "Accent below"
                },
                "articAccentStaccatoAbove": {
                    "alternateCodepoint": 0x1D181,
                    "codepoint": 0xE4B0,
                    "description": "Accent-staccato above"
                },
                "articAccentStaccatoBelow": {
                    "codepoint": 0xE4B1,
                    "description": "Accent-staccato below"
                },
                "articLaissezVibrerAbove": {
                    "codepoint": 0xE4BA,
                    "description": "Laissez vibrer (l.v.) above"
                },
                "articLaissezVibrerBelow": {
                    "codepoint": 0xE4BB,
                    "description": "Laissez vibrer (l.v.) below"
                },
                "articMarcatoAbove": {
                    "alternateCodepoint": 0x1D17F,
                    "codepoint": 0xE4AC,
                    "description": "Marcato above"
                },
                "articMarcatoBelow": {
                    "codepoint": 0xE4AD,
                    "description": "Marcato below"
                },
                "articMarcatoStaccatoAbove": {
                    "alternateCodepoint": 0x1D180,
                    "codepoint": 0xE4AE,
                    "description": "Marcato-staccato above"
                },
                "articMarcatoStaccatoBelow": {
                    "codepoint": 0xE4AF,
                    "description": "Marcato-staccato below"
                },
                "articMarcatoTenutoAbove": {
                    "codepoint": 0xE4BC,
                    "description": "Marcato-tenuto above"
                },
                "articMarcatoTenutoBelow": {
                    "codepoint": 0xE4BD,
                    "description": "Marcato-tenuto below"
                },
                "articSoftAccentAbove": {
                    "codepoint": 0xED40,
                    "description": "Soft accent above"
                },
                "articSoftAccentBelow": {
                    "codepoint": 0xED41,
                    "description": "Soft accent below"
                },
                "articSoftAccentStaccatoAbove": {
                    "codepoint": 0xED42,
                    "description": "Soft accent-staccato above"
                },
                "articSoftAccentStaccatoBelow": {
                    "codepoint": 0xED43,
                    "description": "Soft accent-staccato below"
                },
                "articSoftAccentTenutoAbove": {
                    "codepoint": 0xED44,
                    "description": "Soft accent-tenuto above"
                },
                "articSoftAccentTenutoBelow": {
                    "codepoint": 0xED45,
                    "description": "Soft accent-tenuto below"
                },
                "articSoftAccentTenutoStaccatoAbove": {
                    "codepoint": 0xED46,
                    "description": "Soft accent-tenuto-staccato above"
                },
                "articSoftAccentTenutoStaccatoBelow": {
                    "codepoint": 0xED47,
                    "description": "Soft accent-tenuto-staccato below"
                },
                "articStaccatissimoAbove": {
                    "alternateCodepoint": 0x1D17E,
                    "codepoint": 0xE4A6,
                    "description": "Staccatissimo above"
                },
                "articStaccatissimoBelow": {
                    "codepoint": 0xE4A7,
                    "description": "Staccatissimo below"
                },
                "articStaccatissimoStrokeAbove": {
                    "codepoint": 0xE4AA,
                    "description": "Staccatissimo stroke above"
                },
                "articStaccatissimoStrokeBelow": {
                    "codepoint": 0xE4AB,
                    "description": "Staccatissimo stroke below"
                },
                "articStaccatissimoWedgeAbove": {
                    "codepoint": 0xE4A8,
                    "description": "Staccatissimo wedge above"
                },
                "articStaccatissimoWedgeBelow": {
                    "codepoint": 0xE4A9,
                    "description": "Staccatissimo wedge below"
                },
                "articStaccatoAbove": {
                    "alternateCodepoint": 0x1D17C,
                    "codepoint": 0xE4A2,
                    "description": "Staccato above"
                },
                "articStaccatoBelow": {
                    "codepoint": 0xE4A3,
                    "description": "Staccato below"
                },
                "articStressAbove": {
                    "codepoint": 0xE4B6,
                    "description": "Stress above"
                },
                "articStressBelow": {
                    "codepoint": 0xE4B7,
                    "description": "Stress below"
                },
                "articTenutoAbove": {
                    "alternateCodepoint": 0x1D17D,
                    "codepoint": 0xE4A4,
                    "description": "Tenuto above"
                },
                "articTenutoAccentAbove": {
                    "codepoint": 0xE4B4,
                    "description": "Tenuto-accent above"
                },
                "articTenutoAccentBelow": {
                    "codepoint": 0xE4B5,
                    "description": "Tenuto-accent below"
                },
                "articTenutoBelow": {
                    "codepoint": 0xE4A5,
                    "description": "Tenuto below"
                },
                "articTenutoStaccatoAbove": {
                    "alternateCodepoint": 0x1D182,
                    "codepoint": 0xE4B2,
                    "description": "Lour\u00e9 (tenuto-staccato) above"
                },
                "articTenutoStaccatoBelow": {
                    "codepoint": 0xE4B3,
                    "description": "Lour\u00e9 (tenuto-staccato) below"
                },
                "articUnstressAbove": {
                    "codepoint": 0xE4B8,
                    "description": "Unstress above"
                },
                "articUnstressBelow": {
                    "codepoint": 0xE4B9,
                    "description": "Unstress below"
                },
                "augmentationDot": {
                    "alternateCodepoint": 0x1D16D,
                    "codepoint": 0xE1E7,
                    "description": "Augmentation dot"
                },
                "barlineDashed": {
                    "alternateCodepoint": 0x1D104,
                    "codepoint": 0xE036,
                    "description": "Dashed barline"
                },
                "barlineDotted": {
                    "codepoint": 0xE037,
                    "description": "Dotted barline"
                },
                "barlineDouble": {
                    "alternateCodepoint": 0x1D101,
                    "codepoint": 0xE031,
                    "description": "Double barline"
                },
                "barlineFinal": {
                    "alternateCodepoint": 0x1D102,
                    "codepoint": 0xE032,
                    "description": "Final barline"
                },
                "barlineHeavy": {
                    "codepoint": 0xE034,
                    "description": "Heavy barline"
                },
                "barlineHeavyHeavy": {
                    "codepoint": 0xE035,
                    "description": "Heavy double barline"
                },
                "barlineReverseFinal": {
                    "alternateCodepoint": 0x1D103,
                    "codepoint": 0xE033,
                    "description": "Reverse final barline"
                },
                "barlineShort": {
                    "alternateCodepoint": 0x1D105,
                    "codepoint": 0xE038,
                    "description": "Short barline"
                },
                "barlineSingle": {
                    "alternateCodepoint": 0x1D100,
                    "codepoint": 0xE030,
                    "description": "Single barline"
                },
                "barlineTick": {
                    "codepoint": 0xE039,
                    "description": "Tick barline"
                },
                "beamAccelRit1": {
                    "codepoint": 0xEAF4,
                    "description": "Accel./rit. beam 1 (widest)"
                },
                "beamAccelRit10": {
                    "codepoint": 0xEAFD,
                    "description": "Accel./rit. beam 10"
                },
                "beamAccelRit11": {
                    "codepoint": 0xEAFE,
                    "description": "Accel./rit. beam 11"
                },
                "beamAccelRit12": {
                    "codepoint": 0xEAFF,
                    "description": "Accel./rit. beam 12"
                },
                "beamAccelRit13": {
                    "codepoint": 0xEB00,
                    "description": "Accel./rit. beam 13"
                },
                "beamAccelRit14": {
                    "codepoint": 0xEB01,
                    "description": "Accel./rit. beam 14"
                },
                "beamAccelRit15": {
                    "codepoint": 0xEB02,
                    "description": "Accel./rit. beam 15 (narrowest)"
                },
                "beamAccelRit2": {
                    "codepoint": 0xEAF5,
                    "description": "Accel./rit. beam 2"
                },
                "beamAccelRit3": {
                    "codepoint": 0xEAF6,
                    "description": "Accel./rit. beam 3"
                },
                "beamAccelRit4": {
                    "codepoint": 0xEAF7,
                    "description": "Accel./rit. beam 4"
                },
                "beamAccelRit5": {
                    "codepoint": 0xEAF8,
                    "description": "Accel./rit. beam 5"
                },
                "beamAccelRit6": {
                    "codepoint": 0xEAF9,
                    "description": "Accel./rit. beam 6"
                },
                "beamAccelRit7": {
                    "codepoint": 0xEAFA,
                    "description": "Accel./rit. beam 7"
                },
                "beamAccelRit8": {
                    "codepoint": 0xEAFB,
                    "description": "Accel./rit. beam 8"
                },
                "beamAccelRit9": {
                    "codepoint": 0xEAFC,
                    "description": "Accel./rit. beam 9"
                },
                "beamAccelRitFinal": {
                    "codepoint": 0xEB03,
                    "description": "Accel./rit. beam terminating line"
                },
                "brace": {
                    "alternateCodepoint": 0x1D114,
                    "codepoint": 0xE000,
                    "description": "Brace"
                },
                "bracket": {
                    "alternateCodepoint": 0x1D115,
                    "codepoint": 0xE002,
                    "description": "Bracket"
                },
                "bracketBottom": {
                    "codepoint": 0xE004,
                    "description": "Bracket bottom"
                },
                "bracketTop": {
                    "codepoint": 0xE003,
                    "description": "Bracket top"
                },
                "brassBend": {
                    "alternateCodepoint": 0x1D189,
                    "codepoint": 0xE5E3,
                    "description": "Bend"
                },
                "brassDoitLong": {
                    "codepoint": 0xE5D6,
                    "description": "Doit, long"
                },
                "brassDoitMedium": {
                    "codepoint": 0xE5D5,
                    "description": "Doit, medium"
                },
                "brassDoitShort": {
                    "alternateCodepoint": 0x1D185,
                    "codepoint": 0xE5D4,
                    "description": "Doit, short"
                },
                "brassFallLipLong": {
                    "codepoint": 0xE5D9,
                    "description": "Lip fall, long"
                },
                "brassFallLipMedium": {
                    "codepoint": 0xE5D8,
                    "description": "Lip fall, medium"
                },
                "brassFallLipShort": {
                    "alternateCodepoint": 0x1D186,
                    "codepoint": 0xE5D7,
                    "description": "Lip fall, short"
                },
                "brassFallRoughLong": {
                    "codepoint": 0xE5DF,
                    "description": "Rough fall, long"
                },
                "brassFallRoughMedium": {
                    "codepoint": 0xE5DE,
                    "description": "Rough fall, medium"
                },
                "brassFallRoughShort": {
                    "codepoint": 0xE5DD,
                    "description": "Rough fall, short"
                },
                "brassFallSmoothLong": {
                    "codepoint": 0xE5DC,
                    "description": "Smooth fall, long"
                },
                "brassFallSmoothMedium": {
                    "codepoint": 0xE5DB,
                    "description": "Smooth fall, medium"
                },
                "brassFallSmoothShort": {
                    "codepoint": 0xE5DA,
                    "description": "Smooth fall, short"
                },
                "brassFlip": {
                    "alternateCodepoint": 0x1D187,
                    "codepoint": 0xE5E1,
                    "description": "Flip"
                },
                "brassHarmonMuteClosed": {
                    "codepoint": 0xE5E8,
                    "description": "Harmon mute, stem in"
                },
                "brassHarmonMuteStemHalfLeft": {
                    "codepoint": 0xE5E9,
                    "description": "Harmon mute, stem extended, left"
                },
                "brassHarmonMuteStemHalfRight": {
                    "codepoint": 0xE5EA,
                    "description": "Harmon mute, stem extended, right"
                },
                "brassHarmonMuteStemOpen": {
                    "codepoint": 0xE5EB,
                    "description": "Harmon mute, stem out"
                },
                "brassJazzTurn": {
                    "codepoint": 0xE5E4,
                    "description": "Jazz turn"
                },
                "brassLiftLong": {
                    "codepoint": 0xE5D3,
                    "description": "Lift, long"
                },
                "brassLiftMedium": {
                    "codepoint": 0xE5D2,
                    "description": "Lift, medium"
                },
                "brassLiftShort": {
                    "codepoint": 0xE5D1,
                    "description": "Lift, short"
                },
                "brassLiftSmoothLong": {
                    "codepoint": 0xE5EE,
                    "description": "Smooth lift, long"
                },
                "brassLiftSmoothMedium": {
                    "codepoint": 0xE5ED,
                    "description": "Smooth lift, medium"
                },
                "brassLiftSmoothShort": {
                    "codepoint": 0xE5EC,
                    "description": "Smooth lift, short"
                },
                "brassMuteClosed": {
                    "codepoint": 0xE5E5,
                    "description": "Muted (closed)"
                },
                "brassMuteHalfClosed": {
                    "codepoint": 0xE5E6,
                    "description": "Half-muted (half-closed)"
                },
                "brassMuteOpen": {
                    "codepoint": 0xE5E7,
                    "description": "Open"
                },
                "brassPlop": {
                    "codepoint": 0xE5E0,
                    "description": "Plop"
                },
                "brassScoop": {
                    "codepoint": 0xE5D0,
                    "description": "Scoop"
                },
                "brassSmear": {
                    "alternateCodepoint": 0x1D188,
                    "codepoint": 0xE5E2,
                    "description": "Smear"
                },
                "brassValveTrill": {
                    "codepoint": 0xE5EF,
                    "description": "Valve trill"
                },
                "breathMarkComma": {
                    "alternateCodepoint": 0x1D112,
                    "codepoint": 0xE4CE,
                    "description": "Breath mark (comma)"
                },
                "breathMarkSalzedo": {
                    "codepoint": 0xE4D5,
                    "description": "Breath mark (Salzedo)"
                },
                "breathMarkTick": {
                    "codepoint": 0xE4CF,
                    "description": "Breath mark (tick-like)"
                },
                "breathMarkUpbow": {
                    "codepoint": 0xE4D0,
                    "description": "Breath mark (upbow-like)"
                },
                "bridgeClef": {
                    "codepoint": 0xE078,
                    "description": "Bridge clef"
                },
                "buzzRoll": {
                    "codepoint": 0xE22A,
                    "description": "Buzz roll"
                },
                "cClef": {
                    "alternateCodepoint": 0x1D121,
                    "codepoint": 0xE05C,
                    "description": "C clef"
                },
                "cClef8vb": {
                    "codepoint": 0xE05D,
                    "description": "C clef ottava bassa"
                },
                "cClefArrowDown": {
                    "codepoint": 0xE05F,
                    "description": "C clef, arrow down"
                },
                "cClefArrowUp": {
                    "codepoint": 0xE05E,
                    "description": "C clef, arrow up"
                },
                "cClefChange": {
                    "codepoint": 0xE07B,
                    "description": "C clef change"
                },
                "cClefCombining": {
                    "codepoint": 0xE061,
                    "description": "Combining C clef"
                },
                "cClefReversed": {
                    "codepoint": 0xE075,
                    "description": "Reversed C clef"
                },
                "cClefSquare": {
                    "codepoint": 0xE060,
                    "description": "C clef (19th century)"
                },
                "caesura": {
                    "alternateCodepoint": 0x1D113,
                    "codepoint": 0xE4D1,
                    "description": "Caesura"
                },
                "caesuraCurved": {
                    "codepoint": 0xE4D4,
                    "description": "Curved caesura"
                },
                "caesuraShort": {
                    "codepoint": 0xE4D3,
                    "description": "Short caesura"
                },
                "caesuraThick": {
                    "codepoint": 0xE4D2,
                    "description": "Thick caesura"
                },
                "chantAccentusAbove": {
                    "codepoint": 0xE9D6,
                    "description": "Accentus above"
                },
                "chantAccentusBelow": {
                    "codepoint": 0xE9D7,
                    "description": "Accentus below"
                },
                "chantAuctumAsc": {
                    "codepoint": 0xE994,
                    "description": "Punctum auctum, ascending"
                },
                "chantAuctumDesc": {
                    "codepoint": 0xE995,
                    "description": "Punctum auctum, descending"
                },
                "chantAugmentum": {
                    "codepoint": 0xE9D9,
                    "description": "Augmentum (mora)"
                },
                "chantCaesura": {
                    "codepoint": 0xE8F8,
                    "description": "Caesura"
                },
                "chantCclef": {
                    "alternateCodepoint": 0x1D1D0,
                    "codepoint": 0xE906,
                    "description": "Plainchant C clef"
                },
                "chantCirculusAbove": {
                    "codepoint": 0xE9D2,
                    "description": "Circulus above"
                },
                "chantCirculusBelow": {
                    "codepoint": 0xE9D3,
                    "description": "Circulus below"
                },
                "chantConnectingLineAsc2nd": {
                    "codepoint": 0xE9BD,
                    "description": "Connecting line, ascending 2nd"
                },
                "chantConnectingLineAsc3rd": {
                    "codepoint": 0xE9BE,
                    "description": "Connecting line, ascending 3rd"
                },
                "chantConnectingLineAsc4th": {
                    "codepoint": 0xE9BF,
                    "description": "Connecting line, ascending 4th"
                },
                "chantConnectingLineAsc5th": {
                    "codepoint": 0xE9C0,
                    "description": "Connecting line, ascending 5th"
                },
                "chantConnectingLineAsc6th": {
                    "codepoint": 0xE9C1,
                    "description": "Connecting line, ascending 6th"
                },
                "chantCustosStemDownPosHigh": {
                    "codepoint": 0xEA08,
                    "description": "Plainchant custos, stem down, high position"
                },
                "chantCustosStemDownPosHighest": {
                    "codepoint": 0xEA09,
                    "description": "Plainchant custos, stem down, highest position"
                },
                "chantCustosStemDownPosMiddle": {
                    "codepoint": 0xEA07,
                    "description": "Plainchant custos, stem down, middle position"
                },
                "chantCustosStemUpPosLow": {
                    "codepoint": 0xEA05,
                    "description": "Plainchant custos, stem up, low position"
                },
                "chantCustosStemUpPosLowest": {
                    "codepoint": 0xEA04,
                    "description": "Plainchant custos, stem up, lowest position"
                },
                "chantCustosStemUpPosMiddle": {
                    "codepoint": 0xEA06,
                    "description": "Plainchant custos, stem up, middle position"
                },
                "chantDeminutumLower": {
                    "codepoint": 0xE9B3,
                    "description": "Punctum deminutum, lower"
                },
                "chantDeminutumUpper": {
                    "codepoint": 0xE9B2,
                    "description": "Punctum deminutum, upper"
                },
                "chantDivisioFinalis": {
                    "codepoint": 0xE8F6,
                    "description": "Divisio finalis"
                },
                "chantDivisioMaior": {
                    "codepoint": 0xE8F4,
                    "description": "Divisio maior"
                },
                "chantDivisioMaxima": {
                    "codepoint": 0xE8F5,
                    "description": "Divisio maxima"
                },
                "chantDivisioMinima": {
                    "codepoint": 0xE8F3,
                    "description": "Divisio minima"
                },
                "chantEntryLineAsc2nd": {
                    "codepoint": 0xE9B4,
                    "description": "Entry line, ascending 2nd"
                },
                "chantEntryLineAsc3rd": {
                    "codepoint": 0xE9B5,
                    "description": "Entry line, ascending 3rd"
                },
                "chantEntryLineAsc4th": {
                    "codepoint": 0xE9B6,
                    "description": "Entry line, ascending 4th"
                },
                "chantEntryLineAsc5th": {
                    "codepoint": 0xE9B7,
                    "description": "Entry line, ascending 5th"
                },
                "chantEntryLineAsc6th": {
                    "codepoint": 0xE9B8,
                    "description": "Entry line, ascending 6th"
                },
                "chantEpisema": {
                    "codepoint": 0xE9D8,
                    "description": "Episema"
                },
                "chantFclef": {
                    "alternateCodepoint": 0x1D1D1,
                    "codepoint": 0xE902,
                    "description": "Plainchant F clef"
                },
                "chantIctusAbove": {
                    "codepoint": 0xE9D0,
                    "description": "Ictus above"
                },
                "chantIctusBelow": {
                    "codepoint": 0xE9D1,
                    "description": "Ictus below"
                },
                "chantLigaturaDesc2nd": {
                    "codepoint": 0xE9B9,
                    "description": "Ligated stroke, descending 2nd"
                },
                "chantLigaturaDesc3rd": {
                    "codepoint": 0xE9BA,
                    "description": "Ligated stroke, descending 3rd"
                },
                "chantLigaturaDesc4th": {
                    "codepoint": 0xE9BB,
                    "description": "Ligated stroke, descending 4th"
                },
                "chantLigaturaDesc5th": {
                    "codepoint": 0xE9BC,
                    "description": "Ligated stroke, descending 5th"
                },
                "chantOriscusAscending": {
                    "codepoint": 0xE99C,
                    "description": "Oriscus ascending"
                },
                "chantOriscusDescending": {
                    "codepoint": 0xE99D,
                    "description": "Oriscus descending"
                },
                "chantOriscusLiquescens": {
                    "codepoint": 0xE99E,
                    "description": "Oriscus liquescens"
                },
                "chantPodatusLower": {
                    "codepoint": 0xE9B0,
                    "description": "Podatus, lower"
                },
                "chantPodatusUpper": {
                    "alternateCodepoint": 0x1D1D4,
                    "codepoint": 0xE9B1,
                    "description": "Podatus, upper"
                },
                "chantPunctum": {
                    "codepoint": 0xE990,
                    "description": "Punctum"
                },
                "chantPunctumCavum": {
                    "codepoint": 0xE998,
                    "description": "Punctum cavum"
                },
                "chantPunctumDeminutum": {
                    "codepoint": 0xE9A1,
                    "description": "Punctum deminutum"
                },
                "chantPunctumInclinatum": {
                    "codepoint": 0xE991,
                    "description": "Punctum inclinatum"
                },
                "chantPunctumInclinatumAuctum": {
                    "codepoint": 0xE992,
                    "description": "Punctum inclinatum auctum"
                },
                "chantPunctumInclinatumDeminutum": {
                    "codepoint": 0xE993,
                    "description": "Punctum inclinatum deminutum"
                },
                "chantPunctumLinea": {
                    "codepoint": 0xE999,
                    "description": "Punctum linea"
                },
                "chantPunctumLineaCavum": {
                    "codepoint": 0xE99A,
                    "description": "Punctum linea cavum"
                },
                "chantPunctumVirga": {
                    "alternateCodepoint": 0x1D1D3,
                    "codepoint": 0xE996,
                    "description": "Punctum virga"
                },
                "chantPunctumVirgaReversed": {
                    "codepoint": 0xE997,
                    "description": "Punctum virga, reversed"
                },
                "chantQuilisma": {
                    "codepoint": 0xE99B,
                    "description": "Quilisma"
                },
                "chantSemicirculusAbove": {
                    "codepoint": 0xE9D4,
                    "description": "Semicirculus above"
                },
                "chantSemicirculusBelow": {
                    "codepoint": 0xE9D5,
                    "description": "Semicirculus below"
                },
                "chantStaff": {
                    "codepoint": 0xE8F0,
                    "description": "Plainchant staff"
                },
                "chantStaffNarrow": {
                    "codepoint": 0xE8F2,
                    "description": "Plainchant staff (narrow)"
                },
                "chantStaffWide": {
                    "codepoint": 0xE8F1,
                    "description": "Plainchant staff (wide)"
                },
                "chantStrophicus": {
                    "codepoint": 0xE99F,
                    "description": "Strophicus"
                },
                "chantStrophicusAuctus": {
                    "codepoint": 0xE9A0,
                    "description": "Strophicus auctus"
                },
                "chantStrophicusLiquescens2nd": {
                    "codepoint": 0xE9C2,
                    "description": "Strophicus liquescens, 2nd"
                },
                "chantStrophicusLiquescens3rd": {
                    "codepoint": 0xE9C3,
                    "description": "Strophicus liquescens, 3rd"
                },
                "chantStrophicusLiquescens4th": {
                    "codepoint": 0xE9C4,
                    "description": "Strophicus liquescens, 4th"
                },
                "chantStrophicusLiquescens5th": {
                    "codepoint": 0xE9C5,
                    "description": "Strophicus liquescens, 5th"
                },
                "chantVirgula": {
                    "codepoint": 0xE8F7,
                    "description": "Virgula"
                },
                "clef15": {
                    "codepoint": 0xE07E,
                    "description": "15 for clefs"
                },
                "clef8": {
                    "codepoint": 0xE07D,
                    "description": "8 for clefs"
                },
                "clefChangeCombining": {
                    "codepoint": 0xE07F,
                    "description": "Combining clef change"
                },
                "coda": {
                    "alternateCodepoint": 0x1D10C,
                    "codepoint": 0xE048,
                    "description": "Coda"
                },
                "codaSquare": {
                    "codepoint": 0xE049,
                    "description": "Square coda"
                },
                "conductorBeat2Compound": {
                    "codepoint": 0xE897,
                    "description": "Beat 2, compound time"
                },
                "conductorBeat2Simple": {
                    "codepoint": 0xE894,
                    "description": "Beat 2, simple time"
                },
                "conductorBeat3Compound": {
                    "codepoint": 0xE898,
                    "description": "Beat 3, compound time"
                },
                "conductorBeat3Simple": {
                    "codepoint": 0xE895,
                    "description": "Beat 3, simple time"
                },
                "conductorBeat4Compound": {
                    "codepoint": 0xE899,
                    "description": "Beat 4, compound time"
                },
                "conductorBeat4Simple": {
                    "codepoint": 0xE896,
                    "description": "Beat 4, simple time"
                },
                "conductorLeftBeat": {
                    "codepoint": 0xE891,
                    "description": "Left-hand beat or cue"
                },
                "conductorRightBeat": {
                    "codepoint": 0xE892,
                    "description": "Right-hand beat or cue"
                },
                "conductorStrongBeat": {
                    "codepoint": 0xE890,
                    "description": "Strong beat or cue"
                },
                "conductorUnconducted": {
                    "codepoint": 0xE89A,
                    "description": "Unconducted/free passages"
                },
                "conductorWeakBeat": {
                    "codepoint": 0xE893,
                    "description": "Weak beat or cue"
                },
                "controlBeginBeam": {
                    "alternateCodepoint": 0x1D173,
                    "codepoint": 0xE8E0,
                    "description": "Begin beam"
                },
                "controlBeginPhrase": {
                    "alternateCodepoint": 0x1D179,
                    "codepoint": 0xE8E6,
                    "description": "Begin phrase"
                },
                "controlBeginSlur": {
                    "alternateCodepoint": 0x1D177,
                    "codepoint": 0xE8E4,
                    "description": "Begin slur"
                },
                "controlBeginTie": {
                    "alternateCodepoint": 0x1D175,
                    "codepoint": 0xE8E2,
                    "description": "Begin tie"
                },
                "controlEndBeam": {
                    "alternateCodepoint": 0x1D174,
                    "codepoint": 0xE8E1,
                    "description": "End beam"
                },
                "controlEndPhrase": {
                    "alternateCodepoint": 0x1D17A,
                    "codepoint": 0xE8E7,
                    "description": "End phrase"
                },
                "controlEndSlur": {
                    "alternateCodepoint": 0x1D178,
                    "codepoint": 0xE8E5,
                    "description": "End slur"
                },
                "controlEndTie": {
                    "alternateCodepoint": 0x1D176,
                    "codepoint": 0xE8E3,
                    "description": "End tie"
                },
                "csymAugmented": {
                    "codepoint": 0xE872,
                    "description": "Augmented"
                },
                "csymBracketLeftTall": {
                    "codepoint": 0xE877,
                    "description": "Double-height left bracket"
                },
                "csymBracketRightTall": {
                    "codepoint": 0xE878,
                    "description": "Double-height right bracket"
                },
                "csymDiminished": {
                    "alternateCodepoint": 0x1D1A9,
                    "codepoint": 0xE870,
                    "description": "Diminished"
                },
                "csymHalfDiminished": {
                    "codepoint": 0xE871,
                    "description": "Half-diminished"
                },
                "csymMajorSeventh": {
                    "codepoint": 0xE873,
                    "description": "Major seventh"
                },
                "csymMinor": {
                    "codepoint": 0xE874,
                    "description": "Minor"
                },
                "csymParensLeftTall": {
                    "codepoint": 0xE875,
                    "description": "Double-height left parenthesis"
                },
                "csymParensRightTall": {
                    "codepoint": 0xE876,
                    "description": "Double-height right parenthesis"
                },
                "curlewSign": {
                    "codepoint": 0xE4D6,
                    "description": "Curlew (Britten)"
                },
                "daCapo": {
                    "alternateCodepoint": 0x1D10A,
                    "codepoint": 0xE046,
                    "description": "Da capo"
                },
                "dalSegno": {
                    "alternateCodepoint": 0x1D109,
                    "codepoint": 0xE045,
                    "description": "Dal segno"
                },
                "daseianExcellentes1": {
                    "codepoint": 0xEA3C,
                    "description": "Daseian excellentes 1"
                },
                "daseianExcellentes2": {
                    "codepoint": 0xEA3D,
                    "description": "Daseian excellentes 2"
                },
                "daseianExcellentes3": {
                    "codepoint": 0xEA3E,
                    "description": "Daseian excellentes 3"
                },
                "daseianExcellentes4": {
                    "codepoint": 0xEA3F,
                    "description": "Daseian excellentes 4"
                },
                "daseianFinales1": {
                    "codepoint": 0xEA34,
                    "description": "Daseian finales 1"
                },
                "daseianFinales2": {
                    "codepoint": 0xEA35,
                    "description": "Daseian finales 2"
                },
                "daseianFinales3": {
                    "codepoint": 0xEA36,
                    "description": "Daseian finales 3"
                },
                "daseianFinales4": {
                    "codepoint": 0xEA37,
                    "description": "Daseian finales 4"
                },
                "daseianGraves1": {
                    "codepoint": 0xEA30,
                    "description": "Daseian graves 1"
                },
                "daseianGraves2": {
                    "codepoint": 0xEA31,
                    "description": "Daseian graves 2"
                },
                "daseianGraves3": {
                    "codepoint": 0xEA32,
                    "description": "Daseian graves 3"
                },
                "daseianGraves4": {
                    "codepoint": 0xEA33,
                    "description": "Daseian graves 4"
                },
                "daseianResidua1": {
                    "codepoint": 0xEA40,
                    "description": "Daseian residua 1"
                },
                "daseianResidua2": {
                    "codepoint": 0xEA41,
                    "description": "Daseian residua 2"
                },
                "daseianSuperiores1": {
                    "codepoint": 0xEA38,
                    "description": "Daseian superiores 1"
                },
                "daseianSuperiores2": {
                    "codepoint": 0xEA39,
                    "description": "Daseian superiores 2"
                },
                "daseianSuperiores3": {
                    "codepoint": 0xEA3A,
                    "description": "Daseian superiores 3"
                },
                "daseianSuperiores4": {
                    "codepoint": 0xEA3B,
                    "description": "Daseian superiores 4"
                },
                "doubleTongueAbove": {
                    "alternateCodepoint": 0x1D18A,
                    "codepoint": 0xE5F0,
                    "description": "Double-tongue above"
                },
                "doubleTongueBelow": {
                    "codepoint": 0xE5F1,
                    "description": "Double-tongue below"
                },
                "dynamicCombinedSeparatorColon": {
                    "codepoint": 0xE546,
                    "description": "Colon separator for combined dynamics"
                },
                "dynamicCombinedSeparatorHyphen": {
                    "codepoint": 0xE547,
                    "description": "Hyphen separator for combined dynamics"
                },
                "dynamicCombinedSeparatorSpace": {
                    "codepoint": 0xE548,
                    "description": "Space separator for combined dynamics"
                },
                "dynamicCrescendoHairpin": {
                    "alternateCodepoint": 0x1D192,
                    "codepoint": 0xE53E,
                    "description": "Crescendo"
                },
                "dynamicDiminuendoHairpin": {
                    "alternateCodepoint": 0x1D193,
                    "codepoint": 0xE53F,
                    "description": "Diminuendo"
                },
                "dynamicFF": {
                    "codepoint": 0xE52F,
                    "description": "ff"
                },
                "dynamicFFF": {
                    "codepoint": 0xE530,
                    "description": "fff"
                },
                "dynamicFFFF": {
                    "codepoint": 0xE531,
                    "description": "ffff"
                },
                "dynamicFFFFF": {
                    "codepoint": 0xE532,
                    "description": "fffff"
                },
                "dynamicFFFFFF": {
                    "codepoint": 0xE533,
                    "description": "ffffff"
                },
                "dynamicForte": {
                    "alternateCodepoint": 0x1D191,
                    "codepoint": 0xE522,
                    "description": "Forte"
                },
                "dynamicFortePiano": {
                    "codepoint": 0xE534,
                    "description": "Forte-piano"
                },
                "dynamicForzando": {
                    "codepoint": 0xE535,
                    "description": "Forzando"
                },
                "dynamicHairpinBracketLeft": {
                    "codepoint": 0xE544,
                    "description": "Left bracket (for hairpins)"
                },
                "dynamicHairpinBracketRight": {
                    "codepoint": 0xE545,
                    "description": "Right bracket (for hairpins)"
                },
                "dynamicHairpinParenthesisLeft": {
                    "codepoint": 0xE542,
                    "description": "Left parenthesis (for hairpins)"
                },
                "dynamicHairpinParenthesisRight": {
                    "codepoint": 0xE543,
                    "description": "Right parenthesis (for hairpins)"
                },
                "dynamicMF": {
                    "codepoint": 0xE52D,
                    "description": "mf"
                },
                "dynamicMP": {
                    "codepoint": 0xE52C,
                    "description": "mp"
                },
                "dynamicMessaDiVoce": {
                    "codepoint": 0xE540,
                    "description": "Messa di voce"
                },
                "dynamicMezzo": {
                    "alternateCodepoint": 0x1D190,
                    "codepoint": 0xE521,
                    "description": "Mezzo"
                },
                "dynamicNiente": {
                    "codepoint": 0xE526,
                    "description": "Niente"
                },
                "dynamicNienteForHairpin": {
                    "codepoint": 0xE541,
                    "description": "Niente (for hairpins)"
                },
                "dynamicPF": {
                    "codepoint": 0xE52E,
                    "description": "pf"
                },
                "dynamicPP": {
                    "codepoint": 0xE52B,
                    "description": "pp"
                },
                "dynamicPPP": {
                    "codepoint": 0xE52A,
                    "description": "ppp"
                },
                "dynamicPPPP": {
                    "codepoint": 0xE529,
                    "description": "pppp"
                },
                "dynamicPPPPP": {
                    "codepoint": 0xE528,
                    "description": "ppppp"
                },
                "dynamicPPPPPP": {
                    "codepoint": 0xE527,
                    "description": "pppppp"
                },
                "dynamicPiano": {
                    "alternateCodepoint": 0x1D18F,
                    "codepoint": 0xE520,
                    "description": "Piano"
                },
                "dynamicRinforzando": {
                    "alternateCodepoint": 0x1D18C,
                    "codepoint": 0xE523,
                    "description": "Rinforzando"
                },
                "dynamicRinforzando1": {
                    "codepoint": 0xE53C,
                    "description": "Rinforzando 1"
                },
                "dynamicRinforzando2": {
                    "codepoint": 0xE53D,
                    "description": "Rinforzando 2"
                },
                "dynamicSforzando": {
                    "alternateCodepoint": 0x1D18D,
                    "codepoint": 0xE524,
                    "description": "Sforzando"
                },
                "dynamicSforzando1": {
                    "codepoint": 0xE536,
                    "description": "Sforzando 1"
                },
                "dynamicSforzandoPianissimo": {
                    "codepoint": 0xE538,
                    "description": "Sforzando-pianissimo"
                },
                "dynamicSforzandoPiano": {
                    "codepoint": 0xE537,
                    "description": "Sforzando-piano"
                },
                "dynamicSforzato": {
                    "codepoint": 0xE539,
                    "description": "Sforzato"
                },
                "dynamicSforzatoFF": {
                    "codepoint": 0xE53B,
                    "description": "Sforzatissimo"
                },
                "dynamicSforzatoPiano": {
                    "codepoint": 0xE53A,
                    "description": "Sforzato-piano"
                },
                "dynamicZ": {
                    "alternateCodepoint": 0x1D18E,
                    "codepoint": 0xE525,
                    "description": "Z"
                },
                "elecAudioChannelsEight": {
                    "codepoint": 0xEB46,
                    "description": "Eight channels (7.1 surround)"
                },
                "elecAudioChannelsFive": {
                    "codepoint": 0xEB43,
                    "description": "Five channels"
                },
                "elecAudioChannelsFour": {
                    "codepoint": 0xEB42,
                    "description": "Four channels"
                },
                "elecAudioChannelsOne": {
                    "codepoint": 0xEB3E,
                    "description": "One channel (mono)"
                },
                "elecAudioChannelsSeven": {
                    "codepoint": 0xEB45,
                    "description": "Seven channels"
                },
                "elecAudioChannelsSix": {
                    "codepoint": 0xEB44,
                    "description": "Six channels (5.1 surround)"
                },
                "elecAudioChannelsThreeFrontal": {
                    "codepoint": 0xEB40,
                    "description": "Three channels (frontal)"
                },
                "elecAudioChannelsThreeSurround": {
                    "codepoint": 0xEB41,
                    "description": "Three channels (surround)"
                },
                "elecAudioChannelsTwo": {
                    "codepoint": 0xEB3F,
                    "description": "Two channels (stereo)"
                },
                "elecAudioIn": {
                    "codepoint": 0xEB49,
                    "description": "Audio in"
                },
                "elecAudioMono": {
                    "codepoint": 0xEB3C,
                    "description": "Mono audio setup"
                },
                "elecAudioOut": {
                    "codepoint": 0xEB4A,
                    "description": "Audio out"
                },
                "elecAudioStereo": {
                    "codepoint": 0xEB3D,
                    "description": "Stereo audio setup"
                },
                "elecCamera": {
                    "codepoint": 0xEB1B,
                    "description": "Camera"
                },
                "elecDataIn": {
                    "codepoint": 0xEB4D,
                    "description": "Data in"
                },
                "elecDataOut": {
                    "codepoint": 0xEB4E,
                    "description": "Data out"
                },
                "elecDisc": {
                    "codepoint": 0xEB13,
                    "description": "Disc"
                },
                "elecDownload": {
                    "codepoint": 0xEB4F,
                    "description": "Download"
                },
                "elecEject": {
                    "codepoint": 0xEB2B,
                    "description": "Eject"
                },
                "elecFastForward": {
                    "codepoint": 0xEB1F,
                    "description": "Fast-forward"
                },
                "elecHeadphones": {
                    "codepoint": 0xEB11,
                    "description": "Headphones"
                },
                "elecHeadset": {
                    "codepoint": 0xEB12,
                    "description": "Headset"
                },
                "elecLineIn": {
                    "codepoint": 0xEB47,
                    "description": "Line in"
                },
                "elecLineOut": {
                    "codepoint": 0xEB48,
                    "description": "Line out"
                },
                "elecLoop": {
                    "codepoint": 0xEB23,
                    "description": "Loop"
                },
                "elecLoudspeaker": {
                    "codepoint": 0xEB1A,
                    "description": "Loudspeaker"
                },
                "elecMIDIController0": {
                    "codepoint": 0xEB36,
                    "description": "MIDI controller 0%"
                },
                "elecMIDIController100": {
                    "codepoint": 0xEB3B,
                    "description": "MIDI controller 100%"
                },
                "elecMIDIController20": {
                    "codepoint": 0xEB37,
                    "description": "MIDI controller 20%"
                },
                "elecMIDIController40": {
                    "codepoint": 0xEB38,
                    "description": "MIDI controller 40%"
                },
                "elecMIDIController60": {
                    "codepoint": 0xEB39,
                    "description": "MIDI controller 60%"
                },
                "elecMIDIController80": {
                    "codepoint": 0xEB3A,
                    "description": "MIDI controller 80%"
                },
                "elecMIDIIn": {
                    "codepoint": 0xEB34,
                    "description": "MIDI in"
                },
                "elecMIDIOut": {
                    "codepoint": 0xEB35,
                    "description": "MIDI out"
                },
                "elecMicrophone": {
                    "codepoint": 0xEB10,
                    "description": "Microphone"
                },
                "elecMicrophoneMute": {
                    "codepoint": 0xEB28,
                    "description": "Mute microphone"
                },
                "elecMicrophoneUnmute": {
                    "codepoint": 0xEB29,
                    "description": "Unmute microphone"
                },
                "elecMixingConsole": {
                    "codepoint": 0xEB15,
                    "description": "Mixing console"
                },
                "elecMonitor": {
                    "codepoint": 0xEB18,
                    "description": "Monitor"
                },
                "elecMute": {
                    "codepoint": 0xEB26,
                    "description": "Mute"
                },
                "elecPause": {
                    "codepoint": 0xEB1E,
                    "description": "Pause"
                },
                "elecPlay": {
                    "codepoint": 0xEB1C,
                    "description": "Play"
                },
                "elecPowerOnOff": {
                    "codepoint": 0xEB2A,
                    "description": "Power on/off"
                },
                "elecProjector": {
                    "codepoint": 0xEB19,
                    "description": "Projector"
                },
                "elecReplay": {
                    "codepoint": 0xEB24,
                    "description": "Replay"
                },
                "elecRewind": {
                    "codepoint": 0xEB20,
                    "description": "Rewind"
                },
                "elecShuffle": {
                    "codepoint": 0xEB25,
                    "description": "Shuffle"
                },
                "elecSkipBackwards": {
                    "codepoint": 0xEB22,
                    "description": "Skip backwards"
                },
                "elecSkipForwards": {
                    "codepoint": 0xEB21,
                    "description": "Skip forwards"
                },
                "elecStop": {
                    "codepoint": 0xEB1D,
                    "description": "Stop"
                },
                "elecTape": {
                    "codepoint": 0xEB14,
                    "description": "Tape"
                },
                "elecUSB": {
                    "codepoint": 0xEB16,
                    "description": "USB connection"
                },
                "elecUnmute": {
                    "codepoint": 0xEB27,
                    "description": "Unmute"
                },
                "elecUpload": {
                    "codepoint": 0xEB50,
                    "description": "Upload"
                },
                "elecVideoCamera": {
                    "codepoint": 0xEB17,
                    "description": "Video camera"
                },
                "elecVideoIn": {
                    "codepoint": 0xEB4B,
                    "description": "Video in"
                },
                "elecVideoOut": {
                    "codepoint": 0xEB4C,
                    "description": "Video out"
                },
                "elecVolumeFader": {
                    "codepoint": 0xEB2C,
                    "description": "Combining volume fader"
                },
                "elecVolumeFaderThumb": {
                    "codepoint": 0xEB2D,
                    "description": "Combining volume fader thumb"
                },
                "elecVolumeLevel0": {
                    "codepoint": 0xEB2E,
                    "description": "Volume level 0%"
                },
                "elecVolumeLevel100": {
                    "codepoint": 0xEB33,
                    "description": "Volume level 100%"
                },
                "elecVolumeLevel20": {
                    "codepoint": 0xEB2F,
                    "description": "Volume level 20%"
                },
                "elecVolumeLevel40": {
                    "codepoint": 0xEB30,
                    "description": "Volume level 40%"
                },
                "elecVolumeLevel60": {
                    "codepoint": 0xEB31,
                    "description": "Volume level 60%"
                },
                "elecVolumeLevel80": {
                    "codepoint": 0xEB32,
                    "description": "Volume level 80%"
                },
                "fClef": {
                    "alternateCodepoint": 0x1D122,
                    "codepoint": 0xE062,
                    "description": "F clef"
                },
                "fClef15ma": {
                    "codepoint": 0xE066,
                    "description": "F clef quindicesima alta"
                },
                "fClef15mb": {
                    "codepoint": 0xE063,
                    "description": "F clef quindicesima bassa"
                },
                "fClef8va": {
                    "alternateCodepoint": 0x1D123,
                    "codepoint": 0xE065,
                    "description": "F clef ottava alta"
                },
                "fClef8vb": {
                    "alternateCodepoint": 0x1D124,
                    "codepoint": 0xE064,
                    "description": "F clef ottava bassa"
                },
                "fClefArrowDown": {
                    "codepoint": 0xE068,
                    "description": "F clef, arrow down"
                },
                "fClefArrowUp": {
                    "codepoint": 0xE067,
                    "description": "F clef, arrow up"
                },
                "fClefChange": {
                    "codepoint": 0xE07C,
                    "description": "F clef change"
                },
                "fClefReversed": {
                    "codepoint": 0xE076,
                    "description": "Reversed F clef"
                },
                "fClefTurned": {
                    "codepoint": 0xE077,
                    "description": "Turned F clef"
                },
                "fermataAbove": {
                    "alternateCodepoint": 0x1D110,
                    "codepoint": 0xE4C0,
                    "description": "Fermata above"
                },
                "fermataBelow": {
                    "alternateCodepoint": 0x1D111,
                    "codepoint": 0xE4C1,
                    "description": "Fermata below"
                },
                "fermataLongAbove": {
                    "codepoint": 0xE4C6,
                    "description": "Long fermata above"
                },
                "fermataLongBelow": {
                    "codepoint": 0xE4C7,
                    "description": "Long fermata below"
                },
                "fermataLongHenzeAbove": {
                    "codepoint": 0xE4CA,
                    "description": "Long fermata (Henze) above"
                },
                "fermataLongHenzeBelow": {
                    "codepoint": 0xE4CB,
                    "description": "Long fermata (Henze) below"
                },
                "fermataShortAbove": {
                    "codepoint": 0xE4C4,
                    "description": "Short fermata above"
                },
                "fermataShortBelow": {
                    "codepoint": 0xE4C5,
                    "description": "Short fermata below"
                },
                "fermataShortHenzeAbove": {
                    "codepoint": 0xE4CC,
                    "description": "Short fermata (Henze) above"
                },
                "fermataShortHenzeBelow": {
                    "codepoint": 0xE4CD,
                    "description": "Short fermata (Henze) below"
                },
                "fermataVeryLongAbove": {
                    "codepoint": 0xE4C8,
                    "description": "Very long fermata above"
                },
                "fermataVeryLongBelow": {
                    "codepoint": 0xE4C9,
                    "description": "Very long fermata below"
                },
                "fermataVeryShortAbove": {
                    "codepoint": 0xE4C2,
                    "description": "Very short fermata above"
                },
                "fermataVeryShortBelow": {
                    "codepoint": 0xE4C3,
                    "description": "Very short fermata below"
                },
                "figbass0": {
                    "codepoint": 0xEA50,
                    "description": "Figured bass 0"
                },
                "figbass1": {
                    "codepoint": 0xEA51,
                    "description": "Figured bass 1"
                },
                "figbass2": {
                    "codepoint": 0xEA52,
                    "description": "Figured bass 2"
                },
                "figbass2Raised": {
                    "codepoint": 0xEA53,
                    "description": "Figured bass 2 raised by half-step"
                },
                "figbass3": {
                    "codepoint": 0xEA54,
                    "description": "Figured bass 3"
                },
                "figbass4": {
                    "codepoint": 0xEA55,
                    "description": "Figured bass 4"
                },
                "figbass4Raised": {
                    "codepoint": 0xEA56,
                    "description": "Figured bass 4 raised by half-step"
                },
                "figbass5": {
                    "codepoint": 0xEA57,
                    "description": "Figured bass 5"
                },
                "figbass5Raised1": {
                    "codepoint": 0xEA58,
                    "description": "Figured bass 5 raised by half-step"
                },
                "figbass5Raised2": {
                    "codepoint": 0xEA59,
                    "description": "Figured bass 5 raised by half-step 2"
                },
                "figbass5Raised3": {
                    "codepoint": 0xEA5A,
                    "description": "Figured bass diminished 5"
                },
                "figbass6": {
                    "codepoint": 0xEA5B,
                    "description": "Figured bass 6"
                },
                "figbass6Raised": {
                    "codepoint": 0xEA5C,
                    "description": "Figured bass 6 raised by half-step"
                },
                "figbass6Raised2": {
                    "codepoint": 0xEA6F,
                    "description": "Figured bass 6 raised by half-step 2"
                },
                "figbass7": {
                    "codepoint": 0xEA5D,
                    "description": "Figured bass 7"
                },
                "figbass7Diminished": {
                    "codepoint": 0xECC0,
                    "description": "Figured bass 7 diminished"
                },
                "figbass7Raised1": {
                    "codepoint": 0xEA5E,
                    "description": "Figured bass 7 raised by half-step"
                },
                "figbass7Raised2": {
                    "codepoint": 0xEA5F,
                    "description": "Figured bass 7 raised by a half-step 2"
                },
                "figbass8": {
                    "codepoint": 0xEA60,
                    "description": "Figured bass 8"
                },
                "figbass9": {
                    "codepoint": 0xEA61,
                    "description": "Figured bass 9"
                },
                "figbass9Raised": {
                    "codepoint": 0xEA62,
                    "description": "Figured bass 9 raised by half-step"
                },
                "figbassBracketLeft": {
                    "codepoint": 0xEA68,
                    "description": "Figured bass ["
                },
                "figbassBracketRight": {
                    "codepoint": 0xEA69,
                    "description": "Figured bass ]"
                },
                "figbassCombiningLowering": {
                    "codepoint": 0xEA6E,
                    "description": "Combining lower"
                },
                "figbassCombiningRaising": {
                    "codepoint": 0xEA6D,
                    "description": "Combining raise"
                },
                "figbassDoubleFlat": {
                    "codepoint": 0xEA63,
                    "description": "Figured bass double flat"
                },
                "figbassDoubleSharp": {
                    "codepoint": 0xEA67,
                    "description": "Figured bass double sharp"
                },
                "figbassFlat": {
                    "codepoint": 0xEA64,
                    "description": "Figured bass flat"
                },
                "figbassNatural": {
                    "codepoint": 0xEA65,
                    "description": "Figured bass natural"
                },
                "figbassParensLeft": {
                    "codepoint": 0xEA6A,
                    "description": "Figured bass ("
                },
                "figbassParensRight": {
                    "codepoint": 0xEA6B,
                    "description": "Figured bass )"
                },
                "figbassPlus": {
                    "codepoint": 0xEA6C,
                    "description": "Figured bass +"
                },
                "figbassSharp": {
                    "codepoint": 0xEA66,
                    "description": "Figured bass sharp"
                },
                "fingering0": {
                    "codepoint": 0xED10,
                    "description": "Fingering 0 (open string)"
                },
                "fingering1": {
                    "codepoint": 0xED11,
                    "description": "Fingering 1 (thumb)"
                },
                "fingering2": {
                    "codepoint": 0xED12,
                    "description": "Fingering 2 (index finger)"
                },
                "fingering3": {
                    "codepoint": 0xED13,
                    "description": "Fingering 3 (middle finger)"
                },
                "fingering4": {
                    "codepoint": 0xED14,
                    "description": "Fingering 4 (ring finger)"
                },
                "fingering5": {
                    "codepoint": 0xED15,
                    "description": "Fingering 5 (little finger)"
                },
                "fingeringALower": {
                    "codepoint": 0xED1B,
                    "description": "Fingering a (anular; right-hand ring finger for guitar)"
                },
                "fingeringCLower": {
                    "codepoint": 0xED1C,
                    "description": "Fingering c (right-hand little finger for guitar)"
                },
                "fingeringELower": {
                    "codepoint": 0xED1E,
                    "description": "Fingering e (right-hand little finger for guitar)"
                },
                "fingeringILower": {
                    "codepoint": 0xED19,
                    "description": "Fingering i (indicio; right-hand index finger for guitar)"
                },
                "fingeringMLower": {
                    "codepoint": 0xED1A,
                    "description": "Fingering m (medio; right-hand middle finger for guitar)"
                },
                "fingeringMultipleNotes": {
                    "codepoint": 0xED23,
                    "description": "Multiple notes played by thumb or single finger"
                },
                "fingeringOLower": {
                    "codepoint": 0xED1F,
                    "description": "Fingering o (right-hand little finger for guitar)"
                },
                "fingeringPLower": {
                    "codepoint": 0xED17,
                    "description": "Fingering p (pulgar; right-hand thumb for guitar)"
                },
                "fingeringSubstitutionAbove": {
                    "codepoint": 0xED20,
                    "description": "Finger substitution above"
                },
                "fingeringSubstitutionBelow": {
                    "codepoint": 0xED21,
                    "description": "Finger substitution below"
                },
                "fingeringSubstitutionDash": {
                    "codepoint": 0xED22,
                    "description": "Finger substitution dash"
                },
                "fingeringTLower": {
                    "codepoint": 0xED18,
                    "description": "Fingering t (right-hand thumb for guitar)"
                },
                "fingeringTUpper": {
                    "codepoint": 0xED16,
                    "description": "Fingering T (left-hand thumb for guitar)"
                },
                "fingeringXLower": {
                    "codepoint": 0xED1D,
                    "description": "Fingering x (right-hand little finger for guitar)"
                },
                "flag1024thDown": {
                    "codepoint": 0xE24F,
                    "description": "Combining flag 8 (1024th) below"
                },
                "flag1024thUp": {
                    "codepoint": 0xE24E,
                    "description": "Combining flag 8 (1024th) above"
                },
                "flag128thDown": {
                    "codepoint": 0xE249,
                    "description": "Combining flag 5 (128th) below"
                },
                "flag128thUp": {
                    "alternateCodepoint": 0x1D172,
                    "codepoint": 0xE248,
                    "description": "Combining flag 5 (128th) above"
                },
                "flag16thDown": {
                    "codepoint": 0xE243,
                    "description": "Combining flag 2 (16th) below"
                },
                "flag16thUp": {
                    "alternateCodepoint": 0x1D16F,
                    "codepoint": 0xE242,
                    "description": "Combining flag 2 (16th) above"
                },
                "flag256thDown": {
                    "codepoint": 0xE24B,
                    "description": "Combining flag 6 (256th) below"
                },
                "flag256thUp": {
                    "codepoint": 0xE24A,
                    "description": "Combining flag 6 (256th) above"
                },
                "flag32ndDown": {
                    "codepoint": 0xE245,
                    "description": "Combining flag 3 (32nd) below"
                },
                "flag32ndUp": {
                    "alternateCodepoint": 0x1D170,
                    "codepoint": 0xE244,
                    "description": "Combining flag 3 (32nd) above"
                },
                "flag512thDown": {
                    "codepoint": 0xE24D,
                    "description": "Combining flag 7 (512th) below"
                },
                "flag512thUp": {
                    "codepoint": 0xE24C,
                    "description": "Combining flag 7 (512th) above"
                },
                "flag64thDown": {
                    "codepoint": 0xE247,
                    "description": "Combining flag 4 (64th) below"
                },
                "flag64thUp": {
                    "alternateCodepoint": 0x1D171,
                    "codepoint": 0xE246,
                    "description": "Combining flag 4 (64th) above"
                },
                "flag8thDown": {
                    "codepoint": 0xE241,
                    "description": "Combining flag 1 (8th) below"
                },
                "flag8thUp": {
                    "alternateCodepoint": 0x1D16E,
                    "codepoint": 0xE240,
                    "description": "Combining flag 1 (8th) above"
                },
                "flagInternalDown": {
                    "codepoint": 0xE251,
                    "description": "Internal combining flag below"
                },
                "flagInternalUp": {
                    "codepoint": 0xE250,
                    "description": "Internal combining flag above"
                },
                "fretboard3String": {
                    "codepoint": 0xE850,
                    "description": "3-string fretboard"
                },
                "fretboard3StringNut": {
                    "codepoint": 0xE851,
                    "description": "3-string fretboard at nut"
                },
                "fretboard4String": {
                    "alternateCodepoint": 0x1D11D,
                    "codepoint": 0xE852,
                    "description": "4-string fretboard"
                },
                "fretboard4StringNut": {
                    "codepoint": 0xE853,
                    "description": "4-string fretboard at nut"
                },
                "fretboard5String": {
                    "codepoint": 0xE854,
                    "description": "5-string fretboard"
                },
                "fretboard5StringNut": {
                    "codepoint": 0xE855,
                    "description": "5-string fretboard at nut"
                },
                "fretboard6String": {
                    "alternateCodepoint": 0x1D11C,
                    "codepoint": 0xE856,
                    "description": "6-string fretboard"
                },
                "fretboard6StringNut": {
                    "codepoint": 0xE857,
                    "description": "6-string fretboard at nut"
                },
                "fretboardFilledCircle": {
                    "codepoint": 0xE858,
                    "description": "Fingered fret (filled circle)"
                },
                "fretboardO": {
                    "codepoint": 0xE85A,
                    "description": "Open string (O)"
                },
                "fretboardX": {
                    "codepoint": 0xE859,
                    "description": "String not played (X)"
                },
                "functionAngleLeft": {
                    "codepoint": 0xEA93,
                    "description": "Function theory angle bracket left"
                },
                "functionAngleRight": {
                    "codepoint": 0xEA94,
                    "description": "Function theory angle bracket right"
                },
                "functionBracketLeft": {
                    "codepoint": 0xEA8F,
                    "description": "Function theory bracket left"
                },
                "functionBracketRight": {
                    "codepoint": 0xEA90,
                    "description": "Function theory bracket right"
                },
                "functionDD": {
                    "codepoint": 0xEA81,
                    "description": "Function theory dominant of dominant"
                },
                "functionDLower": {
                    "codepoint": 0xEA80,
                    "description": "Function theory minor dominant"
                },
                "functionDUpper": {
                    "codepoint": 0xEA7F,
                    "description": "Function theory major dominant"
                },
                "functionEight": {
                    "codepoint": 0xEA78,
                    "description": "Function theory 8"
                },
                "functionFUpper": {
                    "codepoint": 0xEA99,
                    "description": "Function theory F"
                },
                "functionFive": {
                    "codepoint": 0xEA75,
                    "description": "Function theory 5"
                },
                "functionFour": {
                    "codepoint": 0xEA74,
                    "description": "Function theory 4"
                },
                "functionGLower": {
                    "codepoint": 0xEA84,
                    "description": "Function theory g"
                },
                "functionGUpper": {
                    "codepoint": 0xEA83,
                    "description": "Function theory G"
                },
                "functionGreaterThan": {
                    "codepoint": 0xEA7C,
                    "description": "Function theory greater than"
                },
                "functionILower": {
                    "codepoint": 0xEA9B,
                    "description": "Function theory i"
                },
                "functionIUpper": {
                    "codepoint": 0xEA9A,
                    "description": "Function theory I"
                },
                "functionKLower": {
                    "codepoint": 0xEA9D,
                    "description": "Function theory k"
                },
                "functionKUpper": {
                    "codepoint": 0xEA9C,
                    "description": "Function theory K"
                },
                "functionLLower": {
                    "codepoint": 0xEA9F,
                    "description": "Function theory l"
                },
                "functionLUpper": {
                    "codepoint": 0xEA9E,
                    "description": "Function theory L"
                },
                "functionLessThan": {
                    "codepoint": 0xEA7A,
                    "description": "Function theory less than"
                },
                "functionMLower": {
                    "codepoint": 0xED01,
                    "description": "Function theory m"
                },
                "functionMUpper": {
                    "codepoint": 0xED00,
                    "description": "Function theory M"
                },
                "functionMinus": {
                    "codepoint": 0xEA7B,
                    "description": "Function theory minus"
                },
                "functionNLower": {
                    "codepoint": 0xEA86,
                    "description": "Function theory n"
                },
                "functionNUpper": {
                    "codepoint": 0xEA85,
                    "description": "Function theory N"
                },
                "functionNUpperSuperscript": {
                    "codepoint": 0xED02,
                    "description": "Function theory superscript N"
                },
                "functionNine": {
                    "codepoint": 0xEA79,
                    "description": "Function theory 9"
                },
                "functionOne": {
                    "codepoint": 0xEA71,
                    "description": "Function theory 1"
                },
                "functionPLower": {
                    "codepoint": 0xEA88,
                    "description": "Function theory p"
                },
                "functionPUpper": {
                    "codepoint": 0xEA87,
                    "description": "Function theory P"
                },
                "functionParensLeft": {
                    "codepoint": 0xEA91,
                    "description": "Function theory parenthesis left"
                },
                "functionParensRight": {
                    "codepoint": 0xEA92,
                    "description": "Function theory parenthesis right"
                },
                "functionPlus": {
                    "codepoint": 0xEA98,
                    "description": "Function theory prefix plus"
                },
                "functionRLower": {
                    "codepoint": 0xED03,
                    "description": "Function theory r"
                },
                "functionRepetition1": {
                    "codepoint": 0xEA95,
                    "description": "Function theory repetition 1"
                },
                "functionRepetition2": {
                    "codepoint": 0xEA96,
                    "description": "Function theory repetition 2"
                },
                "functionRing": {
                    "codepoint": 0xEA97,
                    "description": "Function theory prefix ring"
                },
                "functionSLower": {
                    "codepoint": 0xEA8A,
                    "description": "Function theory minor subdominant"
                },
                "functionSSLower": {
                    "codepoint": 0xEA7E,
                    "description": "Function theory minor subdominant of subdominant"
                },
                "functionSSUpper": {
                    "codepoint": 0xEA7D,
                    "description": "Function theory major subdominant of subdominant"
                },
                "functionSUpper": {
                    "codepoint": 0xEA89,
                    "description": "Function theory major subdominant"
                },
                "functionSeven": {
                    "codepoint": 0xEA77,
                    "description": "Function theory 7"
                },
                "functionSix": {
                    "codepoint": 0xEA76,
                    "description": "Function theory 6"
                },
                "functionSlashedDD": {
                    "codepoint": 0xEA82,
                    "description": "Function theory double dominant seventh"
                },
                "functionTLower": {
                    "codepoint": 0xEA8C,
                    "description": "Function theory minor tonic"
                },
                "functionTUpper": {
                    "codepoint": 0xEA8B,
                    "description": "Function theory tonic"
                },
                "functionThree": {
                    "codepoint": 0xEA73,
                    "description": "Function theory 3"
                },
                "functionTwo": {
                    "codepoint": 0xEA72,
                    "description": "Function theory 2"
                },
                "functionVLower": {
                    "codepoint": 0xEA8E,
                    "description": "Function theory v"
                },
                "functionVUpper": {
                    "codepoint": 0xEA8D,
                    "description": "Function theory V"
                },
                "functionZero": {
                    "codepoint": 0xEA70,
                    "description": "Function theory 0"
                },
                "gClef": {
                    "alternateCodepoint": 0x1D11E,
                    "codepoint": 0xE050,
                    "description": "G clef"
                },
                "gClef15ma": {
                    "codepoint": 0xE054,
                    "description": "G clef quindicesima alta"
                },
                "gClef15mb": {
                    "codepoint": 0xE051,
                    "description": "G clef quindicesima bassa"
                },
                "gClef8va": {
                    "alternateCodepoint": 0x1D11F,
                    "codepoint": 0xE053,
                    "description": "G clef ottava alta"
                },
                "gClef8vb": {
                    "alternateCodepoint": 0x1D120,
                    "codepoint": 0xE052,
                    "description": "G clef ottava bassa"
                },
                "gClef8vbCClef": {
                    "codepoint": 0xE056,
                    "description": "G clef ottava bassa with C clef"
                },
                "gClef8vbOld": {
                    "codepoint": 0xE055,
                    "description": "G clef ottava bassa (old style)"
                },
                "gClef8vbParens": {
                    "codepoint": 0xE057,
                    "description": "G clef, optionally ottava bassa"
                },
                "gClefArrowDown": {
                    "codepoint": 0xE05B,
                    "description": "G clef, arrow down"
                },
                "gClefArrowUp": {
                    "codepoint": 0xE05A,
                    "description": "G clef, arrow up"
                },
                "gClefChange": {
                    "codepoint": 0xE07A,
                    "description": "G clef change"
                },
                "gClefLigatedNumberAbove": {
                    "codepoint": 0xE059,
                    "description": "Combining G clef, number above"
                },
                "gClefLigatedNumberBelow": {
                    "codepoint": 0xE058,
                    "description": "Combining G clef, number below"
                },
                "gClefReversed": {
                    "codepoint": 0xE073,
                    "description": "Reversed G clef"
                },
                "gClefTurned": {
                    "codepoint": 0xE074,
                    "description": "Turned G clef"
                },
                "glissandoDown": {
                    "alternateCodepoint": 0x1D1B2,
                    "codepoint": 0xE586,
                    "description": "Glissando down"
                },
                "glissandoUp": {
                    "alternateCodepoint": 0x1D1B1,
                    "codepoint": 0xE585,
                    "description": "Glissando up"
                },
                "graceNoteAcciaccaturaStemDown": {
                    "codepoint": 0xE561,
                    "description": "Slashed grace note stem down"
                },
                "graceNoteAcciaccaturaStemUp": {
                    "alternateCodepoint": 0x1D194,
                    "codepoint": 0xE560,
                    "description": "Slashed grace note stem up"
                },
                "graceNoteAppoggiaturaStemDown": {
                    "codepoint": 0xE563,
                    "description": "Grace note stem down"
                },
                "graceNoteAppoggiaturaStemUp": {
                    "alternateCodepoint": 0x1D195,
                    "codepoint": 0xE562,
                    "description": "Grace note stem up"
                },
                "graceNoteSlashStemDown": {
                    "codepoint": 0xE565,
                    "description": "Slash for stem down grace note"
                },
                "graceNoteSlashStemUp": {
                    "codepoint": 0xE564,
                    "description": "Slash for stem up grace note"
                },
                "guitarBarreFull": {
                    "codepoint": 0xE848,
                    "description": "Full barr\u00e9"
                },
                "guitarBarreHalf": {
                    "codepoint": 0xE849,
                    "description": "Half barr\u00e9"
                },
                "guitarClosePedal": {
                    "codepoint": 0xE83F,
                    "description": "Closed wah/volume pedal"
                },
                "guitarFadeIn": {
                    "codepoint": 0xE843,
                    "description": "Fade in"
                },
                "guitarFadeOut": {
                    "codepoint": 0xE844,
                    "description": "Fade out"
                },
                "guitarGolpe": {
                    "codepoint": 0xE842,
                    "description": "Golpe (tapping the pick guard)"
                },
                "guitarHalfOpenPedal": {
                    "codepoint": 0xE83E,
                    "description": "Half-open wah/volume pedal"
                },
                "guitarLeftHandTapping": {
                    "codepoint": 0xE840,
                    "description": "Left-hand tapping"
                },
                "guitarOpenPedal": {
                    "codepoint": 0xE83D,
                    "description": "Open wah/volume pedal"
                },
                "guitarRightHandTapping": {
                    "codepoint": 0xE841,
                    "description": "Right-hand tapping"
                },
                "guitarShake": {
                    "codepoint": 0xE832,
                    "description": "Guitar shake"
                },
                "guitarString0": {
                    "codepoint": 0xE833,
                    "description": "String number 0"
                },
                "guitarString1": {
                    "codepoint": 0xE834,
                    "description": "String number 1"
                },
                "guitarString2": {
                    "codepoint": 0xE835,
                    "description": "String number 2"
                },
                "guitarString3": {
                    "codepoint": 0xE836,
                    "description": "String number 3"
                },
                "guitarString4": {
                    "codepoint": 0xE837,
                    "description": "String number 4"
                },
                "guitarString5": {
                    "codepoint": 0xE838,
                    "description": "String number 5"
                },
                "guitarString6": {
                    "codepoint": 0xE839,
                    "description": "String number 6"
                },
                "guitarString7": {
                    "codepoint": 0xE83A,
                    "description": "String number 7"
                },
                "guitarString8": {
                    "codepoint": 0xE83B,
                    "description": "String number 8"
                },
                "guitarString9": {
                    "codepoint": 0xE83C,
                    "description": "String number 9"
                },
                "guitarStrumDown": {
                    "codepoint": 0xE847,
                    "description": "Strum direction down"
                },
                "guitarStrumUp": {
                    "codepoint": 0xE846,
                    "description": "Strum direction up"
                },
                "guitarVibratoBarDip": {
                    "codepoint": 0xE831,
                    "description": "Guitar vibrato bar dip"
                },
                "guitarVibratoBarScoop": {
                    "codepoint": 0xE830,
                    "description": "Guitar vibrato bar scoop"
                },
                "guitarVibratoStroke": {
                    "codepoint": 0xEAB2,
                    "description": "Vibrato wiggle segment"
                },
                "guitarVolumeSwell": {
                    "codepoint": 0xE845,
                    "description": "Volume swell"
                },
                "guitarWideVibratoStroke": {
                    "codepoint": 0xEAB3,
                    "description": "Wide vibrato wiggle segment"
                },
                "handbellsBelltree": {
                    "codepoint": 0xE81F,
                    "description": "Belltree"
                },
                "handbellsDamp3": {
                    "codepoint": 0xE81E,
                    "description": "Damp 3"
                },
                "handbellsEcho1": {
                    "codepoint": 0xE81B,
                    "description": "Echo"
                },
                "handbellsEcho2": {
                    "codepoint": 0xE81C,
                    "description": "Echo 2"
                },
                "handbellsGyro": {
                    "codepoint": 0xE81D,
                    "description": "Gyro"
                },
                "handbellsHandMartellato": {
                    "codepoint": 0xE812,
                    "description": "Hand martellato"
                },
                "handbellsMalletBellOnTable": {
                    "codepoint": 0xE815,
                    "description": "Mallet, bell on table"
                },
                "handbellsMalletBellSuspended": {
                    "codepoint": 0xE814,
                    "description": "Mallet, bell suspended"
                },
                "handbellsMalletLft": {
                    "codepoint": 0xE816,
                    "description": "Mallet lift"
                },
                "handbellsMartellato": {
                    "codepoint": 0xE810,
                    "description": "Martellato"
                },
                "handbellsMartellatoLift": {
                    "codepoint": 0xE811,
                    "description": "Martellato lift"
                },
                "handbellsMutedMartellato": {
                    "codepoint": 0xE813,
                    "description": "Muted martellato"
                },
                "handbellsPluckLift": {
                    "codepoint": 0xE817,
                    "description": "Pluck lift"
                },
                "handbellsSwing": {
                    "codepoint": 0xE81A,
                    "description": "Swing"
                },
                "handbellsSwingDown": {
                    "codepoint": 0xE819,
                    "description": "Swing down"
                },
                "handbellsSwingUp": {
                    "codepoint": 0xE818,
                    "description": "Swing up"
                },
                "handbellsTablePairBells": {
                    "codepoint": 0xE821,
                    "description": "Table pair of handbells"
                },
                "handbellsTableSingleBell": {
                    "codepoint": 0xE820,
                    "description": "Table single handbell"
                },
                "harpMetalRod": {
                    "codepoint": 0xE68F,
                    "description": "Metal rod pictogram"
                },
                "harpPedalCentered": {
                    "codepoint": 0xE681,
                    "description": "Harp pedal centered (natural)"
                },
                "harpPedalDivider": {
                    "codepoint": 0xE683,
                    "description": "Harp pedal divider"
                },
                "harpPedalLowered": {
                    "codepoint": 0xE682,
                    "description": "Harp pedal lowered (sharp)"
                },
                "harpPedalRaised": {
                    "codepoint": 0xE680,
                    "description": "Harp pedal raised (flat)"
                },
                "harpSalzedoAeolianAscending": {
                    "codepoint": 0xE695,
                    "description": "Ascending aeolian chords (Salzedo)"
                },
                "harpSalzedoAeolianDescending": {
                    "codepoint": 0xE696,
                    "description": "Descending aeolian chords (Salzedo)"
                },
                "harpSalzedoDampAbove": {
                    "codepoint": 0xE69A,
                    "description": "Damp above (Salzedo)"
                },
                "harpSalzedoDampBelow": {
                    "codepoint": 0xE699,
                    "description": "Damp below (Salzedo)"
                },
                "harpSalzedoDampBothHands": {
                    "codepoint": 0xE698,
                    "description": "Damp with both hands (Salzedo)"
                },
                "harpSalzedoDampLowStrings": {
                    "codepoint": 0xE697,
                    "description": "Damp only low strings (Salzedo)"
                },
                "harpSalzedoFluidicSoundsLeft": {
                    "codepoint": 0xE68D,
                    "description": "Fluidic sounds, left hand (Salzedo)"
                },
                "harpSalzedoFluidicSoundsRight": {
                    "codepoint": 0xE68E,
                    "description": "Fluidic sounds, right hand (Salzedo)"
                },
                "harpSalzedoIsolatedSounds": {
                    "codepoint": 0xE69C,
                    "description": "Isolated sounds (Salzedo)"
                },
                "harpSalzedoMetallicSounds": {
                    "codepoint": 0xE688,
                    "description": "Metallic sounds (Salzedo)"
                },
                "harpSalzedoMetallicSoundsOneString": {
                    "codepoint": 0xE69B,
                    "description": "Metallic sounds, one string (Salzedo)"
                },
                "harpSalzedoMuffleTotally": {
                    "codepoint": 0xE68C,
                    "description": "Muffle totally (Salzedo)"
                },
                "harpSalzedoOboicFlux": {
                    "codepoint": 0xE685,
                    "description": "Oboic flux (Salzedo)"
                },
                "harpSalzedoPlayUpperEnd": {
                    "codepoint": 0xE68A,
                    "description": "Play at upper end of strings (Salzedo)"
                },
                "harpSalzedoSlideWithSuppleness": {
                    "codepoint": 0xE684,
                    "description": "Slide with suppleness (Salzedo)"
                },
                "harpSalzedoSnareDrum": {
                    "codepoint": 0xE69D,
                    "description": "Snare drum effect (Salzedo)"
                },
                "harpSalzedoTamTamSounds": {
                    "codepoint": 0xE689,
                    "description": "Tam-tam sounds (Salzedo)"
                },
                "harpSalzedoThunderEffect": {
                    "codepoint": 0xE686,
                    "description": "Thunder effect (Salzedo)"
                },
                "harpSalzedoTimpanicSounds": {
                    "codepoint": 0xE68B,
                    "description": "Timpanic sounds (Salzedo)"
                },
                "harpSalzedoWhistlingSounds": {
                    "codepoint": 0xE687,
                    "description": "Whistling sounds (Salzedo)"
                },
                "harpStringNoiseStem": {
                    "codepoint": 0xE694,
                    "description": "Combining string noise for stem"
                },
                "harpTuningKey": {
                    "codepoint": 0xE690,
                    "description": "Tuning key pictogram"
                },
                "harpTuningKeyGlissando": {
                    "codepoint": 0xE693,
                    "description": "Retune strings for glissando"
                },
                "harpTuningKeyHandle": {
                    "codepoint": 0xE691,
                    "description": "Use handle of tuning key pictogram"
                },
                "harpTuningKeyShank": {
                    "codepoint": 0xE692,
                    "description": "Use shank of tuning key pictogram"
                },
                "keyboardBebung2DotsAbove": {
                    "codepoint": 0xE668,
                    "description": "Clavichord bebung, 2 finger movements (above)"
                },
                "keyboardBebung2DotsBelow": {
                    "codepoint": 0xE669,
                    "description": "Clavichord bebung, 2 finger movements (below)"
                },
                "keyboardBebung3DotsAbove": {
                    "codepoint": 0xE66A,
                    "description": "Clavichord bebung, 3 finger movements (above)"
                },
                "keyboardBebung3DotsBelow": {
                    "codepoint": 0xE66B,
                    "description": "Clavichord bebung, 3 finger movements (below)"
                },
                "keyboardBebung4DotsAbove": {
                    "codepoint": 0xE66C,
                    "description": "Clavichord bebung, 4 finger movements (above)"
                },
                "keyboardBebung4DotsBelow": {
                    "codepoint": 0xE66D,
                    "description": "Clavichord bebung, 4 finger movements (below)"
                },
                "keyboardLeftPedalPictogram": {
                    "codepoint": 0xE65E,
                    "description": "Left pedal pictogram"
                },
                "keyboardMiddlePedalPictogram": {
                    "codepoint": 0xE65F,
                    "description": "Middle pedal pictogram"
                },
                "keyboardPedalD": {
                    "codepoint": 0xE653,
                    "description": "Pedal d"
                },
                "keyboardPedalDot": {
                    "codepoint": 0xE654,
                    "description": "Pedal dot"
                },
                "keyboardPedalE": {
                    "codepoint": 0xE652,
                    "description": "Pedal e"
                },
                "keyboardPedalHalf": {
                    "alternateCodepoint": 0x1D1B0,
                    "codepoint": 0xE656,
                    "description": "Half-pedal mark"
                },
                "keyboardPedalHalf2": {
                    "codepoint": 0xE65B,
                    "description": "Half pedal mark 1"
                },
                "keyboardPedalHalf3": {
                    "codepoint": 0xE65C,
                    "description": "Half pedal mark 2"
                },
                "keyboardPedalHeel1": {
                    "codepoint": 0xE661,
                    "description": "Pedal heel 1"
                },
                "keyboardPedalHeel2": {
                    "codepoint": 0xE662,
                    "description": "Pedal heel 2"
                },
                "keyboardPedalHeel3": {
                    "codepoint": 0xE663,
                    "description": "Pedal heel 3 (Davis)"
                },
                "keyboardPedalHeelToToe": {
                    "codepoint": 0xE674,
                    "description": "Pedal heel to toe"
                },
                "keyboardPedalHeelToe": {
                    "codepoint": 0xE666,
                    "description": "Pedal heel or toe"
                },
                "keyboardPedalHookEnd": {
                    "codepoint": 0xE673,
                    "description": "Pedal hook end"
                },
                "keyboardPedalHookStart": {
                    "codepoint": 0xE672,
                    "description": "Pedal hook start"
                },
                "keyboardPedalHyphen": {
                    "codepoint": 0xE658,
                    "description": "Pedal hyphen"
                },
                "keyboardPedalP": {
                    "codepoint": 0xE651,
                    "description": "Pedal P"
                },
                "keyboardPedalPed": {
                    "alternateCodepoint": 0x1D1AE,
                    "codepoint": 0xE650,
                    "description": "Pedal mark"
                },
                "keyboardPedalS": {
                    "codepoint": 0xE65A,
                    "description": "Pedal S"
                },
                "keyboardPedalSost": {
                    "codepoint": 0xE659,
                    "description": "Sostenuto pedal mark"
                },
                "keyboardPedalToe1": {
                    "codepoint": 0xE664,
                    "description": "Pedal toe 1"
                },
                "keyboardPedalToe2": {
                    "codepoint": 0xE665,
                    "description": "Pedal toe 2"
                },
                "keyboardPedalToeToHeel": {
                    "codepoint": 0xE675,
                    "description": "Pedal toe to heel"
                },
                "keyboardPedalUp": {
                    "alternateCodepoint": 0x1D1AF,
                    "codepoint": 0xE655,
                    "description": "Pedal up mark"
                },
                "keyboardPedalUpNotch": {
                    "codepoint": 0xE657,
                    "description": "Pedal up notch"
                },
                "keyboardPedalUpSpecial": {
                    "codepoint": 0xE65D,
                    "description": "Pedal up special"
                },
                "keyboardPlayWithLH": {
                    "codepoint": 0xE670,
                    "description": "Play with left hand"
                },
                "keyboardPlayWithLHEnd": {
                    "codepoint": 0xE671,
                    "description": "Play with left hand (end)"
                },
                "keyboardPlayWithRH": {
                    "codepoint": 0xE66E,
                    "description": "Play with right hand"
                },
                "keyboardPlayWithRHEnd": {
                    "codepoint": 0xE66F,
                    "description": "Play with right hand (end)"
                },
                "keyboardPluckInside": {
                    "codepoint": 0xE667,
                    "description": "Pluck strings inside piano (Maderna)"
                },
                "keyboardRightPedalPictogram": {
                    "codepoint": 0xE660,
                    "description": "Right pedal pictogram"
                },
                "kievanAccidentalFlat": {
                    "alternateCodepoint": 0x1D1E8,
                    "codepoint": 0xEC3E,
                    "description": "Kievan flat"
                },
                "kievanAccidentalSharp": {
                    "codepoint": 0xEC3D,
                    "description": "Kievan sharp"
                },
                "kievanAugmentationDot": {
                    "codepoint": 0xEC3C,
                    "description": "Kievan augmentation dot"
                },
                "kievanCClef": {
                    "alternateCodepoint": 0x1D1DE,
                    "codepoint": 0xEC30,
                    "description": "Kievan C clef (tse-fa-ut)"
                },
                "kievanEndingSymbol": {
                    "alternateCodepoint": 0x1D1DF,
                    "codepoint": 0xEC31,
                    "description": "Kievan ending symbol"
                },
                "kievanNote8thStemDown": {
                    "alternateCodepoint": 0x1D1E6,
                    "codepoint": 0xEC3A,
                    "description": "Kievan eighth note, stem down"
                },
                "kievanNote8thStemUp": {
                    "alternateCodepoint": 0x1D1E7,
                    "codepoint": 0xEC39,
                    "description": "Kievan eighth note, stem up"
                },
                "kievanNoteBeam": {
                    "codepoint": 0xEC3B,
                    "description": "Kievan beam"
                },
                "kievanNoteHalfStaffLine": {
                    "alternateCodepoint": 0x1D1E3,
                    "codepoint": 0xEC35,
                    "description": "Kievan half note (on staff line)"
                },
                "kievanNoteHalfStaffSpace": {
                    "codepoint": 0xEC36,
                    "description": "Kievan half note (in staff space)"
                },
                "kievanNoteQuarterStemDown": {
                    "alternateCodepoint": 0x1D1E4,
                    "codepoint": 0xEC38,
                    "description": "Kievan quarter note, stem down"
                },
                "kievanNoteQuarterStemUp": {
                    "alternateCodepoint": 0x1D1E5,
                    "codepoint": 0xEC37,
                    "description": "Kievan quarter note, stem up"
                },
                "kievanNoteReciting": {
                    "alternateCodepoint": 0x1D1E1,
                    "codepoint": 0xEC32,
                    "description": "Kievan reciting note"
                },
                "kievanNoteWhole": {
                    "alternateCodepoint": 0x1D1E2,
                    "codepoint": 0xEC33,
                    "description": "Kievan whole note"
                },
                "kievanNoteWholeFinal": {
                    "alternateCodepoint": 0x1D1E0,
                    "codepoint": 0xEC34,
                    "description": "Kievan final whole note"
                },
                "kodalyHandDo": {
                    "codepoint": 0xEC40,
                    "description": "Do hand sign"
                },
                "kodalyHandFa": {
                    "codepoint": 0xEC43,
                    "description": "Fa hand sign"
                },
                "kodalyHandLa": {
                    "codepoint": 0xEC45,
                    "description": "La hand sign"
                },
                "kodalyHandMi": {
                    "codepoint": 0xEC42,
                    "description": "Mi hand sign"
                },
                "kodalyHandRe": {
                    "codepoint": 0xEC41,
                    "description": "Re hand sign"
                },
                "kodalyHandSo": {
                    "codepoint": 0xEC44,
                    "description": "So hand sign"
                },
                "kodalyHandTi": {
                    "codepoint": 0xEC46,
                    "description": "Ti hand sign"
                },
                "leftRepeatSmall": {
                    "codepoint": 0xE04C,
                    "description": "Left repeat sign within bar"
                },
                "legerLine": {
                    "codepoint": 0xE022,
                    "description": "Leger line"
                },
                "legerLineNarrow": {
                    "codepoint": 0xE024,
                    "description": "Leger line (narrow)"
                },
                "legerLineWide": {
                    "codepoint": 0xE023,
                    "description": "Leger line (wide)"
                },
                "luteBarlineEndRepeat": {
                    "codepoint": 0xEBA4,
                    "description": "Lute tablature end repeat barline"
                },
                "luteBarlineFinal": {
                    "codepoint": 0xEBA5,
                    "description": "Lute tablature final barline"
                },
                "luteBarlineStartRepeat": {
                    "codepoint": 0xEBA3,
                    "description": "Lute tablature start repeat barline"
                },
                "luteDuration16th": {
                    "codepoint": 0xEBAB,
                    "description": "16th note (semiquaver) duration sign"
                },
                "luteDuration32nd": {
                    "codepoint": 0xEBAC,
                    "description": "32nd note (demisemiquaver) duration sign"
                },
                "luteDuration8th": {
                    "codepoint": 0xEBAA,
                    "description": "Eighth note (quaver) duration sign"
                },
                "luteDurationDoubleWhole": {
                    "codepoint": 0xEBA6,
                    "description": "Double whole note (breve) duration sign"
                },
                "luteDurationHalf": {
                    "codepoint": 0xEBA8,
                    "description": "Half note (minim) duration sign"
                },
                "luteDurationQuarter": {
                    "codepoint": 0xEBA9,
                    "description": "Quarter note (crotchet) duration sign"
                },
                "luteDurationWhole": {
                    "codepoint": 0xEBA7,
                    "description": "Whole note (semibreve) duration sign"
                },
                "luteFingeringRHFirst": {
                    "codepoint": 0xEBAE,
                    "description": "Right-hand fingering, first finger"
                },
                "luteFingeringRHSecond": {
                    "codepoint": 0xEBAF,
                    "description": "Right-hand fingering, second finger"
                },
                "luteFingeringRHThird": {
                    "codepoint": 0xEBB0,
                    "description": "Right-hand fingering, third finger"
                },
                "luteFingeringRHThumb": {
                    "codepoint": 0xEBAD,
                    "description": "Right-hand fingering, thumb"
                },
                "luteFrench10thCourse": {
                    "codepoint": 0xEBD0,
                    "description": "10th course (diapason)"
                },
                "luteFrench7thCourse": {
                    "codepoint": 0xEBCD,
                    "description": "Seventh course (diapason)"
                },
                "luteFrench8thCourse": {
                    "codepoint": 0xEBCE,
                    "description": "Eighth course (diapason)"
                },
                "luteFrench9thCourse": {
                    "codepoint": 0xEBCF,
                    "description": "Ninth course (diapason)"
                },
                "luteFrenchAppoggiaturaAbove": {
                    "codepoint": 0xEBD5,
                    "description": "Appoggiatura from above"
                },
                "luteFrenchAppoggiaturaBelow": {
                    "codepoint": 0xEBD4,
                    "description": "Appoggiatura from below"
                },
                "luteFrenchFretA": {
                    "codepoint": 0xEBC0,
                    "description": "Open string (a)"
                },
                "luteFrenchFretB": {
                    "codepoint": 0xEBC1,
                    "description": "First fret (b)"
                },
                "luteFrenchFretC": {
                    "codepoint": 0xEBC2,
                    "description": "Second fret (c)"
                },
                "luteFrenchFretD": {
                    "codepoint": 0xEBC3,
                    "description": "Third fret (d)"
                },
                "luteFrenchFretE": {
                    "codepoint": 0xEBC4,
                    "description": "Fourth fret (e)"
                },
                "luteFrenchFretF": {
                    "codepoint": 0xEBC5,
                    "description": "Fifth fret (f)"
                },
                "luteFrenchFretG": {
                    "codepoint": 0xEBC6,
                    "description": "Sixth fret (g)"
                },
                "luteFrenchFretH": {
                    "codepoint": 0xEBC7,
                    "description": "Seventh fret (h)"
                },
                "luteFrenchFretI": {
                    "codepoint": 0xEBC8,
                    "description": "Eighth fret (i)"
                },
                "luteFrenchFretK": {
                    "codepoint": 0xEBC9,
                    "description": "Ninth fret (k)"
                },
                "luteFrenchFretL": {
                    "codepoint": 0xEBCA,
                    "description": "10th fret (l)"
                },
                "luteFrenchFretM": {
                    "codepoint": 0xEBCB,
                    "description": "11th fret (m)"
                },
                "luteFrenchFretN": {
                    "codepoint": 0xEBCC,
                    "description": "12th fret (n)"
                },
                "luteFrenchMordentInverted": {
                    "codepoint": 0xEBD3,
                    "description": "Inverted mordent"
                },
                "luteFrenchMordentLower": {
                    "codepoint": 0xEBD2,
                    "description": "Mordent with lower auxiliary"
                },
                "luteFrenchMordentUpper": {
                    "codepoint": 0xEBD1,
                    "description": "Mordent with upper auxiliary"
                },
                "luteGermanALower": {
                    "codepoint": 0xEC00,
                    "description": "5th course, 1st fret (a)"
                },
                "luteGermanAUpper": {
                    "codepoint": 0xEC17,
                    "description": "6th course, 1st fret (A)"
                },
                "luteGermanBLower": {
                    "codepoint": 0xEC01,
                    "description": "4th course, 1st fret (b)"
                },
                "luteGermanBUpper": {
                    "codepoint": 0xEC18,
                    "description": "6th course, 2nd fret (B)"
                },
                "luteGermanCLower": {
                    "codepoint": 0xEC02,
                    "description": "3rd course, 1st fret (c)"
                },
                "luteGermanCUpper": {
                    "codepoint": 0xEC19,
                    "description": "6th course, 3rd fret (C)"
                },
                "luteGermanDLower": {
                    "codepoint": 0xEC03,
                    "description": "2nd course, 1st fret (d)"
                },
                "luteGermanDUpper": {
                    "codepoint": 0xEC1A,
                    "description": "6th course, 4th fret (D)"
                },
                "luteGermanELower": {
                    "codepoint": 0xEC04,
                    "description": "1st course, 1st fret (e)"
                },
                "luteGermanEUpper": {
                    "codepoint": 0xEC1B,
                    "description": "6th course, 5th fret (E)"
                },
                "luteGermanFLower": {
                    "codepoint": 0xEC05,
                    "description": "5th course, 2nd fret (f)"
                },
                "luteGermanFUpper": {
                    "codepoint": 0xEC1C,
                    "description": "6th course, 6th fret (F)"
                },
                "luteGermanGLower": {
                    "codepoint": 0xEC06,
                    "description": "4th course, 2nd fret (g)"
                },
                "luteGermanGUpper": {
                    "codepoint": 0xEC1D,
                    "description": "6th course, 7th fret (G)"
                },
                "luteGermanHLower": {
                    "codepoint": 0xEC07,
                    "description": "3rd course, 2nd fret (h)"
                },
                "luteGermanHUpper": {
                    "codepoint": 0xEC1E,
                    "description": "6th course, 8th fret (H)"
                },
                "luteGermanILower": {
                    "codepoint": 0xEC08,
                    "description": "2nd course, 2nd fret (i)"
                },
                "luteGermanIUpper": {
                    "codepoint": 0xEC1F,
                    "description": "6th course, 9th fret (I)"
                },
                "luteGermanKLower": {
                    "codepoint": 0xEC09,
                    "description": "1st course, 2nd fret (k)"
                },
                "luteGermanKUpper": {
                    "codepoint": 0xEC20,
                    "description": "6th course, 10th fret (K)"
                },
                "luteGermanLLower": {
                    "codepoint": 0xEC0A,
                    "description": "5th course, 3rd fret (l)"
                },
                "luteGermanLUpper": {
                    "codepoint": 0xEC21,
                    "description": "6th course, 11th fret (L)"
                },
                "luteGermanMLower": {
                    "codepoint": 0xEC0B,
                    "description": "4th course, 3rd fret (m)"
                },
                "luteGermanMUpper": {
                    "codepoint": 0xEC22,
                    "description": "6th course, 12th fret (M)"
                },
                "luteGermanNLower": {
                    "codepoint": 0xEC0C,
                    "description": "3rd course, 3rd fret (n)"
                },
                "luteGermanNUpper": {
                    "codepoint": 0xEC23,
                    "description": "6th course, 13th fret (N)"
                },
                "luteGermanOLower": {
                    "codepoint": 0xEC0D,
                    "description": "2nd course, 3rd fret (o)"
                },
                "luteGermanPLower": {
                    "codepoint": 0xEC0E,
                    "description": "1st course, 3rd fret (p)"
                },
                "luteGermanQLower": {
                    "codepoint": 0xEC0F,
                    "description": "5th course, 4th fret (q)"
                },
                "luteGermanRLower": {
                    "codepoint": 0xEC10,
                    "description": "4th course, 4th fret (r)"
                },
                "luteGermanSLower": {
                    "codepoint": 0xEC11,
                    "description": "3rd course, 4th fret (s)"
                },
                "luteGermanTLower": {
                    "codepoint": 0xEC12,
                    "description": "2nd course, 4th fret (t)"
                },
                "luteGermanVLower": {
                    "codepoint": 0xEC13,
                    "description": "1st course, 4th fret (v)"
                },
                "luteGermanXLower": {
                    "codepoint": 0xEC14,
                    "description": "5th course, 5th fret (x)"
                },
                "luteGermanYLower": {
                    "codepoint": 0xEC15,
                    "description": "4th course, 5th fret (y)"
                },
                "luteGermanZLower": {
                    "codepoint": 0xEC16,
                    "description": "3rd course, 5th fret (z)"
                },
                "luteItalianClefCSolFaUt": {
                    "codepoint": 0xEBF1,
                    "description": "C sol fa ut clef"
                },
                "luteItalianClefFFaUt": {
                    "codepoint": 0xEBF0,
                    "description": "F fa ut clef"
                },
                "luteItalianFret0": {
                    "codepoint": 0xEBE0,
                    "description": "Open string (0)"
                },
                "luteItalianFret1": {
                    "codepoint": 0xEBE1,
                    "description": "First fret (1)"
                },
                "luteItalianFret2": {
                    "codepoint": 0xEBE2,
                    "description": "Second fret (2)"
                },
                "luteItalianFret3": {
                    "codepoint": 0xEBE3,
                    "description": "Third fret (3)"
                },
                "luteItalianFret4": {
                    "codepoint": 0xEBE4,
                    "description": "Fourth fret (4)"
                },
                "luteItalianFret5": {
                    "codepoint": 0xEBE5,
                    "description": "Fifth fret (5)"
                },
                "luteItalianFret6": {
                    "codepoint": 0xEBE6,
                    "description": "Sixth fret (6)"
                },
                "luteItalianFret7": {
                    "codepoint": 0xEBE7,
                    "description": "Seventh fret (7)"
                },
                "luteItalianFret8": {
                    "codepoint": 0xEBE8,
                    "description": "Eighth fret (8)"
                },
                "luteItalianFret9": {
                    "codepoint": 0xEBE9,
                    "description": "Ninth fret (9)"
                },
                "luteItalianHoldFinger": {
                    "codepoint": 0xEBF4,
                    "description": "Hold finger in place"
                },
                "luteItalianHoldNote": {
                    "codepoint": 0xEBF3,
                    "description": "Hold note"
                },
                "luteItalianReleaseFinger": {
                    "codepoint": 0xEBF5,
                    "description": "Release finger"
                },
                "luteItalianTempoFast": {
                    "codepoint": 0xEBEA,
                    "description": "Fast tempo indication (de Mudarra)"
                },
                "luteItalianTempoNeitherFastNorSlow": {
                    "codepoint": 0xEBEC,
                    "description": "Neither fast nor slow tempo indication (de Mudarra)"
                },
                "luteItalianTempoSlow": {
                    "codepoint": 0xEBED,
                    "description": "Slow tempo indication (de Mudarra)"
                },
                "luteItalianTempoSomewhatFast": {
                    "codepoint": 0xEBEB,
                    "description": "Somewhat fast tempo indication (de Narvaez)"
                },
                "luteItalianTempoVerySlow": {
                    "codepoint": 0xEBEE,
                    "description": "Very slow indication (de Narvaez)"
                },
                "luteItalianTimeTriple": {
                    "codepoint": 0xEBEF,
                    "description": "Triple time indication"
                },
                "luteItalianTremolo": {
                    "codepoint": 0xEBF2,
                    "description": "Single-finger tremolo or mordent"
                },
                "luteItalianVibrato": {
                    "codepoint": 0xEBF6,
                    "description": "Vibrato (verre cass\u00e9)"
                },
                "luteStaff6Lines": {
                    "codepoint": 0xEBA0,
                    "description": "Lute tablature staff, 6 courses"
                },
                "luteStaff6LinesNarrow": {
                    "codepoint": 0xEBA2,
                    "description": "Lute tablature staff, 6 courses (narrow)"
                },
                "luteStaff6LinesWide": {
                    "codepoint": 0xEBA1,
                    "description": "Lute tablature staff, 6 courses (wide)"
                },
                "lyricsElision": {
                    "codepoint": 0xE551,
                    "description": "Elision"
                },
                "lyricsElisionNarrow": {
                    "codepoint": 0xE550,
                    "description": "Narrow elision"
                },
                "lyricsElisionWide": {
                    "codepoint": 0xE552,
                    "description": "Wide elision"
                },
                "lyricsHyphenBaseline": {
                    "codepoint": 0xE553,
                    "description": "Baseline hyphen"
                },
                "lyricsHyphenBaselineNonBreaking": {
                    "codepoint": 0xE554,
                    "description": "Non-breaking baseline hyphen"
                },
                "medRenFlatHardB": {
                    "codepoint": 0xE9E1,
                    "description": "Flat, hard b (mi)"
                },
                "medRenFlatSoftB": {
                    "alternateCodepoint": 0x1D1D2,
                    "codepoint": 0xE9E0,
                    "description": "Flat, soft b (fa)"
                },
                "medRenFlatWithDot": {
                    "codepoint": 0xE9E4,
                    "description": "Flat with dot"
                },
                "medRenGClefCMN": {
                    "codepoint": 0xEA24,
                    "description": "G clef (Corpus Monodicum)"
                },
                "medRenLiquescenceCMN": {
                    "codepoint": 0xEA22,
                    "description": "Liquescence"
                },
                "medRenLiquescentAscCMN": {
                    "codepoint": 0xEA26,
                    "description": "Liquescent ascending (Corpus Monodicum)"
                },
                "medRenLiquescentDescCMN": {
                    "codepoint": 0xEA27,
                    "description": "Liquescent descending (Corpus Monodicum)"
                },
                "medRenNatural": {
                    "codepoint": 0xE9E2,
                    "description": "Natural"
                },
                "medRenNaturalWithCross": {
                    "codepoint": 0xE9E5,
                    "description": "Natural with interrupted cross"
                },
                "medRenOriscusCMN": {
                    "codepoint": 0xEA2A,
                    "description": "Oriscus (Corpus Monodicum)"
                },
                "medRenPlicaCMN": {
                    "codepoint": 0xEA23,
                    "description": "Plica"
                },
                "medRenPunctumCMN": {
                    "codepoint": 0xEA25,
                    "description": "Punctum (Corpus Monodicum)"
                },
                "medRenQuilismaCMN": {
                    "codepoint": 0xEA28,
                    "description": "Quilisma (Corpus Monodicum)"
                },
                "medRenSharpCroix": {
                    "alternateCodepoint": 0x1D1CF,
                    "codepoint": 0xE9E3,
                    "description": "Croix"
                },
                "medRenStrophicusCMN": {
                    "codepoint": 0xEA29,
                    "description": "Strophicus (Corpus Monodicum)"
                },
                "mensuralAlterationSign": {
                    "codepoint": 0xEA10,
                    "description": "Alteration sign"
                },
                "mensuralBlackBrevis": {
                    "codepoint": 0xE952,
                    "description": "Black mensural brevis"
                },
                "mensuralBlackBrevisVoid": {
                    "codepoint": 0xE956,
                    "description": "Black mensural void brevis"
                },
                "mensuralBlackDragma": {
                    "codepoint": 0xE95A,
                    "description": "Black mensural dragma"
                },
                "mensuralBlackLonga": {
                    "codepoint": 0xE951,
                    "description": "Black mensural longa"
                },
                "mensuralBlackMaxima": {
                    "codepoint": 0xE950,
                    "description": "Black mensural maxima"
                },
                "mensuralBlackMinima": {
                    "alternateCodepoint": 0x1D1BC,
                    "codepoint": 0xE954,
                    "description": "Black mensural minima"
                },
                "mensuralBlackMinimaVoid": {
                    "alternateCodepoint": 0x1D1BB,
                    "codepoint": 0xE958,
                    "description": "Black mensural void minima"
                },
                "mensuralBlackSemibrevis": {
                    "alternateCodepoint": 0x1D1BA,
                    "codepoint": 0xE953,
                    "description": "Black mensural semibrevis"
                },
                "mensuralBlackSemibrevisCaudata": {
                    "codepoint": 0xE959,
                    "description": "Black mensural semibrevis caudata"
                },
                "mensuralBlackSemibrevisOblique": {
                    "codepoint": 0xE95B,
                    "description": "Black mensural oblique semibrevis"
                },
                "mensuralBlackSemibrevisVoid": {
                    "alternateCodepoint": 0x1D1B9,
                    "codepoint": 0xE957,
                    "description": "Black mensural void semibrevis"
                },
                "mensuralBlackSemiminima": {
                    "codepoint": 0xE955,
                    "description": "Black mensural semiminima"
                },
                "mensuralCclef": {
                    "codepoint": 0xE905,
                    "description": "Mensural C clef"
                },
                "mensuralCclefPetrucciPosHigh": {
                    "codepoint": 0xE90A,
                    "description": "Petrucci C clef, high position"
                },
                "mensuralCclefPetrucciPosHighest": {
                    "codepoint": 0xE90B,
                    "description": "Petrucci C clef, highest position"
                },
                "mensuralCclefPetrucciPosLow": {
                    "codepoint": 0xE908,
                    "description": "Petrucci C clef, low position"
                },
                "mensuralCclefPetrucciPosLowest": {
                    "codepoint": 0xE907,
                    "description": "Petrucci C clef, lowest position"
                },
                "mensuralCclefPetrucciPosMiddle": {
                    "codepoint": 0xE909,
                    "description": "Petrucci C clef, middle position"
                },
                "mensuralColorationEndRound": {
                    "codepoint": 0xEA0F,
                    "description": "Coloration end, round"
                },
                "mensuralColorationEndSquare": {
                    "codepoint": 0xEA0D,
                    "description": "Coloration end, square"
                },
                "mensuralColorationStartRound": {
                    "codepoint": 0xEA0E,
                    "description": "Coloration start, round"
                },
                "mensuralColorationStartSquare": {
                    "codepoint": 0xEA0C,
                    "description": "Coloration start, square"
                },
                "mensuralCombStemDiagonal": {
                    "codepoint": 0xE940,
                    "description": "Combining stem diagonal"
                },
                "mensuralCombStemDown": {
                    "codepoint": 0xE93F,
                    "description": "Combining stem down"
                },
                "mensuralCombStemDownFlagExtended": {
                    "codepoint": 0xE948,
                    "description": "Combining stem with extended flag down"
                },
                "mensuralCombStemDownFlagFlared": {
                    "codepoint": 0xE946,
                    "description": "Combining stem with flared flag down"
                },
                "mensuralCombStemDownFlagFusa": {
                    "codepoint": 0xE94C,
                    "description": "Combining stem with fusa flag down"
                },
                "mensuralCombStemDownFlagLeft": {
                    "codepoint": 0xE944,
                    "description": "Combining stem with flag left down"
                },
                "mensuralCombStemDownFlagRight": {
                    "codepoint": 0xE942,
                    "description": "Combining stem with flag right down"
                },
                "mensuralCombStemDownFlagSemiminima": {
                    "codepoint": 0xE94A,
                    "description": "Combining stem with semiminima flag down"
                },
                "mensuralCombStemUp": {
                    "codepoint": 0xE93E,
                    "description": "Combining stem up"
                },
                "mensuralCombStemUpFlagExtended": {
                    "codepoint": 0xE947,
                    "description": "Combining stem with extended flag up"
                },
                "mensuralCombStemUpFlagFlared": {
                    "codepoint": 0xE945,
                    "description": "Combining stem with flared flag up"
                },
                "mensuralCombStemUpFlagFusa": {
                    "codepoint": 0xE94B,
                    "description": "Combining stem with fusa flag up"
                },
                "mensuralCombStemUpFlagLeft": {
                    "codepoint": 0xE943,
                    "description": "Combining stem with flag left up"
                },
                "mensuralCombStemUpFlagRight": {
                    "codepoint": 0xE941,
                    "description": "Combining stem with flag right up"
                },
                "mensuralCombStemUpFlagSemiminima": {
                    "codepoint": 0xE949,
                    "description": "Combining stem with semiminima flag up"
                },
                "mensuralCustosCheckmark": {
                    "codepoint": 0xEA0A,
                    "description": "Checkmark custos"
                },
                "mensuralCustosDown": {
                    "codepoint": 0xEA03,
                    "description": "Mensural custos down"
                },
                "mensuralCustosTurn": {
                    "codepoint": 0xEA0B,
                    "description": "Turn-like custos"
                },
                "mensuralCustosUp": {
                    "codepoint": 0xEA02,
                    "description": "Mensural custos up"
                },
                "mensuralFclef": {
                    "codepoint": 0xE903,
                    "description": "Mensural F clef"
                },
                "mensuralFclefPetrucci": {
                    "codepoint": 0xE904,
                    "description": "Petrucci F clef"
                },
                "mensuralGclef": {
                    "codepoint": 0xE900,
                    "description": "Mensural G clef"
                },
                "mensuralGclefPetrucci": {
                    "codepoint": 0xE901,
                    "description": "Petrucci G clef"
                },
                "mensuralModusImperfectumVert": {
                    "codepoint": 0xE92D,
                    "description": "Modus imperfectum, vertical"
                },
                "mensuralModusPerfectumVert": {
                    "codepoint": 0xE92C,
                    "description": "Modus perfectum, vertical"
                },
                "mensuralNoteheadLongaBlack": {
                    "codepoint": 0xE934,
                    "description": "Longa/brevis notehead, black"
                },
                "mensuralNoteheadLongaBlackVoid": {
                    "codepoint": 0xE936,
                    "description": "Longa/brevis notehead, black and void"
                },
                "mensuralNoteheadLongaVoid": {
                    "alternateCodepoint": 0x1D1B7,
                    "codepoint": 0xE935,
                    "description": "Longa/brevis notehead, void"
                },
                "mensuralNoteheadLongaWhite": {
                    "codepoint": 0xE937,
                    "description": "Longa/brevis notehead, white"
                },
                "mensuralNoteheadMaximaBlack": {
                    "codepoint": 0xE930,
                    "description": "Maxima notehead, black"
                },
                "mensuralNoteheadMaximaBlackVoid": {
                    "codepoint": 0xE932,
                    "description": "Maxima notehead, black and void"
                },
                "mensuralNoteheadMaximaVoid": {
                    "alternateCodepoint": 0x1D1B6,
                    "codepoint": 0xE931,
                    "description": "Maxima notehead, void"
                },
                "mensuralNoteheadMaximaWhite": {
                    "codepoint": 0xE933,
                    "description": "Maxima notehead, white"
                },
                "mensuralNoteheadMinimaWhite": {
                    "codepoint": 0xE93C,
                    "description": "Minima notehead, white"
                },
                "mensuralNoteheadSemibrevisBlack": {
                    "alternateCodepoint": 0x1D1BA,
                    "codepoint": 0xE938,
                    "description": "Semibrevis notehead, black"
                },
                "mensuralNoteheadSemibrevisBlackVoid": {
                    "codepoint": 0xE93A,
                    "description": "Semibrevis notehead, black and void"
                },
                "mensuralNoteheadSemibrevisBlackVoidTurned": {
                    "codepoint": 0xE93B,
                    "description": "Semibrevis notehead, black and void (turned)"
                },
                "mensuralNoteheadSemibrevisVoid": {
                    "alternateCodepoint": 0x1D1B9,
                    "codepoint": 0xE939,
                    "description": "Semibrevis notehead, void"
                },
                "mensuralNoteheadSemiminimaWhite": {
                    "codepoint": 0xE93D,
                    "description": "Semiminima/fusa notehead, white"
                },
                "mensuralObliqueAsc2ndBlack": {
                    "codepoint": 0xE970,
                    "description": "Oblique form, ascending 2nd, black"
                },
                "mensuralObliqueAsc2ndBlackVoid": {
                    "codepoint": 0xE972,
                    "description": "Oblique form, ascending 2nd, black and void"
                },
                "mensuralObliqueAsc2ndVoid": {
                    "codepoint": 0xE971,
                    "description": "Oblique form, ascending 2nd, void"
                },
                "mensuralObliqueAsc2ndWhite": {
                    "codepoint": 0xE973,
                    "description": "Oblique form, ascending 2nd, white"
                },
                "mensuralObliqueAsc3rdBlack": {
                    "codepoint": 0xE974,
                    "description": "Oblique form, ascending 3rd, black"
                },
                "mensuralObliqueAsc3rdBlackVoid": {
                    "codepoint": 0xE976,
                    "description": "Oblique form, ascending 3rd, black and void"
                },
                "mensuralObliqueAsc3rdVoid": {
                    "codepoint": 0xE975,
                    "description": "Oblique form, ascending 3rd, void"
                },
                "mensuralObliqueAsc3rdWhite": {
                    "codepoint": 0xE977,
                    "description": "Oblique form, ascending 3rd, white"
                },
                "mensuralObliqueAsc4thBlack": {
                    "codepoint": 0xE978,
                    "description": "Oblique form, ascending 4th, black"
                },
                "mensuralObliqueAsc4thBlackVoid": {
                    "codepoint": 0xE97A,
                    "description": "Oblique form, ascending 4th, black and void"
                },
                "mensuralObliqueAsc4thVoid": {
                    "codepoint": 0xE979,
                    "description": "Oblique form, ascending 4th, void"
                },
                "mensuralObliqueAsc4thWhite": {
                    "codepoint": 0xE97B,
                    "description": "Oblique form, ascending 4th, white"
                },
                "mensuralObliqueAsc5thBlack": {
                    "codepoint": 0xE97C,
                    "description": "Oblique form, ascending 5th, black"
                },
                "mensuralObliqueAsc5thBlackVoid": {
                    "codepoint": 0xE97E,
                    "description": "Oblique form, ascending 5th, black and void"
                },
                "mensuralObliqueAsc5thVoid": {
                    "codepoint": 0xE97D,
                    "description": "Oblique form, ascending 5th, void"
                },
                "mensuralObliqueAsc5thWhite": {
                    "codepoint": 0xE97F,
                    "description": "Oblique form, ascending 5th, white"
                },
                "mensuralObliqueDesc2ndBlack": {
                    "codepoint": 0xE980,
                    "description": "Oblique form, descending 2nd, black"
                },
                "mensuralObliqueDesc2ndBlackVoid": {
                    "codepoint": 0xE982,
                    "description": "Oblique form, descending 2nd, black and void"
                },
                "mensuralObliqueDesc2ndVoid": {
                    "codepoint": 0xE981,
                    "description": "Oblique form, descending 2nd, void"
                },
                "mensuralObliqueDesc2ndWhite": {
                    "codepoint": 0xE983,
                    "description": "Oblique form, descending 2nd, white"
                },
                "mensuralObliqueDesc3rdBlack": {
                    "codepoint": 0xE984,
                    "description": "Oblique form, descending 3rd, black"
                },
                "mensuralObliqueDesc3rdBlackVoid": {
                    "codepoint": 0xE986,
                    "description": "Oblique form, descending 3rd, black and void"
                },
                "mensuralObliqueDesc3rdVoid": {
                    "codepoint": 0xE985,
                    "description": "Oblique form, descending 3rd, void"
                },
                "mensuralObliqueDesc3rdWhite": {
                    "codepoint": 0xE987,
                    "description": "Oblique form, descending 3rd, white"
                },
                "mensuralObliqueDesc4thBlack": {
                    "codepoint": 0xE988,
                    "description": "Oblique form, descending 4th, black"
                },
                "mensuralObliqueDesc4thBlackVoid": {
                    "codepoint": 0xE98A,
                    "description": "Oblique form, descending 4th, black and void"
                },
                "mensuralObliqueDesc4thVoid": {
                    "codepoint": 0xE989,
                    "description": "Oblique form, descending 4th, void"
                },
                "mensuralObliqueDesc4thWhite": {
                    "codepoint": 0xE98B,
                    "description": "Oblique form, descending 4th, white"
                },
                "mensuralObliqueDesc5thBlack": {
                    "codepoint": 0xE98C,
                    "description": "Oblique form, descending 5th, black"
                },
                "mensuralObliqueDesc5thBlackVoid": {
                    "codepoint": 0xE98E,
                    "description": "Oblique form, descending 5th, black and void"
                },
                "mensuralObliqueDesc5thVoid": {
                    "codepoint": 0xE98D,
                    "description": "Oblique form, descending 5th, void"
                },
                "mensuralObliqueDesc5thWhite": {
                    "codepoint": 0xE98F,
                    "description": "Oblique form, descending 5th, white"
                },
                "mensuralProlation1": {
                    "alternateCodepoint": 0x1D1C7,
                    "codepoint": 0xE910,
                    "description": "Tempus perfectum cum prolatione perfecta (9/8)"
                },
                "mensuralProlation10": {
                    "alternateCodepoint": 0x1D1CE,
                    "codepoint": 0xE919,
                    "description": "Tempus imperfectum cum prolatione imperfecta diminution 4"
                },
                "mensuralProlation11": {
                    "codepoint": 0xE91A,
                    "description": "Tempus imperfectum cum prolatione imperfecta diminution 5"
                },
                "mensuralProlation2": {
                    "alternateCodepoint": 0x1D1C8,
                    "codepoint": 0xE911,
                    "description": "Tempus perfectum cum prolatione imperfecta (3/4)"
                },
                "mensuralProlation3": {
                    "alternateCodepoint": 0x1D1C9,
                    "codepoint": 0xE912,
                    "description": "Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)"
                },
                "mensuralProlation4": {
                    "codepoint": 0xE913,
                    "description": "Tempus perfectum cum prolatione perfecta diminution 2 (9/16)"
                },
                "mensuralProlation5": {
                    "alternateCodepoint": 0x1D1CA,
                    "codepoint": 0xE914,
                    "description": "Tempus imperfectum cum prolatione perfecta (6/8)"
                },
                "mensuralProlation6": {
                    "alternateCodepoint": 0x1D1CB,
                    "codepoint": 0xE915,
                    "description": "Tempus imperfectum cum prolatione imperfecta (2/4)"
                },
                "mensuralProlation7": {
                    "alternateCodepoint": 0x1D1CC,
                    "codepoint": 0xE916,
                    "description": "Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)"
                },
                "mensuralProlation8": {
                    "codepoint": 0xE917,
                    "description": "Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16)"
                },
                "mensuralProlation9": {
                    "alternateCodepoint": 0x1D1CD,
                    "codepoint": 0xE918,
                    "description": "Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)"
                },
                "mensuralProlationCombiningDot": {
                    "codepoint": 0xE920,
                    "description": "Combining dot"
                },
                "mensuralProlationCombiningDotVoid": {
                    "codepoint": 0xE924,
                    "description": "Combining void dot"
                },
                "mensuralProlationCombiningStroke": {
                    "codepoint": 0xE925,
                    "description": "Combining vertical stroke"
                },
                "mensuralProlationCombiningThreeDots": {
                    "codepoint": 0xE922,
                    "description": "Combining three dots horizontal"
                },
                "mensuralProlationCombiningThreeDotsTri": {
                    "codepoint": 0xE923,
                    "description": "Combining three dots triangular"
                },
                "mensuralProlationCombiningTwoDots": {
                    "codepoint": 0xE921,
                    "description": "Combining two dots"
                },
                "mensuralProportion1": {
                    "codepoint": 0xE926,
                    "description": "Mensural proportion 1"
                },
                "mensuralProportion2": {
                    "codepoint": 0xE927,
                    "description": "Mensural proportion 2"
                },
                "mensuralProportion3": {
                    "codepoint": 0xE928,
                    "description": "Mensural proportion 3"
                },
                "mensuralProportion4": {
                    "codepoint": 0xE929,
                    "description": "Mensural proportion 4"
                },
                "mensuralProportionMajor": {
                    "codepoint": 0xE92B,
                    "description": "Mensural proportion major"
                },
                "mensuralProportionMinor": {
                    "codepoint": 0xE92A,
                    "description": "Mensural proportion minor"
                },
                "mensuralProportionProportioDupla1": {
                    "codepoint": 0xE91C,
                    "description": "Proportio dupla 1"
                },
                "mensuralProportionProportioDupla2": {
                    "codepoint": 0xE91D,
                    "description": "Proportio dupla 2"
                },
                "mensuralProportionProportioQuadrupla": {
                    "codepoint": 0xE91F,
                    "description": "Proportio quadrupla"
                },
                "mensuralProportionProportioTripla": {
                    "codepoint": 0xE91E,
                    "description": "Proportio tripla"
                },
                "mensuralProportionTempusPerfectum": {
                    "codepoint": 0xE91B,
                    "description": "Tempus perfectum"
                },
                "mensuralRestBrevis": {
                    "alternateCodepoint": 0x1D1C3,
                    "codepoint": 0xE9F3,
                    "description": "Brevis rest"
                },
                "mensuralRestFusa": {
                    "codepoint": 0xE9F7,
                    "description": "Fusa rest"
                },
                "mensuralRestLongaImperfecta": {
                    "alternateCodepoint": 0x1D1C2,
                    "codepoint": 0xE9F2,
                    "description": "Longa imperfecta rest"
                },
                "mensuralRestLongaPerfecta": {
                    "alternateCodepoint": 0x1D1C1,
                    "codepoint": 0xE9F1,
                    "description": "Longa perfecta rest"
                },
                "mensuralRestMaxima": {
                    "codepoint": 0xE9F0,
                    "description": "Maxima rest"
                },
                "mensuralRestMinima": {
                    "alternateCodepoint": 0x1D1C5,
                    "codepoint": 0xE9F5,
                    "description": "Minima rest"
                },
                "mensuralRestSemibrevis": {
                    "alternateCodepoint": 0x1D1C4,
                    "codepoint": 0xE9F4,
                    "description": "Semibrevis rest"
                },
                "mensuralRestSemifusa": {
                    "codepoint": 0xE9F8,
                    "description": "Semifusa rest"
                },
                "mensuralRestSemiminima": {
                    "alternateCodepoint": 0x1D1C6,
                    "codepoint": 0xE9F6,
                    "description": "Semiminima rest"
                },
                "mensuralSignumDown": {
                    "codepoint": 0xEA01,
                    "description": "Signum congruentiae down"
                },
                "mensuralSignumUp": {
                    "codepoint": 0xEA00,
                    "description": "Signum congruentiae up"
                },
                "mensuralTempusImperfectumHoriz": {
                    "codepoint": 0xE92F,
                    "description": "Tempus imperfectum, horizontal"
                },
                "mensuralTempusPerfectumHoriz": {
                    "codepoint": 0xE92E,
                    "description": "Tempus perfectum, horizontal"
                },
                "mensuralWhiteBrevis": {
                    "alternateCodepoint": 0x1D1B8,
                    "codepoint": 0xE95E,
                    "description": "White mensural brevis"
                },
                "mensuralWhiteFusa": {
                    "alternateCodepoint": 0x1D1BE,
                    "codepoint": 0xE961,
                    "description": "White mensural fusa"
                },
                "mensuralWhiteLonga": {
                    "alternateCodepoint": 0x1D1B7,
                    "codepoint": 0xE95D,
                    "description": "White mensural longa"
                },
                "mensuralWhiteMaxima": {
                    "alternateCodepoint": 0x1D1B6,
                    "codepoint": 0xE95C,
                    "description": "White mensural maxima"
                },
                "mensuralWhiteMinima": {
                    "codepoint": 0xE95F,
                    "description": "White mensural minima"
                },
                "mensuralWhiteSemiminima": {
                    "alternateCodepoint": 0x1D1BC,
                    "codepoint": 0xE960,
                    "description": "White mensural semiminima"
                },
                "metAugmentationDot": {
                    "codepoint": 0xECB7,
                    "description": "Augmentation dot"
                },
                "metNote1024thDown": {
                    "codepoint": 0xECB6,
                    "description": "1024th note (semihemidemisemihemidemisemiquaver) stem down"
                },
                "metNote1024thUp": {
                    "codepoint": 0xECB5,
                    "description": "1024th note (semihemidemisemihemidemisemiquaver) stem up"
                },
                "metNote128thDown": {
                    "codepoint": 0xECB0,
                    "description": "128th note (semihemidemisemiquaver) stem down"
                },
                "metNote128thUp": {
                    "codepoint": 0xECAF,
                    "description": "128th note (semihemidemisemiquaver) stem up"
                },
                "metNote16thDown": {
                    "codepoint": 0xECAA,
                    "description": "16th note (semiquaver) stem down"
                },
                "metNote16thUp": {
                    "codepoint": 0xECA9,
                    "description": "16th note (semiquaver) stem up"
                },
                "metNote256thDown": {
                    "codepoint": 0xECB2,
                    "description": "256th note (demisemihemidemisemiquaver) stem down"
                },
                "metNote256thUp": {
                    "codepoint": 0xECB1,
                    "description": "256th note (demisemihemidemisemiquaver) stem up"
                },
                "metNote32ndDown": {
                    "codepoint": 0xECAC,
                    "description": "32nd note (demisemiquaver) stem down"
                },
                "metNote32ndUp": {
                    "codepoint": 0xECAB,
                    "description": "32nd note (demisemiquaver) stem up"
                },
                "metNote512thDown": {
                    "codepoint": 0xECB4,
                    "description": "512th note (hemidemisemihemidemisemiquaver) stem down"
                },
                "metNote512thUp": {
                    "codepoint": 0xECB3,
                    "description": "512th note (hemidemisemihemidemisemiquaver) stem up"
                },
                "metNote64thDown": {
                    "codepoint": 0xECAE,
                    "description": "64th note (hemidemisemiquaver) stem down"
                },
                "metNote64thUp": {
                    "codepoint": 0xECAD,
                    "description": "64th note (hemidemisemiquaver) stem up"
                },
                "metNote8thDown": {
                    "codepoint": 0xECA8,
                    "description": "Eighth note (quaver) stem down"
                },
                "metNote8thUp": {
                    "codepoint": 0xECA7,
                    "description": "Eighth note (quaver) stem up"
                },
                "metNoteDoubleWhole": {
                    "codepoint": 0xECA0,
                    "description": "Double whole note (breve)"
                },
                "metNoteDoubleWholeSquare": {
                    "codepoint": 0xECA1,
                    "description": "Double whole note (square)"
                },
                "metNoteHalfDown": {
                    "codepoint": 0xECA4,
                    "description": "Half note (minim) stem down"
                },
                "metNoteHalfUp": {
                    "codepoint": 0xECA3,
                    "description": "Half note (minim) stem up"
                },
                "metNoteQuarterDown": {
                    "codepoint": 0xECA6,
                    "description": "Quarter note (crotchet) stem down"
                },
                "metNoteQuarterUp": {
                    "codepoint": 0xECA5,
                    "description": "Quarter note (crotchet) stem up"
                },
                "metNoteWhole": {
                    "codepoint": 0xECA2,
                    "description": "Whole note (semibreve)"
                },
                "metricModulationArrowLeft": {
                    "codepoint": 0xEC63,
                    "description": "Left-pointing arrow for metric modulation"
                },
                "metricModulationArrowRight": {
                    "codepoint": 0xEC64,
                    "description": "Right-pointing arrow for metric modulation"
                },
                "miscDoNotCopy": {
                    "codepoint": 0xEC61,
                    "description": "Do not copy"
                },
                "miscDoNotPhotocopy": {
                    "codepoint": 0xEC60,
                    "description": "Do not photocopy"
                },
                "miscEyeglasses": {
                    "codepoint": 0xEC62,
                    "description": "Eyeglasses"
                },
                "note1024thDown": {
                    "codepoint": 0xE1E6,
                    "description": "1024th note (semihemidemisemihemidemisemiquaver) stem down"
                },
                "note1024thUp": {
                    "codepoint": 0xE1E5,
                    "description": "1024th note (semihemidemisemihemidemisemiquaver) stem up"
                },
                "note128thDown": {
                    "codepoint": 0xE1E0,
                    "description": "128th note (semihemidemisemiquaver) stem down"
                },
                "note128thUp": {
                    "alternateCodepoint": 0x1D164,
                    "codepoint": 0xE1DF,
                    "description": "128th note (semihemidemisemiquaver) stem up"
                },
                "note16thDown": {
                    "codepoint": 0xE1DA,
                    "description": "16th note (semiquaver) stem down"
                },
                "note16thUp": {
                    "alternateCodepoint": 0x1D161,
                    "codepoint": 0xE1D9,
                    "description": "16th note (semiquaver) stem up"
                },
                "note256thDown": {
                    "codepoint": 0xE1E2,
                    "description": "256th note (demisemihemidemisemiquaver) stem down"
                },
                "note256thUp": {
                    "codepoint": 0xE1E1,
                    "description": "256th note (demisemihemidemisemiquaver) stem up"
                },
                "note32ndDown": {
                    "codepoint": 0xE1DC,
                    "description": "32nd note (demisemiquaver) stem down"
                },
                "note32ndUp": {
                    "alternateCodepoint": 0x1D162,
                    "codepoint": 0xE1DB,
                    "description": "32nd note (demisemiquaver) stem up"
                },
                "note512thDown": {
                    "codepoint": 0xE1E4,
                    "description": "512th note (hemidemisemihemidemisemiquaver) stem down"
                },
                "note512thUp": {
                    "codepoint": 0xE1E3,
                    "description": "512th note (hemidemisemihemidemisemiquaver) stem up"
                },
                "note64thDown": {
                    "codepoint": 0xE1DE,
                    "description": "64th note (hemidemisemiquaver) stem down"
                },
                "note64thUp": {
                    "alternateCodepoint": 0x1D163,
                    "codepoint": 0xE1DD,
                    "description": "64th note (hemidemisemiquaver) stem up"
                },
                "note8thDown": {
                    "codepoint": 0xE1D8,
                    "description": "Eighth note (quaver) stem down"
                },
                "note8thUp": {
                    "alternateCodepoint": 0x1D160,
                    "codepoint": 0xE1D7,
                    "description": "Eighth note (quaver) stem up"
                },
                "noteABlack": {
                    "codepoint": 0xE197,
                    "description": "A (black note)"
                },
                "noteAFlatBlack": {
                    "codepoint": 0xE196,
                    "description": "A flat (black note)"
                },
                "noteAFlatHalf": {
                    "codepoint": 0xE17F,
                    "description": "A flat (half note)"
                },
                "noteAFlatWhole": {
                    "codepoint": 0xE168,
                    "description": "A flat (whole note)"
                },
                "noteAHalf": {
                    "codepoint": 0xE180,
                    "description": "A (half note)"
                },
                "noteASharpBlack": {
                    "codepoint": 0xE198,
                    "description": "A sharp (black note)"
                },
                "noteASharpHalf": {
                    "codepoint": 0xE181,
                    "description": "A sharp (half note)"
                },
                "noteASharpWhole": {
                    "codepoint": 0xE16A,
                    "description": "A sharp (whole note)"
                },
                "noteAWhole": {
                    "codepoint": 0xE169,
                    "description": "A (whole note)"
                },
                "noteBBlack": {
                    "codepoint": 0xE19A,
                    "description": "B (black note)"
                },
                "noteBFlatBlack": {
                    "codepoint": 0xE199,
                    "description": "B flat (black note)"
                },
                "noteBFlatHalf": {
                    "codepoint": 0xE182,
                    "description": "B flat (half note)"
                },
                "noteBFlatWhole": {
                    "codepoint": 0xE16B,
                    "description": "B flat (whole note)"
                },
                "noteBHalf": {
                    "codepoint": 0xE183,
                    "description": "B (half note)"
                },
                "noteBSharpBlack": {
                    "codepoint": 0xE19B,
                    "description": "B sharp (black note)"
                },
                "noteBSharpHalf": {
                    "codepoint": 0xE184,
                    "description": "B sharp (half note)"
                },
                "noteBSharpWhole": {
                    "codepoint": 0xE16D,
                    "description": "B sharp (whole note)"
                },
                "noteBWhole": {
                    "codepoint": 0xE16C,
                    "description": "B (whole note)"
                },
                "noteCBlack": {
                    "codepoint": 0xE19D,
                    "description": "C (black note)"
                },
                "noteCFlatBlack": {
                    "codepoint": 0xE19C,
                    "description": "C flat (black note)"
                },
                "noteCFlatHalf": {
                    "codepoint": 0xE185,
                    "description": "C flat (half note)"
                },
                "noteCFlatWhole": {
                    "codepoint": 0xE16E,
                    "description": "C flat (whole note)"
                },
                "noteCHalf": {
                    "codepoint": 0xE186,
                    "description": "C (half note)"
                },
                "noteCSharpBlack": {
                    "codepoint": 0xE19E,
                    "description": "C sharp (black note)"
                },
                "noteCSharpHalf": {
                    "codepoint": 0xE187,
                    "description": "C sharp (half note)"
                },
                "noteCSharpWhole": {
                    "codepoint": 0xE170,
                    "description": "C sharp (whole note)"
                },
                "noteCWhole": {
                    "codepoint": 0xE16F,
                    "description": "C (whole note)"
                },
                "noteDBlack": {
                    "codepoint": 0xE1A0,
                    "description": "D (black note)"
                },
                "noteDFlatBlack": {
                    "codepoint": 0xE19F,
                    "description": "D flat (black note)"
                },
                "noteDFlatHalf": {
                    "codepoint": 0xE188,
                    "description": "D flat (half note)"
                },
                "noteDFlatWhole": {
                    "codepoint": 0xE171,
                    "description": "D flat (whole note)"
                },
                "noteDHalf": {
                    "codepoint": 0xE189,
                    "description": "D (half note)"
                },
                "noteDSharpBlack": {
                    "codepoint": 0xE1A1,
                    "description": "D sharp (black note)"
                },
                "noteDSharpHalf": {
                    "codepoint": 0xE18A,
                    "description": "D sharp (half note)"
                },
                "noteDSharpWhole": {
                    "codepoint": 0xE173,
                    "description": "D sharp (whole note)"
                },
                "noteDWhole": {
                    "codepoint": 0xE172,
                    "description": "D (whole note)"
                },
                "noteDoBlack": {
                    "codepoint": 0xE160,
                    "description": "Do (black note)"
                },
                "noteDoHalf": {
                    "codepoint": 0xE158,
                    "description": "Do (half note)"
                },
                "noteDoWhole": {
                    "codepoint": 0xE150,
                    "description": "Do (whole note)"
                },
                "noteDoubleWhole": {
                    "alternateCodepoint": 0x1D15C,
                    "codepoint": 0xE1D0,
                    "description": "Double whole note (breve)"
                },
                "noteDoubleWholeSquare": {
                    "codepoint": 0xE1D1,
                    "description": "Double whole note (square)"
                },
                "noteEBlack": {
                    "codepoint": 0xE1A3,
                    "description": "E (black note)"
                },
                "noteEFlatBlack": {
                    "codepoint": 0xE1A2,
                    "description": "E flat (black note)"
                },
                "noteEFlatHalf": {
                    "codepoint": 0xE18B,
                    "description": "E flat (half note)"
                },
                "noteEFlatWhole": {
                    "codepoint": 0xE174,
                    "description": "E flat (whole note)"
                },
                "noteEHalf": {
                    "codepoint": 0xE18C,
                    "description": "E (half note)"
                },
                "noteESharpBlack": {
                    "codepoint": 0xE1A4,
                    "description": "E sharp (black note)"
                },
                "noteESharpHalf": {
                    "codepoint": 0xE18D,
                    "description": "E sharp (half note)"
                },
                "noteESharpWhole": {
                    "codepoint": 0xE176,
                    "description": "E sharp (whole note)"
                },
                "noteEWhole": {
                    "codepoint": 0xE175,
                    "description": "E (whole note)"
                },
                "noteEmptyBlack": {
                    "codepoint": 0xE1AF,
                    "description": "Empty black note"
                },
                "noteEmptyHalf": {
                    "codepoint": 0xE1AE,
                    "description": "Empty half note"
                },
                "noteEmptyWhole": {
                    "codepoint": 0xE1AD,
                    "description": "Empty whole note"
                },
                "noteFBlack": {
                    "codepoint": 0xE1A6,
                    "description": "F (black note)"
                },
                "noteFFlatBlack": {
                    "codepoint": 0xE1A5,
                    "description": "F flat (black note)"
                },
                "noteFFlatHalf": {
                    "codepoint": 0xE18E,
                    "description": "F flat (half note)"
                },
                "noteFFlatWhole": {
                    "codepoint": 0xE177,
                    "description": "F flat (whole note)"
                },
                "noteFHalf": {
                    "codepoint": 0xE18F,
                    "description": "F (half note)"
                },
                "noteFSharpBlack": {
                    "codepoint": 0xE1A7,
                    "description": "F sharp (black note)"
                },
                "noteFSharpHalf": {
                    "codepoint": 0xE190,
                    "description": "F sharp (half note)"
                },
                "noteFSharpWhole": {
                    "codepoint": 0xE179,
                    "description": "F sharp (whole note)"
                },
                "noteFWhole": {
                    "codepoint": 0xE178,
                    "description": "F (whole note)"
                },
                "noteFaBlack": {
                    "codepoint": 0xE163,
                    "description": "Fa (black note)"
                },
                "noteFaHalf": {
                    "codepoint": 0xE15B,
                    "description": "Fa (half note)"
                },
                "noteFaWhole": {
                    "codepoint": 0xE153,
                    "description": "Fa (whole note)"
                },
                "noteGBlack": {
                    "codepoint": 0xE1A9,
                    "description": "G (black note)"
                },
                "noteGFlatBlack": {
                    "codepoint": 0xE1A8,
                    "description": "G flat (black note)"
                },
                "noteGFlatHalf": {
                    "codepoint": 0xE191,
                    "description": "G flat (half note)"
                },
                "noteGFlatWhole": {
                    "codepoint": 0xE17A,
                    "description": "G flat (whole note)"
                },
                "noteGHalf": {
                    "codepoint": 0xE192,
                    "description": "G (half note)"
                },
                "noteGSharpBlack": {
                    "codepoint": 0xE1AA,
                    "description": "G sharp (black note)"
                },
                "noteGSharpHalf": {
                    "codepoint": 0xE193,
                    "description": "G sharp (half note)"
                },
                "noteGSharpWhole": {
                    "codepoint": 0xE17C,
                    "description": "G sharp (whole note)"
                },
                "noteGWhole": {
                    "codepoint": 0xE17B,
                    "description": "G (whole note)"
                },
                "noteHBlack": {
                    "codepoint": 0xE1AB,
                    "description": "H (black note)"
                },
                "noteHHalf": {
                    "codepoint": 0xE194,
                    "description": "H (half note)"
                },
                "noteHSharpBlack": {
                    "codepoint": 0xE1AC,
                    "description": "H sharp (black note)"
                },
                "noteHSharpHalf": {
                    "codepoint": 0xE195,
                    "description": "H sharp (half note)"
                },
                "noteHSharpWhole": {
                    "codepoint": 0xE17E,
                    "description": "H sharp (whole note)"
                },
                "noteHWhole": {
                    "codepoint": 0xE17D,
                    "description": "H (whole note)"
                },
                "noteHalfDown": {
                    "codepoint": 0xE1D4,
                    "description": "Half note (minim) stem down"
                },
                "noteHalfUp": {
                    "alternateCodepoint": 0x1D15E,
                    "codepoint": 0xE1D3,
                    "description": "Half note (minim) stem up"
                },
                "noteLaBlack": {
                    "codepoint": 0xE165,
                    "description": "La (black note)"
                },
                "noteLaHalf": {
                    "codepoint": 0xE15D,
                    "description": "La (half note)"
                },
                "noteLaWhole": {
                    "codepoint": 0xE155,
                    "description": "La (whole note)"
                },
                "noteMiBlack": {
                    "codepoint": 0xE162,
                    "description": "Mi (black note)"
                },
                "noteMiHalf": {
                    "codepoint": 0xE15A,
                    "description": "Mi (half note)"
                },
                "noteMiWhole": {
                    "codepoint": 0xE152,
                    "description": "Mi (whole note)"
                },
                "noteQuarterDown": {
                    "codepoint": 0xE1D6,
                    "description": "Quarter note (crotchet) stem down"
                },
                "noteQuarterUp": {
                    "alternateCodepoint": 0x1D15F,
                    "codepoint": 0xE1D5,
                    "description": "Quarter note (crotchet) stem up"
                },
                "noteReBlack": {
                    "codepoint": 0xE161,
                    "description": "Re (black note)"
                },
                "noteReHalf": {
                    "codepoint": 0xE159,
                    "description": "Re (half note)"
                },
                "noteReWhole": {
                    "codepoint": 0xE151,
                    "description": "Re (whole note)"
                },
                "noteShapeArrowheadLeftBlack": {
                    "codepoint": 0xE1C9,
                    "description": "Arrowhead left black (Funk 7-shape re)"
                },
                "noteShapeArrowheadLeftDoubleWhole": {
                    "codepoint": 0xECDC,
                    "description": "Arrowhead left double whole (Funk 7-shape re)"
                },
                "noteShapeArrowheadLeftWhite": {
                    "codepoint": 0xE1C8,
                    "description": "Arrowhead left white (Funk 7-shape re)"
                },
                "noteShapeDiamondBlack": {
                    "codepoint": 0xE1B9,
                    "description": "Diamond black (4-shape mi; 7-shape mi)"
                },
                "noteShapeDiamondDoubleWhole": {
                    "codepoint": 0xECD4,
                    "description": "Diamond double whole (4-shape mi; 7-shape mi)"
                },
                "noteShapeDiamondWhite": {
                    "codepoint": 0xE1B8,
                    "description": "Diamond white (4-shape mi; 7-shape mi)"
                },
                "noteShapeIsoscelesTriangleBlack": {
                    "codepoint": 0xE1C5,
                    "description": "Isosceles triangle black (Walker 7-shape ti)"
                },
                "noteShapeIsoscelesTriangleDoubleWhole": {
                    "codepoint": 0xECDA,
                    "description": "Isosceles triangle double whole (Walker 7-shape ti)"
                },
                "noteShapeIsoscelesTriangleWhite": {
                    "codepoint": 0xE1C4,
                    "description": "Isosceles triangle white (Walker 7-shape ti)"
                },
                "noteShapeKeystoneBlack": {
                    "codepoint": 0xE1C1,
                    "description": "Inverted keystone black (Walker 7-shape do)"
                },
                "noteShapeKeystoneDoubleWhole": {
                    "codepoint": 0xECD8,
                    "description": "Inverted keystone double whole (Walker 7-shape do)"
                },
                "noteShapeKeystoneWhite": {
                    "codepoint": 0xE1C0,
                    "description": "Inverted keystone white (Walker 7-shape do)"
                },
                "noteShapeMoonBlack": {
                    "codepoint": 0xE1BD,
                    "description": "Moon black (Aikin 7-shape re)"
                },
                "noteShapeMoonDoubleWhole": {
                    "codepoint": 0xECD6,
                    "description": "Moon double whole (Aikin 7-shape re)"
                },
                "noteShapeMoonLeftBlack": {
                    "codepoint": 0xE1C7,
                    "description": "Moon left black (Funk 7-shape do)"
                },
                "noteShapeMoonLeftDoubleWhole": {
                    "codepoint": 0xECDB,
                    "description": "Moon left double whole (Funk 7-shape do)"
                },
                "noteShapeMoonLeftWhite": {
                    "codepoint": 0xE1C6,
                    "description": "Moon left white (Funk 7-shape do)"
                },
                "noteShapeMoonWhite": {
                    "codepoint": 0xE1BC,
                    "description": "Moon white (Aikin 7-shape re)"
                },
                "noteShapeQuarterMoonBlack": {
                    "codepoint": 0xE1C3,
                    "description": "Quarter moon black (Walker 7-shape re)"
                },
                "noteShapeQuarterMoonDoubleWhole": {
                    "codepoint": 0xECD9,
                    "description": "Quarter moon double whole (Walker 7-shape re)"
                },
                "noteShapeQuarterMoonWhite": {
                    "codepoint": 0xE1C2,
                    "description": "Quarter moon white (Walker 7-shape re)"
                },
                "noteShapeRoundBlack": {
                    "codepoint": 0xE1B1,
                    "description": "Round black (4-shape sol; 7-shape so)"
                },
                "noteShapeRoundDoubleWhole": {
                    "codepoint": 0xECD0,
                    "description": "Round double whole (4-shape sol; 7-shape so)"
                },
                "noteShapeRoundWhite": {
                    "codepoint": 0xE1B0,
                    "description": "Round white (4-shape sol; 7-shape so)"
                },
                "noteShapeSquareBlack": {
                    "codepoint": 0xE1B3,
                    "description": "Square black (4-shape la; Aikin 7-shape la)"
                },
                "noteShapeSquareDoubleWhole": {
                    "codepoint": 0xECD1,
                    "description": "Square double whole (4-shape la; Aikin 7-shape la)"
                },
                "noteShapeSquareWhite": {
                    "codepoint": 0xE1B2,
                    "description": "Square white (4-shape la; Aikin 7-shape la)"
                },
                "noteShapeTriangleLeftBlack": {
                    "codepoint": 0xE1B7,
                    "description": "Triangle left black (stem up; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleLeftDoubleWhole": {
                    "codepoint": 0xECD3,
                    "description": "Triangle left double whole (stem up; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleLeftWhite": {
                    "codepoint": 0xE1B6,
                    "description": "Triangle left white (stem up; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleRightBlack": {
                    "codepoint": 0xE1B5,
                    "description": "Triangle right black (stem down; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleRightDoubleWhole": {
                    "codepoint": 0xECD2,
                    "description": "Triangle right double whole (stem down; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleRightWhite": {
                    "codepoint": 0xE1B4,
                    "description": "Triangle right white (stem down; 4-shape fa; 7-shape fa)"
                },
                "noteShapeTriangleRoundBlack": {
                    "codepoint": 0xE1BF,
                    "description": "Triangle-round black (Aikin 7-shape ti)"
                },
                "noteShapeTriangleRoundDoubleWhole": {
                    "codepoint": 0xECD7,
                    "description": "Triangle-round white (Aikin 7-shape ti)"
                },
                "noteShapeTriangleRoundLeftBlack": {
                    "codepoint": 0xE1CB,
                    "description": "Triangle-round left black (Funk 7-shape ti)"
                },
                "noteShapeTriangleRoundLeftDoubleWhole": {
                    "codepoint": 0xECDD,
                    "description": "Triangle-round left double whole (Funk 7-shape ti)"
                },
                "noteShapeTriangleRoundLeftWhite": {
                    "codepoint": 0xE1CA,
                    "description": "Triangle-round left white (Funk 7-shape ti)"
                },
                "noteShapeTriangleRoundWhite": {
                    "codepoint": 0xE1BE,
                    "description": "Triangle-round white (Aikin 7-shape ti)"
                },
                "noteShapeTriangleUpBlack": {
                    "codepoint": 0xE1BB,
                    "description": "Triangle up black (Aikin 7-shape do)"
                },
                "noteShapeTriangleUpDoubleWhole": {
                    "codepoint": 0xECD5,
                    "description": "Triangle up double whole (Aikin 7-shape do)"
                },
                "noteShapeTriangleUpWhite": {
                    "codepoint": 0xE1BA,
                    "description": "Triangle up white (Aikin 7-shape do)"
                },
                "noteSiBlack": {
                    "codepoint": 0xE167,
                    "description": "Si (black note)"
                },
                "noteSiHalf": {
                    "codepoint": 0xE15F,
                    "description": "Si (half note)"
                },
                "noteSiWhole": {
                    "codepoint": 0xE157,
                    "description": "Si (whole note)"
                },
                "noteSoBlack": {
                    "codepoint": 0xE164,
                    "description": "So (black note)"
                },
                "noteSoHalf": {
                    "codepoint": 0xE15C,
                    "description": "So (half note)"
                },
                "noteSoWhole": {
                    "codepoint": 0xE154,
                    "description": "So (whole note)"
                },
                "noteTiBlack": {
                    "codepoint": 0xE166,
                    "description": "Ti (black note)"
                },
                "noteTiHalf": {
                    "codepoint": 0xE15E,
                    "description": "Ti (half note)"
                },
                "noteTiWhole": {
                    "codepoint": 0xE156,
                    "description": "Ti (whole note)"
                },
                "noteWhole": {
                    "alternateCodepoint": 0x1D15D,
                    "codepoint": 0xE1D2,
                    "description": "Whole note (semibreve)"
                },
                "noteheadBlack": {
                    "alternateCodepoint": 0x1D158,
                    "codepoint": 0xE0A4,
                    "description": "Black notehead"
                },
                "noteheadCircleSlash": {
                    "codepoint": 0xE0F7,
                    "description": "Circle slash notehead"
                },
                "noteheadCircleX": {
                    "alternateCodepoint": 0x1D145,
                    "codepoint": 0xE0B3,
                    "description": "Circle X notehead"
                },
                "noteheadCircleXDoubleWhole": {
                    "codepoint": 0xE0B0,
                    "description": "Circle X double whole"
                },
                "noteheadCircleXHalf": {
                    "codepoint": 0xE0B2,
                    "description": "Circle X half"
                },
                "noteheadCircleXWhole": {
                    "codepoint": 0xE0B1,
                    "description": "Circle X whole"
                },
                "noteheadCircledBlack": {
                    "codepoint": 0xE0E4,
                    "description": "Circled black notehead"
                },
                "noteheadCircledBlackLarge": {
                    "codepoint": 0xE0E8,
                    "description": "Black notehead in large circle"
                },
                "noteheadCircledDoubleWhole": {
                    "codepoint": 0xE0E7,
                    "description": "Circled double whole notehead"
                },
                "noteheadCircledDoubleWholeLarge": {
                    "codepoint": 0xE0EB,
                    "description": "Double whole notehead in large circle"
                },
                "noteheadCircledHalf": {
                    "codepoint": 0xE0E5,
                    "description": "Circled half notehead"
                },
                "noteheadCircledHalfLarge": {
                    "codepoint": 0xE0E9,
                    "description": "Half notehead in large circle"
                },
                "noteheadCircledWhole": {
                    "codepoint": 0xE0E6,
                    "description": "Circled whole notehead"
                },
                "noteheadCircledWholeLarge": {
                    "codepoint": 0xE0EA,
                    "description": "Whole notehead in large circle"
                },
                "noteheadCircledXLarge": {
                    "codepoint": 0xE0EC,
                    "description": "Cross notehead in large circle"
                },
                "noteheadClusterDoubleWhole2nd": {
                    "codepoint": 0xE124,
                    "description": "Double whole note cluster, 2nd"
                },
                "noteheadClusterDoubleWhole3rd": {
                    "codepoint": 0xE128,
                    "description": "Double whole note cluster, 3rd"
                },
                "noteheadClusterDoubleWholeBottom": {
                    "codepoint": 0xE12E,
                    "description": "Combining double whole note cluster, bottom"
                },
                "noteheadClusterDoubleWholeMiddle": {
                    "codepoint": 0xE12D,
                    "description": "Combining double whole note cluster, middle"
                },
                "noteheadClusterDoubleWholeTop": {
                    "codepoint": 0xE12C,
                    "description": "Combining double whole note cluster, top"
                },
                "noteheadClusterHalf2nd": {
                    "codepoint": 0xE126,
                    "description": "Half note cluster, 2nd"
                },
                "noteheadClusterHalf3rd": {
                    "codepoint": 0xE12A,
                    "description": "Half note cluster, 3rd"
                },
                "noteheadClusterHalfBottom": {
                    "codepoint": 0xE134,
                    "description": "Combining half note cluster, bottom"
                },
                "noteheadClusterHalfMiddle": {
                    "codepoint": 0xE133,
                    "description": "Combining half note cluster, middle"
                },
                "noteheadClusterHalfTop": {
                    "codepoint": 0xE132,
                    "description": "Combining half note cluster, top"
                },
                "noteheadClusterQuarter2nd": {
                    "codepoint": 0xE127,
                    "description": "Quarter note cluster, 2nd"
                },
                "noteheadClusterQuarter3rd": {
                    "codepoint": 0xE12B,
                    "description": "Quarter note cluster, 3rd"
                },
                "noteheadClusterQuarterBottom": {
                    "codepoint": 0xE137,
                    "description": "Combining quarter note cluster, bottom"
                },
                "noteheadClusterQuarterMiddle": {
                    "codepoint": 0xE136,
                    "description": "Combining quarter note cluster, middle"
                },
                "noteheadClusterQuarterTop": {
                    "codepoint": 0xE135,
                    "description": "Combining quarter note cluster, top"
                },
                "noteheadClusterRoundBlack": {
                    "codepoint": 0xE123,
                    "description": "Cluster notehead black (round)"
                },
                "noteheadClusterRoundWhite": {
                    "codepoint": 0xE122,
                    "description": "Cluster notehead white (round)"
                },
                "noteheadClusterSquareBlack": {
                    "alternateCodepoint": 0x1D15B,
                    "codepoint": 0xE121,
                    "description": "Cluster notehead black (square)"
                },
                "noteheadClusterSquareWhite": {
                    "alternateCodepoint": 0x1D15A,
                    "codepoint": 0xE120,
                    "description": "Cluster notehead white (square)"
                },
                "noteheadClusterWhole2nd": {
                    "codepoint": 0xE125,
                    "description": "Whole note cluster, 2nd"
                },
                "noteheadClusterWhole3rd": {
                    "codepoint": 0xE129,
                    "description": "Whole note cluster, 3rd"
                },
                "noteheadClusterWholeBottom": {
                    "codepoint": 0xE131,
                    "description": "Combining whole note cluster, bottom"
                },
                "noteheadClusterWholeMiddle": {
                    "codepoint": 0xE130,
                    "description": "Combining whole note cluster, middle"
                },
                "noteheadClusterWholeTop": {
                    "codepoint": 0xE12F,
                    "description": "Combining whole note cluster, top"
                },
                "noteheadDiamondBlack": {
                    "codepoint": 0xE0DB,
                    "description": "Diamond black notehead"
                },
                "noteheadDiamondBlackOld": {
                    "codepoint": 0xE0E2,
                    "description": "Diamond black notehead (old)"
                },
                "noteheadDiamondBlackWide": {
                    "codepoint": 0xE0DC,
                    "description": "Diamond black notehead (wide)"
                },
                "noteheadDiamondClusterBlack2nd": {
                    "codepoint": 0xE139,
                    "description": "Black diamond cluster, 2nd"
                },
                "noteheadDiamondClusterBlack3rd": {
                    "codepoint": 0xE13B,
                    "description": "Black diamond cluster, 3rd"
                },
                "noteheadDiamondClusterBlackBottom": {
                    "codepoint": 0xE141,
                    "description": "Combining black diamond cluster, bottom"
                },
                "noteheadDiamondClusterBlackMiddle": {
                    "codepoint": 0xE140,
                    "description": "Combining black diamond cluster, middle"
                },
                "noteheadDiamondClusterBlackTop": {
                    "codepoint": 0xE13F,
                    "description": "Combining black diamond cluster, top"
                },
                "noteheadDiamondClusterWhite2nd": {
                    "codepoint": 0xE138,
                    "description": "White diamond cluster, 2nd"
                },
                "noteheadDiamondClusterWhite3rd": {
                    "codepoint": 0xE13A,
                    "description": "White diamond cluster, 3rd"
                },
                "noteheadDiamondClusterWhiteBottom": {
                    "codepoint": 0xE13E,
                    "description": "Combining white diamond cluster, bottom"
                },
                "noteheadDiamondClusterWhiteMiddle": {
                    "codepoint": 0xE13D,
                    "description": "Combining white diamond cluster, middle"
                },
                "noteheadDiamondClusterWhiteTop": {
                    "codepoint": 0xE13C,
                    "description": "Combining white diamond cluster, top"
                },
                "noteheadDiamondDoubleWhole": {
                    "codepoint": 0xE0D7,
                    "description": "Diamond double whole notehead"
                },
                "noteheadDiamondDoubleWholeOld": {
                    "codepoint": 0xE0DF,
                    "description": "Diamond double whole notehead (old)"
                },
                "noteheadDiamondHalf": {
                    "codepoint": 0xE0D9,
                    "description": "Diamond half notehead"
                },
                "noteheadDiamondHalfFilled": {
                    "codepoint": 0xE0E3,
                    "description": "Half-filled diamond notehead"
                },
                "noteheadDiamondHalfOld": {
                    "codepoint": 0xE0E1,
                    "description": "Diamond half notehead (old)"
                },
                "noteheadDiamondHalfWide": {
                    "codepoint": 0xE0DA,
                    "description": "Diamond half notehead (wide)"
                },
                "noteheadDiamondOpen": {
                    "codepoint": 0xE0FC,
                    "description": "Open diamond notehead"
                },
                "noteheadDiamondWhite": {
                    "codepoint": 0xE0DD,
                    "description": "Diamond white notehead"
                },
                "noteheadDiamondWhiteWide": {
                    "codepoint": 0xE0DE,
                    "description": "Diamond white notehead (wide)"
                },
                "noteheadDiamondWhole": {
                    "codepoint": 0xE0D8,
                    "description": "Diamond whole notehead"
                },
                "noteheadDiamondWholeOld": {
                    "codepoint": 0xE0E0,
                    "description": "Diamond whole notehead (old)"
                },
                "noteheadDoubleWhole": {
                    "codepoint": 0xE0A0,
                    "description": "Double whole (breve) notehead"
                },
                "noteheadDoubleWholeSquare": {
                    "codepoint": 0xE0A1,
                    "description": "Double whole (breve) notehead (square)"
                },
                "noteheadDoubleWholeWithX": {
                    "codepoint": 0xE0B4,
                    "description": "Double whole notehead with X"
                },
                "noteheadHalf": {
                    "alternateCodepoint": 0x1D157,
                    "codepoint": 0xE0A3,
                    "description": "Half (minim) notehead"
                },
                "noteheadHalfFilled": {
                    "codepoint": 0xE0FB,
                    "description": "Filled half (minim) notehead"
                },
                "noteheadHalfWithX": {
                    "codepoint": 0xE0B6,
                    "description": "Half notehead with X"
                },
                "noteheadHeavyX": {
                    "codepoint": 0xE0F8,
                    "description": "Heavy X notehead"
                },
                "noteheadHeavyXHat": {
                    "codepoint": 0xE0F9,
                    "description": "Heavy X with hat notehead"
                },
                "noteheadLargeArrowDownBlack": {
                    "codepoint": 0xE0F4,
                    "description": "Large arrow down (lowest pitch) black notehead"
                },
                "noteheadLargeArrowDownDoubleWhole": {
                    "codepoint": 0xE0F1,
                    "description": "Large arrow down (lowest pitch) double whole notehead"
                },
                "noteheadLargeArrowDownHalf": {
                    "codepoint": 0xE0F3,
                    "description": "Large arrow down (lowest pitch) half notehead"
                },
                "noteheadLargeArrowDownWhole": {
                    "codepoint": 0xE0F2,
                    "description": "Large arrow down (lowest pitch) whole notehead"
                },
                "noteheadLargeArrowUpBlack": {
                    "codepoint": 0xE0F0,
                    "description": "Large arrow up (highest pitch) black notehead"
                },
                "noteheadLargeArrowUpDoubleWhole": {
                    "codepoint": 0xE0ED,
                    "description": "Large arrow up (highest pitch) double whole notehead"
                },
                "noteheadLargeArrowUpHalf": {
                    "codepoint": 0xE0EF,
                    "description": "Large arrow up (highest pitch) half notehead"
                },
                "noteheadLargeArrowUpWhole": {
                    "codepoint": 0xE0EE,
                    "description": "Large arrow up (highest pitch) whole notehead"
                },
                "noteheadMoonBlack": {
                    "alternateCodepoint": 0x1D153,
                    "codepoint": 0xE0CB,
                    "description": "Moon notehead black"
                },
                "noteheadMoonWhite": {
                    "alternateCodepoint": 0x1D152,
                    "codepoint": 0xE0CA,
                    "description": "Moon notehead white"
                },
                "noteheadNull": {
                    "alternateCodepoint": 0x1D159,
                    "codepoint": 0xE0A5,
                    "description": "Null notehead"
                },
                "noteheadParenthesis": {
                    "alternateCodepoint": 0x1D156,
                    "codepoint": 0xE0CE,
                    "description": "Parenthesis notehead"
                },
                "noteheadParenthesisLeft": {
                    "codepoint": 0xE0F5,
                    "description": "Opening parenthesis"
                },
                "noteheadParenthesisRight": {
                    "codepoint": 0xE0F6,
                    "description": "Closing parenthesis"
                },
                "noteheadPlusBlack": {
                    "alternateCodepoint": 0x1D144,
                    "codepoint": 0xE0AF,
                    "description": "Plus notehead black"
                },
                "noteheadPlusDoubleWhole": {
                    "codepoint": 0xE0AC,
                    "description": "Plus notehead double whole"
                },
                "noteheadPlusHalf": {
                    "codepoint": 0xE0AE,
                    "description": "Plus notehead half"
                },
                "noteheadPlusWhole": {
                    "codepoint": 0xE0AD,
                    "description": "Plus notehead whole"
                },
                "noteheadRectangularClusterBlackBottom": {
                    "codepoint": 0xE144,
                    "description": "Combining black rectangular cluster, bottom"
                },
                "noteheadRectangularClusterBlackMiddle": {
                    "codepoint": 0xE143,
                    "description": "Combining black rectangular cluster, middle"
                },
                "noteheadRectangularClusterBlackTop": {
                    "codepoint": 0xE142,
                    "description": "Combining black rectangular cluster, top"
                },
                "noteheadRectangularClusterWhiteBottom": {
                    "codepoint": 0xE147,
                    "description": "Combining white rectangular cluster, bottom"
                },
                "noteheadRectangularClusterWhiteMiddle": {
                    "codepoint": 0xE146,
                    "description": "Combining white rectangular cluster, middle"
                },
                "noteheadRectangularClusterWhiteTop": {
                    "codepoint": 0xE145,
                    "description": "Combining white rectangular cluster, top"
                },
                "noteheadRoundBlack": {
                    "codepoint": 0xE113,
                    "description": "Round black notehead"
                },
                "noteheadRoundBlackDoubleSlashed": {
                    "codepoint": 0xE11C,
                    "description": "Round black notehead, double slashed"
                },
                "noteheadRoundBlackLarge": {
                    "codepoint": 0xE110,
                    "description": "Large round black notehead"
                },
                "noteheadRoundBlackSlashed": {
                    "codepoint": 0xE118,
                    "description": "Round black notehead, slashed"
                },
                "noteheadRoundBlackSlashedLarge": {
                    "codepoint": 0xE116,
                    "description": "Large round black notehead, slashed"
                },
                "noteheadRoundWhite": {
                    "codepoint": 0xE114,
                    "description": "Round white notehead"
                },
                "noteheadRoundWhiteDoubleSlashed": {
                    "codepoint": 0xE11D,
                    "description": "Round white notehead, double slashed"
                },
                "noteheadRoundWhiteLarge": {
                    "codepoint": 0xE111,
                    "description": "Large round white notehead"
                },
                "noteheadRoundWhiteSlashed": {
                    "codepoint": 0xE119,
                    "description": "Round white notehead, slashed"
                },
                "noteheadRoundWhiteSlashedLarge": {
                    "codepoint": 0xE117,
                    "description": "Large round white notehead, slashed"
                },
                "noteheadRoundWhiteWithDot": {
                    "codepoint": 0xE115,
                    "description": "Round white notehead with dot"
                },
                "noteheadRoundWhiteWithDotLarge": {
                    "codepoint": 0xE112,
                    "description": "Large round white notehead with dot"
                },
                "noteheadSlashDiamondWhite": {
                    "codepoint": 0xE104,
                    "description": "Large white diamond"
                },
                "noteheadSlashHorizontalEnds": {
                    "alternateCodepoint": 0x1D10D,
                    "codepoint": 0xE101,
                    "description": "Slash with horizontal ends"
                },
                "noteheadSlashHorizontalEndsMuted": {
                    "codepoint": 0xE108,
                    "description": "Muted slash with horizontal ends"
                },
                "noteheadSlashVerticalEnds": {
                    "codepoint": 0xE100,
                    "description": "Slash with vertical ends"
                },
                "noteheadSlashVerticalEndsMuted": {
                    "codepoint": 0xE107,
                    "description": "Muted slash with vertical ends"
                },
                "noteheadSlashVerticalEndsSmall": {
                    "codepoint": 0xE105,
                    "description": "Small slash with vertical ends"
                },
                "noteheadSlashWhiteDoubleWhole": {
                    "codepoint": 0xE10A,
                    "description": "White slash double whole"
                },
                "noteheadSlashWhiteHalf": {
                    "codepoint": 0xE103,
                    "description": "White slash half"
                },
                "noteheadSlashWhiteMuted": {
                    "codepoint": 0xE109,
                    "description": "Muted white slash"
                },
                "noteheadSlashWhiteWhole": {
                    "codepoint": 0xE102,
                    "description": "White slash whole"
                },
                "noteheadSlashX": {
                    "codepoint": 0xE106,
                    "description": "Large X notehead"
                },
                "noteheadSlashedBlack1": {
                    "codepoint": 0xE0CF,
                    "description": "Slashed black notehead (bottom left to top right)"
                },
                "noteheadSlashedBlack2": {
                    "codepoint": 0xE0D0,
                    "description": "Slashed black notehead (top left to bottom right)"
                },
                "noteheadSlashedDoubleWhole1": {
                    "codepoint": 0xE0D5,
                    "description": "Slashed double whole notehead (bottom left to top right)"
                },
                "noteheadSlashedDoubleWhole2": {
                    "codepoint": 0xE0D6,
                    "description": "Slashed double whole notehead (top left to bottom right)"
                },
                "noteheadSlashedHalf1": {
                    "codepoint": 0xE0D1,
                    "description": "Slashed half notehead (bottom left to top right)"
                },
                "noteheadSlashedHalf2": {
                    "codepoint": 0xE0D2,
                    "description": "Slashed half notehead (top left to bottom right)"
                },
                "noteheadSlashedWhole1": {
                    "codepoint": 0xE0D3,
                    "description": "Slashed whole notehead (bottom left to top right)"
                },
                "noteheadSlashedWhole2": {
                    "codepoint": 0xE0D4,
                    "description": "Slashed whole notehead (top left to bottom right)"
                },
                "noteheadSquareBlack": {
                    "alternateCodepoint": 0x1D147,
                    "codepoint": 0xE0B9,
                    "description": "Square notehead black"
                },
                "noteheadSquareBlackLarge": {
                    "codepoint": 0xE11A,
                    "description": "Large square black notehead"
                },
                "noteheadSquareBlackWhite": {
                    "codepoint": 0xE11B,
                    "description": "Large square white notehead"
                },
                "noteheadSquareWhite": {
                    "alternateCodepoint": 0x1D146,
                    "codepoint": 0xE0B8,
                    "description": "Square notehead white"
                },
                "noteheadTriangleDownBlack": {
                    "alternateCodepoint": 0x1D14F,
                    "codepoint": 0xE0C7,
                    "description": "Triangle notehead down black"
                },
                "noteheadTriangleDownDoubleWhole": {
                    "codepoint": 0xE0C3,
                    "description": "Triangle notehead down double whole"
                },
                "noteheadTriangleDownHalf": {
                    "codepoint": 0xE0C5,
                    "description": "Triangle notehead down half"
                },
                "noteheadTriangleDownWhite": {
                    "alternateCodepoint": 0x1D14E,
                    "codepoint": 0xE0C6,
                    "description": "Triangle notehead down white"
                },
                "noteheadTriangleDownWhole": {
                    "codepoint": 0xE0C4,
                    "description": "Triangle notehead down whole"
                },
                "noteheadTriangleLeftBlack": {
                    "alternateCodepoint": 0x1D14B,
                    "codepoint": 0xE0C0,
                    "description": "Triangle notehead left black"
                },
                "noteheadTriangleLeftWhite": {
                    "alternateCodepoint": 0x1D14A,
                    "codepoint": 0xE0BF,
                    "description": "Triangle notehead left white"
                },
                "noteheadTriangleRightBlack": {
                    "alternateCodepoint": 0x1D14D,
                    "codepoint": 0xE0C2,
                    "description": "Triangle notehead right black"
                },
                "noteheadTriangleRightWhite": {
                    "alternateCodepoint": 0x1D14C,
                    "codepoint": 0xE0C1,
                    "description": "Triangle notehead right white"
                },
                "noteheadTriangleRoundDownBlack": {
                    "alternateCodepoint": 0x1D155,
                    "codepoint": 0xE0CD,
                    "description": "Triangle-round notehead down black"
                },
                "noteheadTriangleRoundDownWhite": {
                    "alternateCodepoint": 0x1D154,
                    "codepoint": 0xE0CC,
                    "description": "Triangle-round notehead down white"
                },
                "noteheadTriangleUpBlack": {
                    "alternateCodepoint": 0x1D149,
                    "codepoint": 0xE0BE,
                    "description": "Triangle notehead up black"
                },
                "noteheadTriangleUpDoubleWhole": {
                    "codepoint": 0xE0BA,
                    "description": "Triangle notehead up double whole"
                },
                "noteheadTriangleUpHalf": {
                    "codepoint": 0xE0BC,
                    "description": "Triangle notehead up half"
                },
                "noteheadTriangleUpRightBlack": {
                    "alternateCodepoint": 0x1D151,
                    "codepoint": 0xE0C9,
                    "description": "Triangle notehead up right black"
                },
                "noteheadTriangleUpRightWhite": {
                    "alternateCodepoint": 0x1D150,
                    "codepoint": 0xE0C8,
                    "description": "Triangle notehead up right white"
                },
                "noteheadTriangleUpWhite": {
                    "alternateCodepoint": 0x1D148,
                    "codepoint": 0xE0BD,
                    "description": "Triangle notehead up white"
                },
                "noteheadTriangleUpWhole": {
                    "codepoint": 0xE0BB,
                    "description": "Triangle notehead up whole"
                },
                "noteheadVoidWithX": {
                    "codepoint": 0xE0B7,
                    "description": "Void notehead with X"
                },
                "noteheadWhole": {
                    "codepoint": 0xE0A2,
                    "description": "Whole (semibreve) notehead"
                },
                "noteheadWholeFilled": {
                    "codepoint": 0xE0FA,
                    "description": "Filled whole (semibreve) notehead"
                },
                "noteheadWholeWithX": {
                    "codepoint": 0xE0B5,
                    "description": "Whole notehead with X"
                },
                "noteheadXBlack": {
                    "alternateCodepoint": 0x1D143,
                    "codepoint": 0xE0A9,
                    "description": "X notehead black"
                },
                "noteheadXDoubleWhole": {
                    "codepoint": 0xE0A6,
                    "description": "X notehead double whole"
                },
                "noteheadXHalf": {
                    "codepoint": 0xE0A8,
                    "description": "X notehead half"
                },
                "noteheadXOrnate": {
                    "codepoint": 0xE0AA,
                    "description": "Ornate X notehead"
                },
                "noteheadXOrnateEllipse": {
                    "codepoint": 0xE0AB,
                    "description": "Ornate X notehead in ellipse"
                },
                "noteheadXWhole": {
                    "codepoint": 0xE0A7,
                    "description": "X notehead whole"
                },
                "octaveBaselineA": {
                    "codepoint": 0xEC91,
                    "description": "a (baseline)"
                },
                "octaveBaselineB": {
                    "codepoint": 0xEC93,
                    "description": "b (baseline)"
                },
                "octaveBaselineM": {
                    "codepoint": 0xEC95,
                    "description": "m (baseline)"
                },
                "octaveBaselineV": {
                    "codepoint": 0xEC97,
                    "description": "v (baseline)"
                },
                "octaveBassa": {
                    "codepoint": 0xE51F,
                    "description": "Bassa"
                },
                "octaveLoco": {
                    "codepoint": 0xEC90,
                    "description": "Loco"
                },
                "octaveParensLeft": {
                    "codepoint": 0xE51A,
                    "description": "Left parenthesis for octave signs"
                },
                "octaveParensRight": {
                    "codepoint": 0xE51B,
                    "description": "Right parenthesis for octave signs"
                },
                "octaveSuperscriptA": {
                    "codepoint": 0xEC92,
                    "description": "a (superscript)"
                },
                "octaveSuperscriptB": {
                    "codepoint": 0xEC94,
                    "description": "b (superscript)"
                },
                "octaveSuperscriptM": {
                    "codepoint": 0xEC96,
                    "description": "m (superscript)"
                },
                "octaveSuperscriptV": {
                    "codepoint": 0xEC98,
                    "description": "v (superscript)"
                },
                "ornamentBottomLeftConcaveStroke": {
                    "codepoint": 0xE59A,
                    "description": "Ornament bottom left concave stroke"
                },
                "ornamentBottomLeftConcaveStrokeLarge": {
                    "alternateCodepoint": 0x1D1A1,
                    "codepoint": 0xE59B,
                    "description": "Ornament bottom left concave stroke, large"
                },
                "ornamentBottomLeftConvexStroke": {
                    "codepoint": 0xE59C,
                    "description": "Ornament bottom left convex stroke"
                },
                "ornamentBottomRightConcaveStroke": {
                    "alternateCodepoint": 0x1D19F,
                    "codepoint": 0xE5A7,
                    "description": "Ornament bottom right concave stroke"
                },
                "ornamentBottomRightConvexStroke": {
                    "codepoint": 0xE5A8,
                    "description": "Ornament bottom right convex stroke"
                },
                "ornamentComma": {
                    "codepoint": 0xE581,
                    "description": "Comma"
                },
                "ornamentDoubleObliqueLinesAfterNote": {
                    "codepoint": 0xE57E,
                    "description": "Double oblique straight lines NW-SE"
                },
                "ornamentDoubleObliqueLinesBeforeNote": {
                    "codepoint": 0xE57D,
                    "description": "Double oblique straight lines SW-NE"
                },
                "ornamentDownCurve": {
                    "codepoint": 0xE578,
                    "description": "Curve below"
                },
                "ornamentHaydn": {
                    "codepoint": 0xE56F,
                    "description": "Haydn ornament"
                },
                "ornamentHighLeftConcaveStroke": {
                    "codepoint": 0xE592,
                    "description": "Ornament high left concave stroke"
                },
                "ornamentHighLeftConvexStroke": {
                    "alternateCodepoint": 0x1D1A2,
                    "codepoint": 0xE593,
                    "description": "Ornament high left convex stroke"
                },
                "ornamentHighRightConcaveStroke": {
                    "codepoint": 0xE5A2,
                    "description": "Ornament high right concave stroke"
                },
                "ornamentHighRightConvexStroke": {
                    "codepoint": 0xE5A3,
                    "description": "Ornament high right convex stroke"
                },
                "ornamentHookAfterNote": {
                    "codepoint": 0xE576,
                    "description": "Hook after note"
                },
                "ornamentHookBeforeNote": {
                    "codepoint": 0xE575,
                    "description": "Hook before note"
                },
                "ornamentLeftFacingHalfCircle": {
                    "codepoint": 0xE572,
                    "description": "Left-facing half circle"
                },
                "ornamentLeftFacingHook": {
                    "codepoint": 0xE574,
                    "description": "Left-facing hook"
                },
                "ornamentLeftPlus": {
                    "codepoint": 0xE597,
                    "description": "Ornament left +"
                },
                "ornamentLeftShakeT": {
                    "codepoint": 0xE596,
                    "description": "Ornament left shake t"
                },
                "ornamentLeftVerticalStroke": {
                    "alternateCodepoint": 0x1D19B,
                    "codepoint": 0xE594,
                    "description": "Ornament left vertical stroke"
                },
                "ornamentLeftVerticalStrokeWithCross": {
                    "codepoint": 0xE595,
                    "description": "Ornament left vertical stroke with cross (+)"
                },
                "ornamentLowLeftConcaveStroke": {
                    "codepoint": 0xE598,
                    "description": "Ornament low left concave stroke"
                },
                "ornamentLowLeftConvexStroke": {
                    "alternateCodepoint": 0x1D1A4,
                    "codepoint": 0xE599,
                    "description": "Ornament low left convex stroke"
                },
                "ornamentLowRightConcaveStroke": {
                    "alternateCodepoint": 0x1D1A3,
                    "codepoint": 0xE5A5,
                    "description": "Ornament low right concave stroke"
                },
                "ornamentLowRightConvexStroke": {
                    "codepoint": 0xE5A6,
                    "description": "Ornament low right convex stroke"
                },
                "ornamentMiddleVerticalStroke": {
                    "alternateCodepoint": 0x1D1A0,
                    "codepoint": 0xE59F,
                    "description": "Ornament middle vertical stroke"
                },
                "ornamentMordent": {
                    "codepoint": 0xE56C,
                    "description": "Mordent"
                },
                "ornamentMordentInverted": {
                    "codepoint": 0xE56D,
                    "description": "Inverted mordent"
                },
                "ornamentObliqueLineAfterNote": {
                    "codepoint": 0xE57C,
                    "description": "Oblique straight line NW-SE"
                },
                "ornamentObliqueLineBeforeNote": {
                    "codepoint": 0xE57B,
                    "description": "Oblique straight line SW-NE"
                },
                "ornamentObliqueLineHorizAfterNote": {
                    "codepoint": 0xE580,
                    "description": "Oblique straight line tilted NW-SE"
                },
                "ornamentObliqueLineHorizBeforeNote": {
                    "codepoint": 0xE57F,
                    "description": "Oblique straight line tilted SW-NE"
                },
                "ornamentOriscus": {
                    "codepoint": 0xEA21,
                    "description": "Oriscus"
                },
                "ornamentPinceCouperin": {
                    "codepoint": 0xE588,
                    "description": "Pinc\u00e9 (Couperin)"
                },
                "ornamentPortDeVoixV": {
                    "codepoint": 0xE570,
                    "description": "Port de voix"
                },
                "ornamentPrecompAppoggTrill": {
                    "codepoint": 0xE5B2,
                    "description": "Supported appoggiatura trill"
                },
                "ornamentPrecompAppoggTrillSuffix": {
                    "codepoint": 0xE5B3,
                    "description": "Supported appoggiatura trill with two-note suffix"
                },
                "ornamentPrecompCadence": {
                    "codepoint": 0xE5BE,
                    "description": "Cadence"
                },
                "ornamentPrecompCadenceUpperPrefix": {
                    "codepoint": 0xE5C1,
                    "description": "Cadence with upper prefix"
                },
                "ornamentPrecompCadenceUpperPrefixTurn": {
                    "codepoint": 0xE5C2,
                    "description": "Cadence with upper prefix and turn"
                },
                "ornamentPrecompCadenceWithTurn": {
                    "codepoint": 0xE5BF,
                    "description": "Cadence with turn"
                },
                "ornamentPrecompDescendingSlide": {
                    "codepoint": 0xE5B1,
                    "description": "Descending slide"
                },
                "ornamentPrecompDoubleCadenceLowerPrefix": {
                    "codepoint": 0xE5C0,
                    "description": "Double cadence with lower prefix"
                },
                "ornamentPrecompDoubleCadenceUpperPrefix": {
                    "codepoint": 0xE5C3,
                    "description": "Double cadence with upper prefix"
                },
                "ornamentPrecompDoubleCadenceUpperPrefixTurn": {
                    "codepoint": 0xE5C4,
                    "description": "Double cadence with upper prefix and turn"
                },
                "ornamentPrecompInvertedMordentUpperPrefix": {
                    "codepoint": 0xE5C7,
                    "description": "Inverted mordent with upper prefix"
                },
                "ornamentPrecompMordentRelease": {
                    "codepoint": 0xE5C5,
                    "description": "Mordent with release"
                },
                "ornamentPrecompMordentUpperPrefix": {
                    "codepoint": 0xE5C6,
                    "description": "Mordent with upper prefix"
                },
                "ornamentPrecompPortDeVoixMordent": {
                    "codepoint": 0xE5BC,
                    "description": "Pre-beat port de voix follwed by multiple mordent (Dandrieu)"
                },
                "ornamentPrecompSlide": {
                    "codepoint": 0xE5B0,
                    "description": "Slide"
                },
                "ornamentPrecompSlideTrillBach": {
                    "codepoint": 0xE5B8,
                    "description": "Slide-trill with two-note suffix (J.S. Bach)"
                },
                "ornamentPrecompSlideTrillDAnglebert": {
                    "codepoint": 0xE5B5,
                    "description": "Slide-trill (D'Anglebert)"
                },
                "ornamentPrecompSlideTrillMarpurg": {
                    "codepoint": 0xE5B6,
                    "description": "Slide-trill with one-note suffix (Marpurg)"
                },
                "ornamentPrecompSlideTrillMuffat": {
                    "codepoint": 0xE5B9,
                    "description": "Slide-trill (Muffat)"
                },
                "ornamentPrecompSlideTrillSuffixMuffat": {
                    "codepoint": 0xE5BA,
                    "description": "Slide-trill with two-note suffix (Muffat)"
                },
                "ornamentPrecompTrillLowerSuffix": {
                    "codepoint": 0xE5C8,
                    "description": "Trill with lower suffix"
                },
                "ornamentPrecompTrillSuffixDandrieu": {
                    "codepoint": 0xE5BB,
                    "description": "Trill with two-note suffix (Dandrieu)"
                },
                "ornamentPrecompTrillWithMordent": {
                    "codepoint": 0xE5BD,
                    "description": "Trill with mordent"
                },
                "ornamentPrecompTurnTrillBach": {
                    "codepoint": 0xE5B7,
                    "description": "Turn-trill with two-note suffix (J.S. Bach)"
                },
                "ornamentPrecompTurnTrillDAnglebert": {
                    "codepoint": 0xE5B4,
                    "description": "Turn-trill (D'Anglebert)"
                },
                "ornamentQuilisma": {
                    "codepoint": 0xEA20,
                    "description": "Quilisma"
                },
                "ornamentRightFacingHalfCircle": {
                    "codepoint": 0xE571,
                    "description": "Right-facing half circle"
                },
                "ornamentRightFacingHook": {
                    "codepoint": 0xE573,
                    "description": "Right-facing hook"
                },
                "ornamentRightVerticalStroke": {
                    "codepoint": 0xE5A4,
                    "description": "Ornament right vertical stroke"
                },
                "ornamentSchleifer": {
                    "codepoint": 0xE587,
                    "description": "Schleifer (long mordent)"
                },
                "ornamentShake3": {
                    "codepoint": 0xE582,
                    "description": "Shake"
                },
                "ornamentShakeMuffat1": {
                    "codepoint": 0xE584,
                    "description": "Shake (Muffat)"
                },
                "ornamentShortObliqueLineAfterNote": {
                    "codepoint": 0xE57A,
                    "description": "Short oblique straight line NW-SE"
                },
                "ornamentShortObliqueLineBeforeNote": {
                    "codepoint": 0xE579,
                    "description": "Short oblique straight line SW-NE"
                },
                "ornamentTopLeftConcaveStroke": {
                    "codepoint": 0xE590,
                    "description": "Ornament top left concave stroke"
                },
                "ornamentTopLeftConvexStroke": {
                    "alternateCodepoint": 0x1D1A5,
                    "codepoint": 0xE591,
                    "description": "Ornament top left convex stroke"
                },
                "ornamentTopRightConcaveStroke": {
                    "codepoint": 0xE5A0,
                    "description": "Ornament top right concave stroke"
                },
                "ornamentTopRightConvexStroke": {
                    "alternateCodepoint": 0x1D19E,
                    "codepoint": 0xE5A1,
                    "description": "Ornament top right convex stroke"
                },
                "ornamentTremblement": {
                    "codepoint": 0xE56E,
                    "description": "Tremblement"
                },
                "ornamentTremblementCouperin": {
                    "codepoint": 0xE589,
                    "description": "Tremblement appuy\u00e9 (Couperin)"
                },
                "ornamentTrill": {
                    "alternateCodepoint": 0x1D196,
                    "codepoint": 0xE566,
                    "description": "Trill"
                },
                "ornamentTurn": {
                    "alternateCodepoint": 0x1D197,
                    "codepoint": 0xE567,
                    "description": "Turn"
                },
                "ornamentTurnInverted": {
                    "alternateCodepoint": 0x1D198,
                    "codepoint": 0xE568,
                    "description": "Inverted turn"
                },
                "ornamentTurnSlash": {
                    "alternateCodepoint": 0x1D199,
                    "codepoint": 0xE569,
                    "description": "Turn with slash"
                },
                "ornamentTurnUp": {
                    "alternateCodepoint": 0x1D19A,
                    "codepoint": 0xE56A,
                    "description": "Turn up"
                },
                "ornamentTurnUpS": {
                    "codepoint": 0xE56B,
                    "description": "Inverted turn up"
                },
                "ornamentUpCurve": {
                    "codepoint": 0xE577,
                    "description": "Curve above"
                },
                "ornamentVerticalLine": {
                    "codepoint": 0xE583,
                    "description": "Vertical line"
                },
                "ornamentZigZagLineNoRightEnd": {
                    "alternateCodepoint": 0x1D19C,
                    "codepoint": 0xE59D,
                    "description": "Ornament zig-zag line without right-hand end"
                },
                "ornamentZigZagLineWithRightEnd": {
                    "alternateCodepoint": 0x1D19D,
                    "codepoint": 0xE59E,
                    "description": "Ornament zig-zag line with right-hand end"
                },
                "ottava": {
                    "codepoint": 0xE510,
                    "description": "Ottava"
                },
                "ottavaAlta": {
                    "alternateCodepoint": 0x1D136,
                    "codepoint": 0xE511,
                    "description": "Ottava alta"
                },
                "ottavaBassa": {
                    "alternateCodepoint": 0x1D137,
                    "codepoint": 0xE512,
                    "description": "Ottava bassa"
                },
                "ottavaBassaBa": {
                    "codepoint": 0xE513,
                    "description": "Ottava bassa (ba)"
                },
                "ottavaBassaVb": {
                    "codepoint": 0xE51C,
                    "description": "Ottava bassa (8vb)"
                },
                "pendereckiTremolo": {
                    "codepoint": 0xE22B,
                    "description": "Penderecki unmeasured tremolo"
                },
                "pictAgogo": {
                    "codepoint": 0xE717,
                    "description": "Agogo"
                },
                "pictAlmglocken": {
                    "codepoint": 0xE712,
                    "description": "Almglocken"
                },
                "pictAnvil": {
                    "codepoint": 0xE701,
                    "description": "Anvil"
                },
                "pictBambooChimes": {
                    "codepoint": 0xE6C3,
                    "description": "Bamboo tube chimes"
                },
                "pictBambooScraper": {
                    "codepoint": 0xE6FB,
                    "description": "Bamboo scraper"
                },
                "pictBassDrum": {
                    "codepoint": 0xE6D4,
                    "description": "Bass drum"
                },
                "pictBassDrumOnSide": {
                    "codepoint": 0xE6D5,
                    "description": "Bass drum on side"
                },
                "pictBeaterBow": {
                    "codepoint": 0xE7DE,
                    "description": "Bow"
                },
                "pictBeaterBox": {
                    "codepoint": 0xE7EB,
                    "description": "Box for percussion beater"
                },
                "pictBeaterBrassMalletsDown": {
                    "codepoint": 0xE7DA,
                    "description": "Brass mallets down"
                },
                "pictBeaterBrassMalletsUp": {
                    "codepoint": 0xE7D9,
                    "description": "Brass mallets up"
                },
                "pictBeaterCombiningDashedCircle": {
                    "codepoint": 0xE7EA,
                    "description": "Combining dashed circle for round beaters (plated)"
                },
                "pictBeaterCombiningParentheses": {
                    "codepoint": 0xE7E9,
                    "description": "Combining parentheses for round beaters (padded)"
                },
                "pictBeaterDoubleBassDrumDown": {
                    "codepoint": 0xE7A1,
                    "description": "Double bass drum stick down"
                },
                "pictBeaterDoubleBassDrumUp": {
                    "codepoint": 0xE7A0,
                    "description": "Double bass drum stick up"
                },
                "pictBeaterFinger": {
                    "codepoint": 0xE7E4,
                    "description": "Finger"
                },
                "pictBeaterFingernails": {
                    "codepoint": 0xE7E6,
                    "description": "Fingernails"
                },
                "pictBeaterFist": {
                    "codepoint": 0xE7E5,
                    "description": "Fist"
                },
                "pictBeaterGuiroScraper": {
                    "codepoint": 0xE7DD,
                    "description": "Guiro scraper"
                },
                "pictBeaterHammer": {
                    "codepoint": 0xE7E1,
                    "description": "Hammer"
                },
                "pictBeaterHammerMetalDown": {
                    "codepoint": 0xE7D0,
                    "description": "Metal hammer, down"
                },
                "pictBeaterHammerMetalUp": {
                    "codepoint": 0xE7CF,
                    "description": "Metal hammer, up"
                },
                "pictBeaterHammerPlasticDown": {
                    "codepoint": 0xE7CE,
                    "description": "Plastic hammer, down"
                },
                "pictBeaterHammerPlasticUp": {
                    "codepoint": 0xE7CD,
                    "description": "Plastic hammer, up"
                },
                "pictBeaterHammerWoodDown": {
                    "codepoint": 0xE7CC,
                    "description": "Wooden hammer, down"
                },
                "pictBeaterHammerWoodUp": {
                    "codepoint": 0xE7CB,
                    "description": "Wooden hammer, up"
                },
                "pictBeaterHand": {
                    "codepoint": 0xE7E3,
                    "description": "Hand"
                },
                "pictBeaterHardBassDrumDown": {
                    "codepoint": 0xE79D,
                    "description": "Hard bass drum stick down"
                },
                "pictBeaterHardBassDrumUp": {
                    "codepoint": 0xE79C,
                    "description": "Hard bass drum stick up"
                },
                "pictBeaterHardGlockenspielDown": {
                    "codepoint": 0xE785,
                    "description": "Hard glockenspiel stick down"
                },
                "pictBeaterHardGlockenspielLeft": {
                    "codepoint": 0xE787,
                    "description": "Hard glockenspiel stick left"
                },
                "pictBeaterHardGlockenspielRight": {
                    "codepoint": 0xE786,
                    "description": "Hard glockenspiel stick right"
                },
                "pictBeaterHardGlockenspielUp": {
                    "codepoint": 0xE784,
                    "description": "Hard glockenspiel stick up"
                },
                "pictBeaterHardTimpaniDown": {
                    "codepoint": 0xE791,
                    "description": "Hard timpani stick down"
                },
                "pictBeaterHardTimpaniLeft": {
                    "codepoint": 0xE793,
                    "description": "Hard timpani stick left"
                },
                "pictBeaterHardTimpaniRight": {
                    "codepoint": 0xE792,
                    "description": "Hard timpani stick right"
                },
                "pictBeaterHardTimpaniUp": {
                    "codepoint": 0xE790,
                    "description": "Hard timpani stick up"
                },
                "pictBeaterHardXylophoneDown": {
                    "codepoint": 0xE779,
                    "description": "Hard xylophone stick down"
                },
                "pictBeaterHardXylophoneLeft": {
                    "codepoint": 0xE77B,
                    "description": "Hard xylophone stick left"
                },
                "pictBeaterHardXylophoneRight": {
                    "codepoint": 0xE77A,
                    "description": "Hard xylophone stick right"
                },
                "pictBeaterHardXylophoneUp": {
                    "codepoint": 0xE778,
                    "description": "Hard xylophone stick up"
                },
                "pictBeaterHardYarnDown": {
                    "codepoint": 0xE7AB,
                    "description": "Hard yarn beater down"
                },
                "pictBeaterHardYarnLeft": {
                    "codepoint": 0xE7AD,
                    "description": "Hard yarn beater left"
                },
                "pictBeaterHardYarnRight": {
                    "codepoint": 0xE7AC,
                    "description": "Hard yarn beater right"
                },
                "pictBeaterHardYarnUp": {
                    "codepoint": 0xE7AA,
                    "description": "Hard yarn beater up"
                },
                "pictBeaterJazzSticksDown": {
                    "codepoint": 0xE7D4,
                    "description": "Jazz sticks down"
                },
                "pictBeaterJazzSticksUp": {
                    "codepoint": 0xE7D3,
                    "description": "Jazz sticks up"
                },
                "pictBeaterKnittingNeedle": {
                    "codepoint": 0xE7E2,
                    "description": "Knitting needle"
                },
                "pictBeaterMallet": {
                    "codepoint": 0xE7DF,
                    "description": "Chime hammer"
                },
                "pictBeaterMediumBassDrumDown": {
                    "codepoint": 0xE79B,
                    "description": "Medium bass drum stick down"
                },
                "pictBeaterMediumBassDrumUp": {
                    "codepoint": 0xE79A,
                    "description": "Medium bass drum stick up"
                },
                "pictBeaterMediumTimpaniDown": {
                    "codepoint": 0xE78D,
                    "description": "Medium timpani stick down"
                },
                "pictBeaterMediumTimpaniLeft": {
                    "codepoint": 0xE78F,
                    "description": "Medium timpani stick left"
                },
                "pictBeaterMediumTimpaniRight": {
                    "codepoint": 0xE78E,
                    "description": "Medium timpani stick right"
                },
                "pictBeaterMediumTimpaniUp": {
                    "codepoint": 0xE78C,
                    "description": "Medium timpani stick up"
                },
                "pictBeaterMediumXylophoneDown": {
                    "codepoint": 0xE775,
                    "description": "Medium xylophone stick down"
                },
                "pictBeaterMediumXylophoneLeft": {
                    "codepoint": 0xE777,
                    "description": "Medium xylophone stick left"
                },
                "pictBeaterMediumXylophoneRight": {
                    "codepoint": 0xE776,
                    "description": "Medium xylophone stick right"
                },
                "pictBeaterMediumXylophoneUp": {
                    "codepoint": 0xE774,
                    "description": "Medium xylophone stick up"
                },
                "pictBeaterMediumYarnDown": {
                    "codepoint": 0xE7A7,
                    "description": "Medium yarn beater down"
                },
                "pictBeaterMediumYarnLeft": {
                    "codepoint": 0xE7A9,
                    "description": "Medium yarn beater left"
                },
                "pictBeaterMediumYarnRight": {
                    "codepoint": 0xE7A8,
                    "description": "Medium yarn beater right"
                },
                "pictBeaterMediumYarnUp": {
                    "codepoint": 0xE7A6,
                    "description": "Medium yarn beater up"
                },
                "pictBeaterMetalBassDrumDown": {
                    "codepoint": 0xE79F,
                    "description": "Metal bass drum stick down"
                },
                "pictBeaterMetalBassDrumUp": {
                    "codepoint": 0xE79E,
                    "description": "Metal bass drum stick up"
                },
                "pictBeaterMetalDown": {
                    "codepoint": 0xE7C8,
                    "description": "Metal beater down"
                },
                "pictBeaterMetalHammer": {
                    "codepoint": 0xE7E0,
                    "description": "Metal hammer"
                },
                "pictBeaterMetalLeft": {
                    "codepoint": 0xE7CA,
                    "description": "Metal beater, left"
                },
                "pictBeaterMetalRight": {
                    "codepoint": 0xE7C9,
                    "description": "Metal beater, right"
                },
                "pictBeaterMetalUp": {
                    "codepoint": 0xE7C7,
                    "description": "Metal beater, up"
                },
                "pictBeaterSnareSticksDown": {
                    "codepoint": 0xE7D2,
                    "description": "Snare sticks down"
                },
                "pictBeaterSnareSticksUp": {
                    "codepoint": 0xE7D1,
                    "description": "Snare sticks up"
                },
                "pictBeaterSoftBassDrumDown": {
                    "codepoint": 0xE799,
                    "description": "Soft bass drum stick down"
                },
                "pictBeaterSoftBassDrumUp": {
                    "codepoint": 0xE798,
                    "description": "Soft bass drum stick up"
                },
                "pictBeaterSoftGlockenspielDown": {
                    "codepoint": 0xE781,
                    "description": "Soft glockenspiel stick down"
                },
                "pictBeaterSoftGlockenspielLeft": {
                    "codepoint": 0xE783,
                    "description": "Soft glockenspiel stick left"
                },
                "pictBeaterSoftGlockenspielRight": {
                    "codepoint": 0xE782,
                    "description": "Soft glockenspiel stick right"
                },
                "pictBeaterSoftGlockenspielUp": {
                    "codepoint": 0xE780,
                    "description": "Soft glockenspiel stick up"
                },
                "pictBeaterSoftTimpaniDown": {
                    "codepoint": 0xE789,
                    "description": "Soft timpani stick down"
                },
                "pictBeaterSoftTimpaniLeft": {
                    "codepoint": 0xE78B,
                    "description": "Soft timpani stick left"
                },
                "pictBeaterSoftTimpaniRight": {
                    "codepoint": 0xE78A,
                    "description": "Soft timpani stick right"
                },
                "pictBeaterSoftTimpaniUp": {
                    "codepoint": 0xE788,
                    "description": "Soft timpani stick up"
                },
                "pictBeaterSoftXylophone": {
                    "codepoint": 0xE7DB,
                    "description": "Soft xylophone beaters"
                },
                "pictBeaterSoftXylophoneDown": {
                    "codepoint": 0xE771,
                    "description": "Soft xylophone stick down"
                },
                "pictBeaterSoftXylophoneLeft": {
                    "codepoint": 0xE773,
                    "description": "Soft xylophone stick left"
                },
                "pictBeaterSoftXylophoneRight": {
                    "codepoint": 0xE772,
                    "description": "Soft xylophone stick right"
                },
                "pictBeaterSoftXylophoneUp": {
                    "codepoint": 0xE770,
                    "description": "Soft xylophone stick up"
                },
                "pictBeaterSoftYarnDown": {
                    "codepoint": 0xE7A3,
                    "description": "Soft yarn beater down"
                },
                "pictBeaterSoftYarnLeft": {
                    "codepoint": 0xE7A5,
                    "description": "Soft yarn beater left"
                },
                "pictBeaterSoftYarnRight": {
                    "codepoint": 0xE7A4,
                    "description": "Soft yarn beater right"
                },
                "pictBeaterSoftYarnUp": {
                    "codepoint": 0xE7A2,
                    "description": "Soft yarn beater up"
                },
                "pictBeaterSpoonWoodenMallet": {
                    "codepoint": 0xE7DC,
                    "description": "Spoon-shaped wooden mallet"
                },
                "pictBeaterSuperballDown": {
                    "codepoint": 0xE7AF,
                    "description": "Superball beater down"
                },
                "pictBeaterSuperballLeft": {
                    "codepoint": 0xE7B1,
                    "description": "Superball beater left"
                },
                "pictBeaterSuperballRight": {
                    "codepoint": 0xE7B0,
                    "description": "Superball beater right"
                },
                "pictBeaterSuperballUp": {
                    "codepoint": 0xE7AE,
                    "description": "Superball beater up"
                },
                "pictBeaterTriangleDown": {
                    "codepoint": 0xE7D6,
                    "description": "Triangle beater down"
                },
                "pictBeaterTriangleUp": {
                    "codepoint": 0xE7D5,
                    "description": "Triangle beater up"
                },
                "pictBeaterWireBrushesDown": {
                    "codepoint": 0xE7D8,
                    "description": "Wire brushes down"
                },
                "pictBeaterWireBrushesUp": {
                    "codepoint": 0xE7D7,
                    "description": "Wire brushes up"
                },
                "pictBeaterWoodTimpaniDown": {
                    "codepoint": 0xE795,
                    "description": "Wood timpani stick down"
                },
                "pictBeaterWoodTimpaniLeft": {
                    "codepoint": 0xE797,
                    "description": "Wood timpani stick left"
                },
                "pictBeaterWoodTimpaniRight": {
                    "codepoint": 0xE796,
                    "description": "Wood timpani stick right"
                },
                "pictBeaterWoodTimpaniUp": {
                    "codepoint": 0xE794,
                    "description": "Wood timpani stick up"
                },
                "pictBeaterWoodXylophoneDown": {
                    "codepoint": 0xE77D,
                    "description": "Wood xylophone stick down"
                },
                "pictBeaterWoodXylophoneLeft": {
                    "codepoint": 0xE77F,
                    "description": "Wood xylophone stick left"
                },
                "pictBeaterWoodXylophoneRight": {
                    "codepoint": 0xE77E,
                    "description": "Wood xylophone stick right"
                },
                "pictBeaterWoodXylophoneUp": {
                    "codepoint": 0xE77C,
                    "description": "Wood xylophone stick up"
                },
                "pictBell": {
                    "codepoint": 0xE714,
                    "description": "Bell"
                },
                "pictBellOfCymbal": {
                    "codepoint": 0xE72A,
                    "description": "Bell of cymbal"
                },
                "pictBellPlate": {
                    "codepoint": 0xE713,
                    "description": "Bell plate"
                },
                "pictBellTree": {
                    "codepoint": 0xE71A,
                    "description": "Bell tree"
                },
                "pictBirdWhistle": {
                    "codepoint": 0xE751,
                    "description": "Bird whistle"
                },
                "pictBoardClapper": {
                    "codepoint": 0xE6F7,
                    "description": "Board clapper"
                },
                "pictBongos": {
                    "codepoint": 0xE6DD,
                    "description": "Bongos"
                },
                "pictBrakeDrum": {
                    "codepoint": 0xE6E1,
                    "description": "Brake drum"
                },
                "pictCabasa": {
                    "codepoint": 0xE743,
                    "description": "Cabasa"
                },
                "pictCannon": {
                    "codepoint": 0xE761,
                    "description": "Cannon"
                },
                "pictCarHorn": {
                    "codepoint": 0xE755,
                    "description": "Car horn"
                },
                "pictCastanets": {
                    "codepoint": 0xE6F8,
                    "description": "Castanets"
                },
                "pictCastanetsWithHandle": {
                    "codepoint": 0xE6F9,
                    "description": "Castanets with handle"
                },
                "pictCelesta": {
                    "codepoint": 0xE6B0,
                    "description": "Celesta"
                },
                "pictCencerro": {
                    "codepoint": 0xE716,
                    "description": "Cencerro"
                },
                "pictCenter1": {
                    "codepoint": 0xE7FE,
                    "description": "Center (Weinberg)"
                },
                "pictCenter2": {
                    "codepoint": 0xE7FF,
                    "description": "Center (Ghent)"
                },
                "pictCenter3": {
                    "codepoint": 0xE800,
                    "description": "Center (Caltabiano)"
                },
                "pictChainRattle": {
                    "codepoint": 0xE748,
                    "description": "Chain rattle"
                },
                "pictChimes": {
                    "codepoint": 0xE6C2,
                    "description": "Chimes"
                },
                "pictChineseCymbal": {
                    "codepoint": 0xE726,
                    "description": "Chinese cymbal"
                },
                "pictChokeCymbal": {
                    "codepoint": 0xE805,
                    "description": "Choke (Weinberg)"
                },
                "pictClaves": {
                    "codepoint": 0xE6F2,
                    "description": "Claves"
                },
                "pictCoins": {
                    "codepoint": 0xE7E7,
                    "description": "Coins"
                },
                "pictConga": {
                    "codepoint": 0xE6DE,
                    "description": "Conga"
                },
                "pictCowBell": {
                    "codepoint": 0xE711,
                    "description": "Cow bell"
                },
                "pictCrashCymbals": {
                    "codepoint": 0xE720,
                    "description": "Crash cymbals"
                },
                "pictCrotales": {
                    "codepoint": 0xE6AE,
                    "description": "Crotales"
                },
                "pictCrushStem": {
                    "codepoint": 0xE80C,
                    "description": "Combining crush for stem"
                },
                "pictCuica": {
                    "codepoint": 0xE6E4,
                    "description": "Cuica"
                },
                "pictCymbalTongs": {
                    "codepoint": 0xE728,
                    "description": "Cymbal tongs"
                },
                "pictDamp1": {
                    "codepoint": 0xE7F9,
                    "description": "Damp"
                },
                "pictDamp2": {
                    "codepoint": 0xE7FA,
                    "description": "Damp 2"
                },
                "pictDamp3": {
                    "codepoint": 0xE7FB,
                    "description": "Damp 3"
                },
                "pictDamp4": {
                    "codepoint": 0xE7FC,
                    "description": "Damp 4"
                },
                "pictDeadNoteStem": {
                    "codepoint": 0xE80D,
                    "description": "Combining X for stem (dead note)"
                },
                "pictDrumStick": {
                    "codepoint": 0xE7E8,
                    "description": "Drum stick"
                },
                "pictDuckCall": {
                    "codepoint": 0xE757,
                    "description": "Duck call"
                },
                "pictEdgeOfCymbal": {
                    "codepoint": 0xE729,
                    "description": "Edge of cymbal"
                },
                "pictEmptyTrap": {
                    "codepoint": 0xE6A9,
                    "description": "Empty trapezoid"
                },
                "pictFingerCymbals": {
                    "codepoint": 0xE727,
                    "description": "Finger cymbals"
                },
                "pictFlexatone": {
                    "codepoint": 0xE740,
                    "description": "Flexatone"
                },
                "pictFootballRatchet": {
                    "codepoint": 0xE6F5,
                    "description": "Football rattle"
                },
                "pictGlassHarmonica": {
                    "codepoint": 0xE765,
                    "description": "Glass harmonica"
                },
                "pictGlassHarp": {
                    "codepoint": 0xE764,
                    "description": "Glass harp"
                },
                "pictGlassPlateChimes": {
                    "codepoint": 0xE6C6,
                    "description": "Glass plate chimes"
                },
                "pictGlassTubeChimes": {
                    "codepoint": 0xE6C5,
                    "description": "Glass tube chimes"
                },
                "pictGlsp": {
                    "codepoint": 0xE6A0,
                    "description": "Glockenspiel"
                },
                "pictGlspSmithBrindle": {
                    "codepoint": 0xE6AA,
                    "description": "Glockenspiel (Smith Brindle)"
                },
                "pictGobletDrum": {
                    "codepoint": 0xE6E2,
                    "description": "Goblet drum (djembe, dumbek)"
                },
                "pictGong": {
                    "codepoint": 0xE732,
                    "description": "Gong"
                },
                "pictGongWithButton": {
                    "codepoint": 0xE733,
                    "description": "Gong with button (nipple)"
                },
                "pictGuiro": {
                    "codepoint": 0xE6F3,
                    "description": "Guiro"
                },
                "pictGumHardDown": {
                    "codepoint": 0xE7C4,
                    "description": "Hard gum beater, down"
                },
                "pictGumHardLeft": {
                    "codepoint": 0xE7C6,
                    "description": "Hard gum beater, left"
                },
                "pictGumHardRight": {
                    "codepoint": 0xE7C5,
                    "description": "Hard gum beater, right"
                },
                "pictGumHardUp": {
                    "codepoint": 0xE7C3,
                    "description": "Hard gum beater, up"
                },
                "pictGumMediumDown": {
                    "codepoint": 0xE7C0,
                    "description": "Medium gum beater, down"
                },
                "pictGumMediumLeft": {
                    "codepoint": 0xE7C2,
                    "description": "Medium gum beater, left"
                },
                "pictGumMediumRight": {
                    "codepoint": 0xE7C1,
                    "description": "Medium gum beater, right"
                },
                "pictGumMediumUp": {
                    "codepoint": 0xE7BF,
                    "description": "Medium gum beater, up"
                },
                "pictGumSoftDown": {
                    "codepoint": 0xE7BC,
                    "description": "Soft gum beater, down"
                },
                "pictGumSoftLeft": {
                    "codepoint": 0xE7BE,
                    "description": "Soft gum beater, left"
                },
                "pictGumSoftRight": {
                    "codepoint": 0xE7BD,
                    "description": "Soft gum beater, right"
                },
                "pictGumSoftUp": {
                    "codepoint": 0xE7BB,
                    "description": "Soft gum beater, up"
                },
                "pictHalfOpen1": {
                    "codepoint": 0xE7F6,
                    "description": "Half-open"
                },
                "pictHalfOpen2": {
                    "codepoint": 0xE7F7,
                    "description": "Half-open 2 (Weinberg)"
                },
                "pictHandbell": {
                    "codepoint": 0xE715,
                    "description": "Handbell"
                },
                "pictHiHat": {
                    "codepoint": 0xE722,
                    "description": "Hi-hat"
                },
                "pictHiHatOnStand": {
                    "codepoint": 0xE723,
                    "description": "Hi-hat cymbals on stand"
                },
                "pictJawHarp": {
                    "codepoint": 0xE767,
                    "description": "Jaw harp"
                },
                "pictJingleBells": {
                    "codepoint": 0xE719,
                    "description": "Jingle bells"
                },
                "pictKlaxonHorn": {
                    "codepoint": 0xE756,
                    "description": "Klaxon horn"
                },
                "pictLeftHandCircle": {
                    "codepoint": 0xE807,
                    "description": "Right hand (Agostini)"
                },
                "pictLionsRoar": {
                    "codepoint": 0xE763,
                    "description": "Lion's roar"
                },
                "pictLithophone": {
                    "codepoint": 0xE6B1,
                    "description": "Lithophone"
                },
                "pictLogDrum": {
                    "codepoint": 0xE6DF,
                    "description": "Log drum"
                },
                "pictLotusFlute": {
                    "codepoint": 0xE75A,
                    "description": "Lotus flute"
                },
                "pictMar": {
                    "codepoint": 0xE6A6,
                    "description": "Marimba"
                },
                "pictMarSmithBrindle": {
                    "codepoint": 0xE6AC,
                    "description": "Marimba (Smith Brindle)"
                },
                "pictMaraca": {
                    "codepoint": 0xE741,
                    "description": "Maraca"
                },
                "pictMaracas": {
                    "codepoint": 0xE742,
                    "description": "Maracas"
                },
                "pictMegaphone": {
                    "codepoint": 0xE759,
                    "description": "Megaphone"
                },
                "pictMetalPlateChimes": {
                    "codepoint": 0xE6C8,
                    "description": "Metal plate chimes"
                },
                "pictMetalTubeChimes": {
                    "codepoint": 0xE6C7,
                    "description": "Metal tube chimes"
                },
                "pictMusicalSaw": {
                    "codepoint": 0xE766,
                    "description": "Musical saw"
                },
                "pictNormalPosition": {
                    "codepoint": 0xE804,
                    "description": "Normal position (Caltabiano)"
                },
                "pictOnRim": {
                    "codepoint": 0xE7F4,
                    "description": "On rim"
                },
                "pictOpen": {
                    "codepoint": 0xE7F8,
                    "description": "Open"
                },
                "pictOpenRimShot": {
                    "codepoint": 0xE7F5,
                    "description": "Closed / rim shot"
                },
                "pictPistolShot": {
                    "codepoint": 0xE760,
                    "description": "Pistol shot"
                },
                "pictPoliceWhistle": {
                    "codepoint": 0xE752,
                    "description": "Police whistle"
                },
                "pictQuijada": {
                    "codepoint": 0xE6FA,
                    "description": "Quijada (jawbone)"
                },
                "pictRainstick": {
                    "codepoint": 0xE747,
                    "description": "Rainstick"
                },
                "pictRatchet": {
                    "codepoint": 0xE6F4,
                    "description": "Ratchet"
                },
                "pictRecoReco": {
                    "codepoint": 0xE6FC,
                    "description": "Reco-reco"
                },
                "pictRightHandSquare": {
                    "codepoint": 0xE806,
                    "description": "Left hand (Agostini)"
                },
                "pictRim1": {
                    "codepoint": 0xE801,
                    "description": "Rim or edge (Weinberg)"
                },
                "pictRim2": {
                    "codepoint": 0xE802,
                    "description": "Rim (Ghent)"
                },
                "pictRim3": {
                    "codepoint": 0xE803,
                    "description": "Rim (Caltabiano)"
                },
                "pictRimShotOnStem": {
                    "codepoint": 0xE7FD,
                    "description": "Rim shot for stem"
                },
                "pictSandpaperBlocks": {
                    "codepoint": 0xE762,
                    "description": "Sandpaper blocks"
                },
                "pictScrapeAroundRim": {
                    "codepoint": 0xE7F3,
                    "description": "Scrape around rim (counter-clockwise)"
                },
                "pictScrapeAroundRimClockwise": {
                    "codepoint": 0xE80E,
                    "description": "Scrape around rim (clockwise)"
                },
                "pictScrapeCenterToEdge": {
                    "codepoint": 0xE7F1,
                    "description": "Scrape from center to edge"
                },
                "pictScrapeEdgeToCenter": {
                    "codepoint": 0xE7F2,
                    "description": "Scrape from edge to center"
                },
                "pictShellBells": {
                    "codepoint": 0xE718,
                    "description": "Shell bells"
                },
                "pictShellChimes": {
                    "codepoint": 0xE6C4,
                    "description": "Shell chimes"
                },
                "pictSiren": {
                    "codepoint": 0xE753,
                    "description": "Siren"
                },
                "pictSistrum": {
                    "codepoint": 0xE746,
                    "description": "Sistrum"
                },
                "pictSizzleCymbal": {
                    "codepoint": 0xE724,
                    "description": "Sizzle cymbal"
                },
                "pictSleighBell": {
                    "codepoint": 0xE710,
                    "description": "Sleigh bell"
                },
                "pictSlideBrushOnGong": {
                    "codepoint": 0xE734,
                    "description": "Slide brush on gong"
                },
                "pictSlideWhistle": {
                    "codepoint": 0xE750,
                    "description": "Slide whistle"
                },
                "pictSlitDrum": {
                    "codepoint": 0xE6E0,
                    "description": "Slit drum"
                },
                "pictSnareDrum": {
                    "codepoint": 0xE6D1,
                    "description": "Snare drum"
                },
                "pictSnareDrumMilitary": {
                    "codepoint": 0xE6D3,
                    "description": "Military snare drum"
                },
                "pictSnareDrumSnaresOff": {
                    "codepoint": 0xE6D2,
                    "description": "Snare drum, snares off"
                },
                "pictSteelDrums": {
                    "codepoint": 0xE6AF,
                    "description": "Steel drums"
                },
                "pictStickShot": {
                    "codepoint": 0xE7F0,
                    "description": "Stick shot"
                },
                "pictSuperball": {
                    "codepoint": 0xE7B2,
                    "description": "Superball"
                },
                "pictSuspendedCymbal": {
                    "codepoint": 0xE721,
                    "description": "Suspended cymbal"
                },
                "pictSwishStem": {
                    "codepoint": 0xE808,
                    "description": "Combining swish for stem"
                },
                "pictTabla": {
                    "codepoint": 0xE6E3,
                    "description": "Indian tabla"
                },
                "pictTamTam": {
                    "codepoint": 0xE730,
                    "description": "Tam-tam"
                },
                "pictTamTamWithBeater": {
                    "codepoint": 0xE731,
                    "description": "Tam-tam with beater (Smith Brindle)"
                },
                "pictTambourine": {
                    "codepoint": 0xE6DB,
                    "description": "Tambourine"
                },
                "pictTempleBlocks": {
                    "codepoint": 0xE6F1,
                    "description": "Temple blocks"
                },
                "pictTenorDrum": {
                    "codepoint": 0xE6D6,
                    "description": "Tenor drum"
                },
                "pictThundersheet": {
                    "codepoint": 0xE744,
                    "description": "Thundersheet"
                },
                "pictTimbales": {
                    "codepoint": 0xE6DC,
                    "description": "Timbales"
                },
                "pictTimpani": {
                    "codepoint": 0xE6D0,
                    "description": "Timpani"
                },
                "pictTomTom": {
                    "codepoint": 0xE6D7,
                    "description": "Tom-tom"
                },
                "pictTomTomChinese": {
                    "codepoint": 0xE6D8,
                    "description": "Chinese tom-tom"
                },
                "pictTomTomIndoAmerican": {
                    "codepoint": 0xE6DA,
                    "description": "Indo-American tom tom"
                },
                "pictTomTomJapanese": {
                    "codepoint": 0xE6D9,
                    "description": "Japanese tom-tom"
                },
                "pictTriangle": {
                    "codepoint": 0xE700,
                    "description": "Triangle"
                },
                "pictTubaphone": {
                    "codepoint": 0xE6B2,
                    "description": "Tubaphone"
                },
                "pictTubularBells": {
                    "codepoint": 0xE6C0,
                    "description": "Tubular bells"
                },
                "pictTurnLeftStem": {
                    "codepoint": 0xE80A,
                    "description": "Combining turn left for stem"
                },
                "pictTurnRightLeftStem": {
                    "codepoint": 0xE80B,
                    "description": "Combining turn left or right for stem"
                },
                "pictTurnRightStem": {
                    "codepoint": 0xE809,
                    "description": "Combining turn right for stem"
                },
                "pictVib": {
                    "codepoint": 0xE6A7,
                    "description": "Vibraphone"
                },
                "pictVibMotorOff": {
                    "codepoint": 0xE6A8,
                    "description": "Metallophone (vibraphone motor off)"
                },
                "pictVibSmithBrindle": {
                    "codepoint": 0xE6AD,
                    "description": "Vibraphone (Smith Brindle)"
                },
                "pictVibraslap": {
                    "codepoint": 0xE745,
                    "description": "Vibraslap"
                },
                "pictVietnameseHat": {
                    "codepoint": 0xE725,
                    "description": "Vietnamese hat cymbal"
                },
                "pictWhip": {
                    "codepoint": 0xE6F6,
                    "description": "Whip"
                },
                "pictWindChimesGlass": {
                    "codepoint": 0xE6C1,
                    "description": "Wind chimes (glass)"
                },
                "pictWindMachine": {
                    "codepoint": 0xE754,
                    "description": "Wind machine"
                },
                "pictWindWhistle": {
                    "codepoint": 0xE758,
                    "description": "Wind whistle (or mouth siren)"
                },
                "pictWoodBlock": {
                    "codepoint": 0xE6F0,
                    "description": "Wood block"
                },
                "pictWoundHardDown": {
                    "codepoint": 0xE7B4,
                    "description": "Wound beater, hard core down"
                },
                "pictWoundHardLeft": {
                    "codepoint": 0xE7B6,
                    "description": "Wound beater, hard core left"
                },
                "pictWoundHardRight": {
                    "codepoint": 0xE7B5,
                    "description": "Wound beater, hard core right"
                },
                "pictWoundHardUp": {
                    "codepoint": 0xE7B3,
                    "description": "Wound beater, hard core up"
                },
                "pictWoundSoftDown": {
                    "codepoint": 0xE7B8,
                    "description": "Wound beater, soft core down"
                },
                "pictWoundSoftLeft": {
                    "codepoint": 0xE7BA,
                    "description": "Wound beater, soft core left"
                },
                "pictWoundSoftRight": {
                    "codepoint": 0xE7B9,
                    "description": "Wound beater, soft core right"
                },
                "pictWoundSoftUp": {
                    "codepoint": 0xE7B7,
                    "description": "Wound beater, soft core up"
                },
                "pictXyl": {
                    "codepoint": 0xE6A1,
                    "description": "Xylophone"
                },
                "pictXylBass": {
                    "codepoint": 0xE6A3,
                    "description": "Bass xylophone"
                },
                "pictXylSmithBrindle": {
                    "codepoint": 0xE6AB,
                    "description": "Xylophone (Smith Brindle)"
                },
                "pictXylTenor": {
                    "codepoint": 0xE6A2,
                    "description": "Tenor xylophone"
                },
                "pictXylTenorTrough": {
                    "codepoint": 0xE6A5,
                    "description": "Trough tenor xylophone"
                },
                "pictXylTrough": {
                    "codepoint": 0xE6A4,
                    "description": "Trough xylophone"
                },
                "pluckedBuzzPizzicato": {
                    "codepoint": 0xE632,
                    "description": "Buzz pizzicato"
                },
                "pluckedDamp": {
                    "alternateCodepoint": 0x1D1B4,
                    "codepoint": 0xE638,
                    "description": "Damp"
                },
                "pluckedDampAll": {
                    "alternateCodepoint": 0x1D1B5,
                    "codepoint": 0xE639,
                    "description": "Damp all"
                },
                "pluckedDampOnStem": {
                    "codepoint": 0xE63B,
                    "description": "Damp for stem"
                },
                "pluckedFingernailFlick": {
                    "codepoint": 0xE637,
                    "description": "Fingernail flick"
                },
                "pluckedLeftHandPizzicato": {
                    "codepoint": 0xE633,
                    "description": "Left-hand pizzicato"
                },
                "pluckedPlectrum": {
                    "codepoint": 0xE63A,
                    "description": "Plectrum"
                },
                "pluckedSnapPizzicatoAbove": {
                    "codepoint": 0xE631,
                    "description": "Snap pizzicato above"
                },
                "pluckedSnapPizzicatoBelow": {
                    "alternateCodepoint": 0x1D1AD,
                    "codepoint": 0xE630,
                    "description": "Snap pizzicato below"
                },
                "pluckedWithFingernails": {
                    "alternateCodepoint": 0x1D1B3,
                    "codepoint": 0xE636,
                    "description": "With fingernails"
                },
                "quindicesima": {
                    "codepoint": 0xE514,
                    "description": "Quindicesima"
                },
                "quindicesimaAlta": {
                    "codepoint": 0xE515,
                    "description": "Quindicesima alta"
                },
                "quindicesimaBassa": {
                    "alternateCodepoint": 0x1D139,
                    "codepoint": 0xE516,
                    "description": "Quindicesima bassa"
                },
                "quindicesimaBassaMb": {
                    "codepoint": 0xE51D,
                    "description": "Quindicesima bassa (mb)"
                },
                "repeat1Bar": {
                    "alternateCodepoint": 0x1D10E,
                    "codepoint": 0xE500,
                    "description": "Repeat last bar"
                },
                "repeat2Bars": {
                    "alternateCodepoint": 0x1D10F,
                    "codepoint": 0xE501,
                    "description": "Repeat last two bars"
                },
                "repeat4Bars": {
                    "codepoint": 0xE502,
                    "description": "Repeat last four bars"
                },
                "repeatDot": {
                    "codepoint": 0xE044,
                    "description": "Single repeat dot"
                },
                "repeatDots": {
                    "alternateCodepoint": 0x1D108,
                    "codepoint": 0xE043,
                    "description": "Repeat dots"
                },
                "repeatLeft": {
                    "alternateCodepoint": 0x1D106,
                    "codepoint": 0xE040,
                    "description": "Left (start) repeat sign"
                },
                "repeatRight": {
                    "alternateCodepoint": 0x1D107,
                    "codepoint": 0xE041,
                    "description": "Right (end) repeat sign"
                },
                "repeatRightLeft": {
                    "codepoint": 0xE042,
                    "description": "Right and left repeat sign"
                },
                "rest1024th": {
                    "codepoint": 0xE4ED,
                    "description": "1024th rest"
                },
                "rest128th": {
                    "alternateCodepoint": 0x1D142,
                    "codepoint": 0xE4EA,
                    "description": "128th (semihemidemisemiquaver) rest"
                },
                "rest16th": {
                    "alternateCodepoint": 0x1D13F,
                    "codepoint": 0xE4E7,
                    "description": "16th (semiquaver) rest"
                },
                "rest256th": {
                    "codepoint": 0xE4EB,
                    "description": "256th rest"
                },
                "rest32nd": {
                    "alternateCodepoint": 0x1D140,
                    "codepoint": 0xE4E8,
                    "description": "32nd (demisemiquaver) rest"
                },
                "rest512th": {
                    "codepoint": 0xE4EC,
                    "description": "512th rest"
                },
                "rest64th": {
                    "alternateCodepoint": 0x1D141,
                    "codepoint": 0xE4E9,
                    "description": "64th (hemidemisemiquaver) rest"
                },
                "rest8th": {
                    "alternateCodepoint": 0x1D13E,
                    "codepoint": 0xE4E6,
                    "description": "Eighth (quaver) rest"
                },
                "restDoubleWhole": {
                    "alternateCodepoint": 0x1D13A,
                    "codepoint": 0xE4E2,
                    "description": "Double whole (breve) rest"
                },
                "restDoubleWholeLegerLine": {
                    "codepoint": 0xE4F3,
                    "description": "Double whole rest on leger lines"
                },
                "restHBar": {
                    "alternateCodepoint": 0x1D129,
                    "codepoint": 0xE4EE,
                    "description": "Multiple measure rest"
                },
                "restHBarLeft": {
                    "codepoint": 0xE4EF,
                    "description": "H-bar, left half"
                },
                "restHBarMiddle": {
                    "codepoint": 0xE4F0,
                    "description": "H-bar, middle"
                },
                "restHBarRight": {
                    "codepoint": 0xE4F1,
                    "description": "H-bar, right half"
                },
                "restHalf": {
                    "alternateCodepoint": 0x1D13C,
                    "codepoint": 0xE4E4,
                    "description": "Half (minim) rest"
                },
                "restHalfLegerLine": {
                    "codepoint": 0xE4F5,
                    "description": "Half rest on leger line"
                },
                "restLonga": {
                    "codepoint": 0xE4E1,
                    "description": "Longa rest"
                },
                "restMaxima": {
                    "codepoint": 0xE4E0,
                    "description": "Maxima rest"
                },
                "restQuarter": {
                    "alternateCodepoint": 0x1D13D,
                    "codepoint": 0xE4E5,
                    "description": "Quarter (crotchet) rest"
                },
                "restQuarterOld": {
                    "codepoint": 0xE4F2,
                    "description": "Old-style quarter (crotchet) rest"
                },
                "restQuarterZ": {
                    "codepoint": 0xE4F6,
                    "description": "Z-style quarter (crotchet) rest"
                },
                "restWhole": {
                    "alternateCodepoint": 0x1D13B,
                    "codepoint": 0xE4E3,
                    "description": "Whole (semibreve) rest"
                },
                "restWholeLegerLine": {
                    "codepoint": 0xE4F4,
                    "description": "Whole rest on leger line"
                },
                "reversedBrace": {
                    "codepoint": 0xE001,
                    "description": "Reversed brace"
                },
                "reversedBracketBottom": {
                    "codepoint": 0xE006,
                    "description": "Reversed bracket bottom"
                },
                "reversedBracketTop": {
                    "codepoint": 0xE005,
                    "description": "Reversed bracket top"
                },
                "rightRepeatSmall": {
                    "codepoint": 0xE04D,
                    "description": "Right repeat sign within bar"
                },
                "schaefferClef": {
                    "codepoint": 0xE06F,
                    "description": "Sch\u00e4ffer clef"
                },
                "schaefferFClefToGClef": {
                    "codepoint": 0xE072,
                    "description": "Sch\u00e4ffer F clef to G clef change"
                },
                "schaefferGClefToFClef": {
                    "codepoint": 0xE071,
                    "description": "Sch\u00e4ffer G clef to F clef change"
                },
                "schaefferPreviousClef": {
                    "codepoint": 0xE070,
                    "description": "Sch\u00e4ffer previous clef"
                },
                "segno": {
                    "alternateCodepoint": 0x1D10B,
                    "codepoint": 0xE047,
                    "description": "Segno"
                },
                "segnoSerpent1": {
                    "codepoint": 0xE04A,
                    "description": "Segno (serpent)"
                },
                "segnoSerpent2": {
                    "codepoint": 0xE04B,
                    "description": "Segno (serpent with vertical lines)"
                },
                "semipitchedPercussionClef1": {
                    "codepoint": 0xE06B,
                    "description": "Semi-pitched percussion clef 1"
                },
                "semipitchedPercussionClef2": {
                    "codepoint": 0xE06C,
                    "description": "Semi-pitched percussion clef 2"
                },
                "smnFlat": {
                    "codepoint": 0xEC52,
                    "description": "Flat"
                },
                "smnFlatWhite": {
                    "codepoint": 0xEC53,
                    "description": "Flat (white)"
                },
                "smnHistoryDoubleFlat": {
                    "codepoint": 0xEC57,
                    "description": "Double flat history sign"
                },
                "smnHistoryDoubleSharp": {
                    "codepoint": 0xEC55,
                    "description": "Double sharp history sign"
                },
                "smnHistoryFlat": {
                    "codepoint": 0xEC56,
                    "description": "Flat history sign"
                },
                "smnHistorySharp": {
                    "codepoint": 0xEC54,
                    "description": "Sharp history sign"
                },
                "smnNatural": {
                    "codepoint": 0xEC58,
                    "description": "Natural (N)"
                },
                "smnSharp": {
                    "codepoint": 0xEC50,
                    "description": "Sharp stem up"
                },
                "smnSharpDown": {
                    "codepoint": 0xEC59,
                    "description": "Sharp stem down"
                },
                "smnSharpWhite": {
                    "codepoint": 0xEC51,
                    "description": "Sharp (white) stem up"
                },
                "smnSharpWhiteDown": {
                    "codepoint": 0xEC5A,
                    "description": "Sharp (white) stem down"
                },
                "splitBarDivider": {
                    "codepoint": 0xE00A,
                    "description": "Split bar divider (bar spans a system break)"
                },
                "staff1Line": {
                    "alternateCodepoint": 0x1D116,
                    "codepoint": 0xE010,
                    "description": "1-line staff"
                },
                "staff1LineNarrow": {
                    "codepoint": 0xE01C,
                    "description": "1-line staff (narrow)"
                },
                "staff1LineWide": {
                    "codepoint": 0xE016,
                    "description": "1-line staff (wide)"
                },
                "staff2Lines": {
                    "alternateCodepoint": 0x1D117,
                    "codepoint": 0xE011,
                    "description": "2-line staff"
                },
                "staff2LinesNarrow": {
                    "codepoint": 0xE01D,
                    "description": "2-line staff (narrow)"
                },
                "staff2LinesWide": {
                    "codepoint": 0xE017,
                    "description": "2-line staff (wide)"
                },
                "staff3Lines": {
                    "alternateCodepoint": 0x1D118,
                    "codepoint": 0xE012,
                    "description": "3-line staff"
                },
                "staff3LinesNarrow": {
                    "codepoint": 0xE01E,
                    "description": "3-line staff (narrow)"
                },
                "staff3LinesWide": {
                    "codepoint": 0xE018,
                    "description": "3-line staff (wide)"
                },
                "staff4Lines": {
                    "alternateCodepoint": 0x1D119,
                    "codepoint": 0xE013,
                    "description": "4-line staff"
                },
                "staff4LinesNarrow": {
                    "codepoint": 0xE01F,
                    "description": "4-line staff (narrow)"
                },
                "staff4LinesWide": {
                    "codepoint": 0xE019,
                    "description": "4-line staff (wide)"
                },
                "staff5Lines": {
                    "alternateCodepoint": 0x1D11A,
                    "codepoint": 0xE014,
                    "description": "5-line staff"
                },
                "staff5LinesNarrow": {
                    "codepoint": 0xE020,
                    "description": "5-line staff (narrow)"
                },
                "staff5LinesWide": {
                    "codepoint": 0xE01A,
                    "description": "5-line staff (wide)"
                },
                "staff6Lines": {
                    "alternateCodepoint": 0x1D11B,
                    "codepoint": 0xE015,
                    "description": "6-line staff"
                },
                "staff6LinesNarrow": {
                    "codepoint": 0xE021,
                    "description": "6-line staff (narrow)"
                },
                "staff6LinesWide": {
                    "codepoint": 0xE01B,
                    "description": "6-line staff (wide)"
                },
                "staffDivideArrowDown": {
                    "codepoint": 0xE00B,
                    "description": "Staff divide arrow down"
                },
                "staffDivideArrowUp": {
                    "codepoint": 0xE00C,
                    "description": "Staff divide arrow up"
                },
                "staffDivideArrowUpDown": {
                    "codepoint": 0xE00D,
                    "description": "Staff divide arrows"
                },
                "staffPosLower1": {
                    "codepoint": 0xEB98,
                    "description": "Lower 1 staff position"
                },
                "staffPosLower2": {
                    "codepoint": 0xEB99,
                    "description": "Lower 2 staff positions"
                },
                "staffPosLower3": {
                    "codepoint": 0xEB9A,
                    "description": "Lower 3 staff positions"
                },
                "staffPosLower4": {
                    "codepoint": 0xEB9B,
                    "description": "Lower 4 staff positions"
                },
                "staffPosLower5": {
                    "codepoint": 0xEB9C,
                    "description": "Lower 5 staff positions"
                },
                "staffPosLower6": {
                    "codepoint": 0xEB9D,
                    "description": "Lower 6 staff positions"
                },
                "staffPosLower7": {
                    "codepoint": 0xEB9E,
                    "description": "Lower 7 staff positions"
                },
                "staffPosLower8": {
                    "codepoint": 0xEB9F,
                    "description": "Lower 8 staff positions"
                },
                "staffPosRaise1": {
                    "codepoint": 0xEB90,
                    "description": "Raise 1 staff position"
                },
                "staffPosRaise2": {
                    "codepoint": 0xEB91,
                    "description": "Raise 2 staff positions"
                },
                "staffPosRaise3": {
                    "codepoint": 0xEB92,
                    "description": "Raise 3 staff positions"
                },
                "staffPosRaise4": {
                    "codepoint": 0xEB93,
                    "description": "Raise 4 staff positions"
                },
                "staffPosRaise5": {
                    "codepoint": 0xEB94,
                    "description": "Raise 5 staff positions"
                },
                "staffPosRaise6": {
                    "codepoint": 0xEB95,
                    "description": "Raise 6 staff positions"
                },
                "staffPosRaise7": {
                    "codepoint": 0xEB96,
                    "description": "Raise 7 staff positions"
                },
                "staffPosRaise8": {
                    "codepoint": 0xEB97,
                    "description": "Raise 8 staff positions"
                },
                "stem": {
                    "alternateCodepoint": 0x1D165,
                    "codepoint": 0xE210,
                    "description": "Combining stem"
                },
                "stemBowOnBridge": {
                    "codepoint": 0xE215,
                    "description": "Combining bow on bridge stem"
                },
                "stemBowOnTailpiece": {
                    "codepoint": 0xE216,
                    "description": "Combining bow on tailpiece stem"
                },
                "stemBuzzRoll": {
                    "codepoint": 0xE217,
                    "description": "Combining buzz roll stem"
                },
                "stemDamp": {
                    "codepoint": 0xE218,
                    "description": "Combining damp stem"
                },
                "stemHarpStringNoise": {
                    "codepoint": 0xE21F,
                    "description": "Combining harp string noise stem"
                },
                "stemMultiphonicsBlack": {
                    "codepoint": 0xE21A,
                    "description": "Combining multiphonics (black) stem"
                },
                "stemMultiphonicsBlackWhite": {
                    "codepoint": 0xE21C,
                    "description": "Combining multiphonics (black and white) stem"
                },
                "stemMultiphonicsWhite": {
                    "codepoint": 0xE21B,
                    "description": "Combining multiphonics (white) stem"
                },
                "stemPendereckiTremolo": {
                    "codepoint": 0xE213,
                    "description": "Combining Penderecki unmeasured tremolo stem"
                },
                "stemRimShot": {
                    "codepoint": 0xE21E,
                    "description": "Combining rim shot stem"
                },
                "stemSprechgesang": {
                    "alternateCodepoint": 0x1D166,
                    "codepoint": 0xE211,
                    "description": "Combining sprechgesang stem"
                },
                "stemSulPonticello": {
                    "codepoint": 0xE214,
                    "description": "Combining sul ponticello (bow behind bridge) stem"
                },
                "stemSussurando": {
                    "codepoint": 0xE21D,
                    "description": "Combining sussurando stem"
                },
                "stemSwished": {
                    "codepoint": 0xE212,
                    "description": "Combining swished stem"
                },
                "stemVibratoPulse": {
                    "codepoint": 0xE219,
                    "description": "Combining vibrato pulse accent (Saunders) stem"
                },
                "stockhausenTremolo": {
                    "codepoint": 0xE232,
                    "description": "Stockhausen irregular tremolo (\"Morsen\", like Morse code)"
                },
                "stringsBowBehindBridge": {
                    "codepoint": 0xE618,
                    "description": "Bow behind bridge (sul ponticello)"
                },
                "stringsBowBehindBridgeFourStrings": {
                    "codepoint": 0xE62A,
                    "description": "Bow behind bridge on four strings"
                },
                "stringsBowBehindBridgeOneString": {
                    "codepoint": 0xE627,
                    "description": "Bow behind bridge on one string"
                },
                "stringsBowBehindBridgeThreeStrings": {
                    "codepoint": 0xE629,
                    "description": "Bow behind bridge on three strings"
                },
                "stringsBowBehindBridgeTwoStrings": {
                    "codepoint": 0xE628,
                    "description": "Bow behind bridge on two strings"
                },
                "stringsBowOnBridge": {
                    "codepoint": 0xE619,
                    "description": "Bow on top of bridge"
                },
                "stringsBowOnTailpiece": {
                    "codepoint": 0xE61A,
                    "description": "Bow on tailpiece"
                },
                "stringsChangeBowDirection": {
                    "codepoint": 0xE626,
                    "description": "Change bow direction, indeterminate"
                },
                "stringsDownBow": {
                    "alternateCodepoint": 0x1D1AA,
                    "codepoint": 0xE610,
                    "description": "Down bow"
                },
                "stringsDownBowTurned": {
                    "codepoint": 0xE611,
                    "description": "Turned down bow"
                },
                "stringsFouette": {
                    "codepoint": 0xE622,
                    "description": "Fouett\u00e9"
                },
                "stringsHalfHarmonic": {
                    "codepoint": 0xE615,
                    "description": "Half-harmonic"
                },
                "stringsHarmonic": {
                    "alternateCodepoint": 0x1D1AC,
                    "codepoint": 0xE614,
                    "description": "Harmonic"
                },
                "stringsJeteAbove": {
                    "codepoint": 0xE620,
                    "description": "Jet\u00e9 (gettato) above"
                },
                "stringsJeteBelow": {
                    "codepoint": 0xE621,
                    "description": "Jet\u00e9 (gettato) below"
                },
                "stringsMuteOff": {
                    "codepoint": 0xE617,
                    "description": "Mute off"
                },
                "stringsMuteOn": {
                    "codepoint": 0xE616,
                    "description": "Mute on"
                },
                "stringsOverpressureDownBow": {
                    "codepoint": 0xE61B,
                    "description": "Overpressure, down bow"
                },
                "stringsOverpressureNoDirection": {
                    "codepoint": 0xE61F,
                    "description": "Overpressure, no bow direction"
                },
                "stringsOverpressurePossibileDownBow": {
                    "codepoint": 0xE61D,
                    "description": "Overpressure possibile, down bow"
                },
                "stringsOverpressurePossibileUpBow": {
                    "codepoint": 0xE61E,
                    "description": "Overpressure possibile, up bow"
                },
                "stringsOverpressureUpBow": {
                    "codepoint": 0xE61C,
                    "description": "Overpressure, up bow"
                },
                "stringsThumbPosition": {
                    "codepoint": 0xE624,
                    "description": "Thumb position"
                },
                "stringsThumbPositionTurned": {
                    "codepoint": 0xE625,
                    "description": "Turned thumb position"
                },
                "stringsUpBow": {
                    "alternateCodepoint": 0x1D1AB,
                    "codepoint": 0xE612,
                    "description": "Up bow"
                },
                "stringsUpBowTurned": {
                    "codepoint": 0xE613,
                    "description": "Turned up bow"
                },
                "stringsVibratoPulse": {
                    "codepoint": 0xE623,
                    "description": "Vibrato pulse accent (Saunders) for stem"
                },
                "systemDivider": {
                    "codepoint": 0xE007,
                    "description": "System divider"
                },
                "systemDividerExtraLong": {
                    "codepoint": 0xE009,
                    "description": "Extra long system divider"
                },
                "systemDividerLong": {
                    "codepoint": 0xE008,
                    "description": "Long system divider"
                },
                "textAugmentationDot": {
                    "codepoint": 0xE1FC,
                    "description": "Augmentation dot"
                },
                "textBlackNoteFrac16thLongStem": {
                    "codepoint": 0xE1F5,
                    "description": "Black note, fractional 16th beam, long stem"
                },
                "textBlackNoteFrac16thShortStem": {
                    "codepoint": 0xE1F4,
                    "description": "Black note, fractional 16th beam, short stem"
                },
                "textBlackNoteFrac32ndLongStem": {
                    "codepoint": 0xE1F6,
                    "description": "Black note, fractional 32nd beam, long stem"
                },
                "textBlackNoteFrac8thLongStem": {
                    "codepoint": 0xE1F3,
                    "description": "Black note, fractional 8th beam, long stem"
                },
                "textBlackNoteFrac8thShortStem": {
                    "codepoint": 0xE1F2,
                    "description": "Black note, fractional 8th beam, short stem"
                },
                "textBlackNoteLongStem": {
                    "codepoint": 0xE1F1,
                    "description": "Black note, long stem"
                },
                "textBlackNoteShortStem": {
                    "codepoint": 0xE1F0,
                    "description": "Black note, short stem"
                },
                "textCont16thBeamLongStem": {
                    "codepoint": 0xE1FA,
                    "description": "Continuing 16th beam for long stem"
                },
                "textCont16thBeamShortStem": {
                    "codepoint": 0xE1F9,
                    "description": "Continuing 16th beam for short stem"
                },
                "textCont32ndBeamLongStem": {
                    "codepoint": 0xE1FB,
                    "description": "Continuing 32nd beam for long stem"
                },
                "textCont8thBeamLongStem": {
                    "codepoint": 0xE1F8,
                    "description": "Continuing 8th beam for long stem"
                },
                "textCont8thBeamShortStem": {
                    "codepoint": 0xE1F7,
                    "description": "Continuing 8th beam for short stem"
                },
                "textTie": {
                    "codepoint": 0xE1FD,
                    "description": "Tie"
                },
                "textTuplet3LongStem": {
                    "codepoint": 0xE202,
                    "description": "Tuplet number 3 for long stem"
                },
                "textTuplet3ShortStem": {
                    "codepoint": 0xE1FF,
                    "description": "Tuplet number 3 for short stem"
                },
                "textTupletBracketEndLongStem": {
                    "codepoint": 0xE203,
                    "description": "Tuplet bracket end for long stem"
                },
                "textTupletBracketEndShortStem": {
                    "codepoint": 0xE200,
                    "description": "Tuplet bracket end for short stem"
                },
                "textTupletBracketStartLongStem": {
                    "codepoint": 0xE201,
                    "description": "Tuplet bracket start for long stem"
                },
                "textTupletBracketStartShortStem": {
                    "codepoint": 0xE1FE,
                    "description": "Tuplet bracket start for short stem"
                },
                "timeSig0": {
                    "codepoint": 0xE080,
                    "description": "Time signature 0"
                },
                "timeSig0Reversed": {
                    "codepoint": 0xECF0,
                    "description": "Reversed time signature 0"
                },
                "timeSig0Turned": {
                    "codepoint": 0xECE0,
                    "description": "Turned time signature 0"
                },
                "timeSig1": {
                    "codepoint": 0xE081,
                    "description": "Time signature 1"
                },
                "timeSig1Reversed": {
                    "codepoint": 0xECF1,
                    "description": "Reversed time signature 1"
                },
                "timeSig1Turned": {
                    "codepoint": 0xECE1,
                    "description": "Turned time signature 1"
                },
                "timeSig2": {
                    "codepoint": 0xE082,
                    "description": "Time signature 2"
                },
                "timeSig2Reversed": {
                    "codepoint": 0xECF2,
                    "description": "Reversed time signature 2"
                },
                "timeSig2Turned": {
                    "codepoint": 0xECE2,
                    "description": "Turned time signature 2"
                },
                "timeSig3": {
                    "codepoint": 0xE083,
                    "description": "Time signature 3"
                },
                "timeSig3Reversed": {
                    "codepoint": 0xECF3,
                    "description": "Reversed time signature 3"
                },
                "timeSig3Turned": {
                    "codepoint": 0xECE3,
                    "description": "Turned time signature 3"
                },
                "timeSig4": {
                    "codepoint": 0xE084,
                    "description": "Time signature 4"
                },
                "timeSig4Reversed": {
                    "codepoint": 0xECF4,
                    "description": "Reversed time signature 4"
                },
                "timeSig4Turned": {
                    "codepoint": 0xECE4,
                    "description": "Turned time signature 4"
                },
                "timeSig5": {
                    "codepoint": 0xE085,
                    "description": "Time signature 5"
                },
                "timeSig5Reversed": {
                    "codepoint": 0xECF5,
                    "description": "Reversed time signature 5"
                },
                "timeSig5Turned": {
                    "codepoint": 0xECE5,
                    "description": "Turned time signature 5"
                },
                "timeSig6": {
                    "codepoint": 0xE086,
                    "description": "Time signature 6"
                },
                "timeSig6Reversed": {
                    "codepoint": 0xECF6,
                    "description": "Reversed time signature 6"
                },
                "timeSig6Turned": {
                    "codepoint": 0xECE6,
                    "description": "Turned time signature 6"
                },
                "timeSig7": {
                    "codepoint": 0xE087,
                    "description": "Time signature 7"
                },
                "timeSig7Reversed": {
                    "codepoint": 0xECF7,
                    "description": "Reversed time signature 7"
                },
                "timeSig7Turned": {
                    "codepoint": 0xECE7,
                    "description": "Turned time signature 7"
                },
                "timeSig8": {
                    "codepoint": 0xE088,
                    "description": "Time signature 8"
                },
                "timeSig8Reversed": {
                    "codepoint": 0xECF8,
                    "description": "Reversed time signature 8"
                },
                "timeSig8Turned": {
                    "codepoint": 0xECE8,
                    "description": "Turned time signature 8"
                },
                "timeSig9": {
                    "codepoint": 0xE089,
                    "description": "Time signature 9"
                },
                "timeSig9Reversed": {
                    "codepoint": 0xECF9,
                    "description": "Reversed time signature 9"
                },
                "timeSig9Turned": {
                    "codepoint": 0xECE9,
                    "description": "Turned time signature 9"
                },
                "timeSigBracketLeft": {
                    "codepoint": 0xEC80,
                    "description": "Left bracket for whole time signature"
                },
                "timeSigBracketLeftSmall": {
                    "codepoint": 0xEC82,
                    "description": "Left bracket for numerator only"
                },
                "timeSigBracketRight": {
                    "codepoint": 0xEC81,
                    "description": "Right bracket for whole time signature"
                },
                "timeSigBracketRightSmall": {
                    "codepoint": 0xEC83,
                    "description": "Right bracket for numerator only"
                },
                "timeSigCombDenominator": {
                    "codepoint": 0xE09F,
                    "description": "Control character for denominator digit"
                },
                "timeSigCombNumerator": {
                    "codepoint": 0xE09E,
                    "description": "Control character for numerator digit"
                },
                "timeSigComma": {
                    "codepoint": 0xE096,
                    "description": "Time signature comma"
                },
                "timeSigCommon": {
                    "alternateCodepoint": 0x1D134,
                    "codepoint": 0xE08A,
                    "description": "Common time"
                },
                "timeSigCommonReversed": {
                    "codepoint": 0xECFA,
                    "description": "Reversed common time"
                },
                "timeSigCommonTurned": {
                    "codepoint": 0xECEA,
                    "description": "Turned common time"
                },
                "timeSigCut2": {
                    "codepoint": 0xEC85,
                    "description": "Cut time (Bach)"
                },
                "timeSigCut3": {
                    "codepoint": 0xEC86,
                    "description": "Cut triple time (9/8)"
                },
                "timeSigCutCommon": {
                    "alternateCodepoint": 0x1D135,
                    "codepoint": 0xE08B,
                    "description": "Cut time"
                },
                "timeSigCutCommonReversed": {
                    "codepoint": 0xECFB,
                    "description": "Reversed cut time"
                },
                "timeSigCutCommonTurned": {
                    "codepoint": 0xECEB,
                    "description": "Turned cut time"
                },
                "timeSigEquals": {
                    "codepoint": 0xE08F,
                    "description": "Time signature equals"
                },
                "timeSigFractionHalf": {
                    "codepoint": 0xE098,
                    "description": "Time signature fraction \u00bd"
                },
                "timeSigFractionOneThird": {
                    "codepoint": 0xE09A,
                    "description": "Time signature fraction \u2153"
                },
                "timeSigFractionQuarter": {
                    "codepoint": 0xE097,
                    "description": "Time signature fraction \u00bc"
                },
                "timeSigFractionThreeQuarters": {
                    "codepoint": 0xE099,
                    "description": "Time signature fraction \u00be"
                },
                "timeSigFractionTwoThirds": {
                    "codepoint": 0xE09B,
                    "description": "Time signature fraction \u2154"
                },
                "timeSigFractionalSlash": {
                    "codepoint": 0xE08E,
                    "description": "Time signature fraction slash"
                },
                "timeSigMinus": {
                    "codepoint": 0xE090,
                    "description": "Time signature minus"
                },
                "timeSigMultiply": {
                    "codepoint": 0xE091,
                    "description": "Time signature multiply"
                },
                "timeSigOpenPenderecki": {
                    "codepoint": 0xE09D,
                    "description": "Open time signature (Penderecki)"
                },
                "timeSigParensLeft": {
                    "codepoint": 0xE094,
                    "description": "Left parenthesis for whole time signature"
                },
                "timeSigParensLeftSmall": {
                    "codepoint": 0xE092,
                    "description": "Left parenthesis for numerator only"
                },
                "timeSigParensRight": {
                    "codepoint": 0xE095,
                    "description": "Right parenthesis for whole time signature"
                },
                "timeSigParensRightSmall": {
                    "codepoint": 0xE093,
                    "description": "Right parenthesis for numerator only"
                },
                "timeSigPlus": {
                    "codepoint": 0xE08C,
                    "description": "Time signature +"
                },
                "timeSigPlusSmall": {
                    "codepoint": 0xE08D,
                    "description": "Time signature + (for numerators)"
                },
                "timeSigSlash": {
                    "codepoint": 0xEC84,
                    "description": "Time signature slash separator"
                },
                "timeSigX": {
                    "codepoint": 0xE09C,
                    "description": "Open time signature"
                },
                "tremolo1": {
                    "alternateCodepoint": 0x1D167,
                    "codepoint": 0xE220,
                    "description": "Combining tremolo 1"
                },
                "tremolo2": {
                    "alternateCodepoint": 0x1D168,
                    "codepoint": 0xE221,
                    "description": "Combining tremolo 2"
                },
                "tremolo3": {
                    "alternateCodepoint": 0x1D169,
                    "codepoint": 0xE222,
                    "description": "Combining tremolo 3"
                },
                "tremolo4": {
                    "codepoint": 0xE223,
                    "description": "Combining tremolo 4"
                },
                "tremolo5": {
                    "codepoint": 0xE224,
                    "description": "Combining tremolo 5"
                },
                "tremoloDivisiDots2": {
                    "codepoint": 0xE22E,
                    "description": "Divide measured tremolo by 2"
                },
                "tremoloDivisiDots3": {
                    "codepoint": 0xE22F,
                    "description": "Divide measured tremolo by 3"
                },
                "tremoloDivisiDots4": {
                    "codepoint": 0xE230,
                    "description": "Divide measured tremolo by 4"
                },
                "tremoloDivisiDots6": {
                    "codepoint": 0xE231,
                    "description": "Divide measured tremolo by 6"
                },
                "tremoloFingered1": {
                    "alternateCodepoint": 0x1D16A,
                    "codepoint": 0xE225,
                    "description": "Fingered tremolo 1"
                },
                "tremoloFingered2": {
                    "alternateCodepoint": 0x1D16B,
                    "codepoint": 0xE226,
                    "description": "Fingered tremolo 2"
                },
                "tremoloFingered3": {
                    "alternateCodepoint": 0x1D16C,
                    "codepoint": 0xE227,
                    "description": "Fingered tremolo 3"
                },
                "tremoloFingered4": {
                    "codepoint": 0xE228,
                    "description": "Fingered tremolo 4"
                },
                "tremoloFingered5": {
                    "codepoint": 0xE229,
                    "description": "Fingered tremolo 5"
                },
                "tripleTongueAbove": {
                    "alternateCodepoint": 0x1D18B,
                    "codepoint": 0xE5F2,
                    "description": "Triple-tongue above"
                },
                "tripleTongueBelow": {
                    "codepoint": 0xE5F3,
                    "description": "Triple-tongue below"
                },
                "tuplet0": {
                    "codepoint": 0xE880,
                    "description": "Tuplet 0"
                },
                "tuplet1": {
                    "codepoint": 0xE881,
                    "description": "Tuplet 1"
                },
                "tuplet2": {
                    "codepoint": 0xE882,
                    "description": "Tuplet 2"
                },
                "tuplet3": {
                    "codepoint": 0xE883,
                    "description": "Tuplet 3"
                },
                "tuplet4": {
                    "codepoint": 0xE884,
                    "description": "Tuplet 4"
                },
                "tuplet5": {
                    "codepoint": 0xE885,
                    "description": "Tuplet 5"
                },
                "tuplet6": {
                    "codepoint": 0xE886,
                    "description": "Tuplet 6"
                },
                "tuplet7": {
                    "codepoint": 0xE887,
                    "description": "Tuplet 7"
                },
                "tuplet8": {
                    "codepoint": 0xE888,
                    "description": "Tuplet 8"
                },
                "tuplet9": {
                    "codepoint": 0xE889,
                    "description": "Tuplet 9"
                },
                "tupletColon": {
                    "codepoint": 0xE88A,
                    "description": "Tuplet colon"
                },
                "unmeasuredTremolo": {
                    "codepoint": 0xE22C,
                    "description": "Wieniawski unmeasured tremolo"
                },
                "unmeasuredTremoloSimple": {
                    "codepoint": 0xE22D,
                    "description": "Wieniawski unmeasured tremolo (simpler)"
                },
                "unpitchedPercussionClef1": {
                    "alternateCodepoint": 0x1D125,
                    "codepoint": 0xE069,
                    "description": "Unpitched percussion clef 1"
                },
                "unpitchedPercussionClef2": {
                    "alternateCodepoint": 0x1D126,
                    "codepoint": 0xE06A,
                    "description": "Unpitched percussion clef 2"
                },
                "ventiduesima": {
                    "codepoint": 0xE517,
                    "description": "Ventiduesima"
                },
                "ventiduesimaAlta": {
                    "codepoint": 0xE518,
                    "description": "Ventiduesima alta"
                },
                "ventiduesimaBassa": {
                    "codepoint": 0xE519,
                    "description": "Ventiduesima bassa"
                },
                "ventiduesimaBassaMb": {
                    "codepoint": 0xE51E,
                    "description": "Ventiduesima bassa (mb)"
                },
                "vocalFingerClickStockhausen": {
                    "codepoint": 0xE649,
                    "description": "Finger click (Stockhausen)"
                },
                "vocalMouthClosed": {
                    "codepoint": 0xE640,
                    "description": "Mouth closed"
                },
                "vocalMouthOpen": {
                    "codepoint": 0xE642,
                    "description": "Mouth open"
                },
                "vocalMouthPursed": {
                    "codepoint": 0xE644,
                    "description": "Mouth pursed"
                },
                "vocalMouthSlightlyOpen": {
                    "codepoint": 0xE641,
                    "description": "Mouth slightly open"
                },
                "vocalMouthWideOpen": {
                    "codepoint": 0xE643,
                    "description": "Mouth wide open"
                },
                "vocalNasalVoice": {
                    "codepoint": 0xE647,
                    "description": "Nasal voice"
                },
                "vocalSprechgesang": {
                    "codepoint": 0xE645,
                    "description": "Sprechgesang"
                },
                "vocalTongueClickStockhausen": {
                    "codepoint": 0xE648,
                    "description": "Tongue click (Stockhausen)"
                },
                "vocalTongueFingerClickStockhausen": {
                    "codepoint": 0xE64A,
                    "description": "Tongue and finger click (Stockhausen)"
                },
                "vocalsSussurando": {
                    "codepoint": 0xE646,
                    "description": "Combining sussurando for stem"
                },
                "wiggleArpeggiatoDown": {
                    "codepoint": 0xEAAA,
                    "description": "Arpeggiato wiggle segment, downwards"
                },
                "wiggleArpeggiatoDownArrow": {
                    "codepoint": 0xEAAE,
                    "description": "Arpeggiato arrowhead down"
                },
                "wiggleArpeggiatoDownSwash": {
                    "codepoint": 0xEAAC,
                    "description": "Arpeggiato downward swash"
                },
                "wiggleArpeggiatoUp": {
                    "codepoint": 0xEAA9,
                    "description": "Arpeggiato wiggle segment, upwards"
                },
                "wiggleArpeggiatoUpArrow": {
                    "codepoint": 0xEAAD,
                    "description": "Arpeggiato arrowhead up"
                },
                "wiggleArpeggiatoUpSwash": {
                    "codepoint": 0xEAAB,
                    "description": "Arpeggiato upward swash"
                },
                "wiggleCircular": {
                    "codepoint": 0xEAC9,
                    "description": "Circular motion segment"
                },
                "wiggleCircularConstant": {
                    "codepoint": 0xEAC0,
                    "description": "Constant circular motion segment"
                },
                "wiggleCircularConstantFlipped": {
                    "codepoint": 0xEAC1,
                    "description": "Constant circular motion segment (flipped)"
                },
                "wiggleCircularConstantFlippedLarge": {
                    "codepoint": 0xEAC3,
                    "description": "Constant circular motion segment (flipped, large)"
                },
                "wiggleCircularConstantLarge": {
                    "codepoint": 0xEAC2,
                    "description": "Constant circular motion segment (large)"
                },
                "wiggleCircularEnd": {
                    "codepoint": 0xEACB,
                    "description": "Circular motion end"
                },
                "wiggleCircularLarge": {
                    "codepoint": 0xEAC8,
                    "description": "Circular motion segment, large"
                },
                "wiggleCircularLarger": {
                    "codepoint": 0xEAC7,
                    "description": "Circular motion segment, larger"
                },
                "wiggleCircularLargerStill": {
                    "codepoint": 0xEAC6,
                    "description": "Circular motion segment, larger still"
                },
                "wiggleCircularLargest": {
                    "codepoint": 0xEAC5,
                    "description": "Circular motion segment, largest"
                },
                "wiggleCircularSmall": {
                    "codepoint": 0xEACA,
                    "description": "Circular motion segment, small"
                },
                "wiggleCircularStart": {
                    "codepoint": 0xEAC4,
                    "description": "Circular motion start"
                },
                "wiggleGlissando": {
                    "codepoint": 0xEAAF,
                    "description": "Glissando wiggle segment"
                },
                "wiggleGlissandoGroup1": {
                    "codepoint": 0xEABD,
                    "description": "Group glissando 1"
                },
                "wiggleGlissandoGroup2": {
                    "codepoint": 0xEABE,
                    "description": "Group glissando 2"
                },
                "wiggleGlissandoGroup3": {
                    "codepoint": 0xEABF,
                    "description": "Group glissando 3"
                },
                "wiggleRandom1": {
                    "codepoint": 0xEAF0,
                    "description": "Quasi-random squiggle 1"
                },
                "wiggleRandom2": {
                    "codepoint": 0xEAF1,
                    "description": "Quasi-random squiggle 2"
                },
                "wiggleRandom3": {
                    "codepoint": 0xEAF2,
                    "description": "Quasi-random squiggle 3"
                },
                "wiggleRandom4": {
                    "codepoint": 0xEAF3,
                    "description": "Quasi-random squiggle 4"
                },
                "wiggleSawtooth": {
                    "codepoint": 0xEABB,
                    "description": "Sawtooth line segment"
                },
                "wiggleSawtoothNarrow": {
                    "codepoint": 0xEABA,
                    "description": "Narrow sawtooth line segment"
                },
                "wiggleSawtoothWide": {
                    "codepoint": 0xEABC,
                    "description": "Wide sawtooth line segment"
                },
                "wiggleSquareWave": {
                    "codepoint": 0xEAB8,
                    "description": "Square wave line segment"
                },
                "wiggleSquareWaveNarrow": {
                    "codepoint": 0xEAB7,
                    "description": "Narrow square wave line segment"
                },
                "wiggleSquareWaveWide": {
                    "codepoint": 0xEAB9,
                    "description": "Wide square wave line segment"
                },
                "wiggleTrill": {
                    "codepoint": 0xEAA4,
                    "description": "Trill wiggle segment"
                },
                "wiggleTrillFast": {
                    "codepoint": 0xEAA3,
                    "description": "Trill wiggle segment, fast"
                },
                "wiggleTrillFaster": {
                    "codepoint": 0xEAA2,
                    "description": "Trill wiggle segment, faster"
                },
                "wiggleTrillFasterStill": {
                    "codepoint": 0xEAA1,
                    "description": "Trill wiggle segment, faster still"
                },
                "wiggleTrillFastest": {
                    "codepoint": 0xEAA0,
                    "description": "Trill wiggle segment, fastest"
                },
                "wiggleTrillSlow": {
                    "codepoint": 0xEAA5,
                    "description": "Trill wiggle segment, slow"
                },
                "wiggleTrillSlower": {
                    "codepoint": 0xEAA6,
                    "description": "Trill wiggle segment, slower"
                },
                "wiggleTrillSlowerStill": {
                    "codepoint": 0xEAA7,
                    "description": "Trill wiggle segment, slower still"
                },
                "wiggleTrillSlowest": {
                    "codepoint": 0xEAA8,
                    "description": "Trill wiggle segment, slowest"
                },
                "wiggleVIbratoLargestSlower": {
                    "codepoint": 0xEAEE,
                    "description": "Vibrato largest, slower"
                },
                "wiggleVIbratoMediumSlower": {
                    "codepoint": 0xEAE0,
                    "description": "Vibrato medium, slower"
                },
                "wiggleVibrato": {
                    "codepoint": 0xEAB0,
                    "description": "Vibrato / shake wiggle segment"
                },
                "wiggleVibratoLargeFast": {
                    "codepoint": 0xEAE5,
                    "description": "Vibrato large, fast"
                },
                "wiggleVibratoLargeFaster": {
                    "codepoint": 0xEAE4,
                    "description": "Vibrato large, faster"
                },
                "wiggleVibratoLargeFasterStill": {
                    "codepoint": 0xEAE3,
                    "description": "Vibrato large, faster still"
                },
                "wiggleVibratoLargeFastest": {
                    "codepoint": 0xEAE2,
                    "description": "Vibrato large, fastest"
                },
                "wiggleVibratoLargeSlow": {
                    "codepoint": 0xEAE6,
                    "description": "Vibrato large, slow"
                },
                "wiggleVibratoLargeSlower": {
                    "codepoint": 0xEAE7,
                    "description": "Vibrato large, slower"
                },
                "wiggleVibratoLargeSlowest": {
                    "codepoint": 0xEAE8,
                    "description": "Vibrato large, slowest"
                },
                "wiggleVibratoLargestFast": {
                    "codepoint": 0xEAEC,
                    "description": "Vibrato largest, fast"
                },
                "wiggleVibratoLargestFaster": {
                    "codepoint": 0xEAEB,
                    "description": "Vibrato largest, faster"
                },
                "wiggleVibratoLargestFasterStill": {
                    "codepoint": 0xEAEA,
                    "description": "Vibrato largest, faster still"
                },
                "wiggleVibratoLargestFastest": {
                    "codepoint": 0xEAE9,
                    "description": "Vibrato largest, fastest"
                },
                "wiggleVibratoLargestSlow": {
                    "codepoint": 0xEAED,
                    "description": "Vibrato largest, slow"
                },
                "wiggleVibratoLargestSlowest": {
                    "codepoint": 0xEAEF,
                    "description": "Vibrato largest, slowest"
                },
                "wiggleVibratoMediumFast": {
                    "codepoint": 0xEADE,
                    "description": "Vibrato medium, fast"
                },
                "wiggleVibratoMediumFaster": {
                    "codepoint": 0xEADD,
                    "description": "Vibrato medium, faster"
                },
                "wiggleVibratoMediumFasterStill": {
                    "codepoint": 0xEADC,
                    "description": "Vibrato medium, faster still"
                },
                "wiggleVibratoMediumFastest": {
                    "codepoint": 0xEADB,
                    "description": "Vibrato medium, fastest"
                },
                "wiggleVibratoMediumSlow": {
                    "codepoint": 0xEADF,
                    "description": "Vibrato medium, slow"
                },
                "wiggleVibratoMediumSlowest": {
                    "codepoint": 0xEAE1,
                    "description": "Vibrato medium, slowest"
                },
                "wiggleVibratoSmallFast": {
                    "codepoint": 0xEAD7,
                    "description": "Vibrato small, fast"
                },
                "wiggleVibratoSmallFaster": {
                    "codepoint": 0xEAD6,
                    "description": "Vibrato small, faster"
                },
                "wiggleVibratoSmallFasterStill": {
                    "codepoint": 0xEAD5,
                    "description": "Vibrato small, faster still"
                },
                "wiggleVibratoSmallFastest": {
                    "codepoint": 0xEAD4,
                    "description": "Vibrato small, fastest"
                },
                "wiggleVibratoSmallSlow": {
                    "codepoint": 0xEAD8,
                    "description": "Vibrato small, slow"
                },
                "wiggleVibratoSmallSlower": {
                    "codepoint": 0xEAD9,
                    "description": "Vibrato small, slower"
                },
                "wiggleVibratoSmallSlowest": {
                    "codepoint": 0xEADA,
                    "description": "Vibrato small, slowest"
                },
                "wiggleVibratoSmallestFast": {
                    "codepoint": 0xEAD0,
                    "description": "Vibrato smallest, fast"
                },
                "wiggleVibratoSmallestFaster": {
                    "codepoint": 0xEACF,
                    "description": "Vibrato smallest, faster"
                },
                "wiggleVibratoSmallestFasterStill": {
                    "codepoint": 0xEACE,
                    "description": "Vibrato smallest, faster still"
                },
                "wiggleVibratoSmallestFastest": {
                    "codepoint": 0xEACD,
                    "description": "Vibrato smallest, fastest"
                },
                "wiggleVibratoSmallestSlow": {
                    "codepoint": 0xEAD1,
                    "description": "Vibrato smallest, slow"
                },
                "wiggleVibratoSmallestSlower": {
                    "codepoint": 0xEAD2,
                    "description": "Vibrato smallest, slower"
                },
                "wiggleVibratoSmallestSlowest": {
                    "codepoint": 0xEAD3,
                    "description": "Vibrato smallest, slowest"
                },
                "wiggleVibratoStart": {
                    "codepoint": 0xEACC,
                    "description": "Vibrato start"
                },
                "wiggleVibratoWide": {
                    "codepoint": 0xEAB1,
                    "description": "Wide vibrato / shake wiggle segment"
                },
                "wiggleWavy": {
                    "codepoint": 0xEAB5,
                    "description": "Wavy line segment"
                },
                "wiggleWavyNarrow": {
                    "codepoint": 0xEAB4,
                    "description": "Narrow wavy line segment"
                },
                "wiggleWavyWide": {
                    "codepoint": 0xEAB6,
                    "description": "Wide wavy line segment"
                },
                "windClosedHole": {
                    "codepoint": 0xE5F4,
                    "description": "Closed hole"
                },
                "windFlatEmbouchure": {
                    "codepoint": 0xE5FB,
                    "description": "Flatter embouchure"
                },
                "windHalfClosedHole1": {
                    "codepoint": 0xE5F6,
                    "description": "Half-closed hole"
                },
                "windHalfClosedHole2": {
                    "codepoint": 0xE5F7,
                    "description": "Half-closed hole 2"
                },
                "windHalfClosedHole3": {
                    "codepoint": 0xE5F8,
                    "description": "Half-open hole"
                },
                "windLessRelaxedEmbouchure": {
                    "codepoint": 0xE5FE,
                    "description": "Somewhat relaxed embouchure"
                },
                "windLessTightEmbouchure": {
                    "codepoint": 0xE600,
                    "description": "Somewhat tight embouchure"
                },
                "windMouthpiecePop": {
                    "codepoint": 0xE60A,
                    "description": "Mouthpiece or hand pop"
                },
                "windMultiphonicsBlackStem": {
                    "codepoint": 0xE607,
                    "description": "Combining multiphonics (black) for stem"
                },
                "windMultiphonicsBlackWhiteStem": {
                    "codepoint": 0xE609,
                    "description": "Combining multiphonics (black and white) for stem"
                },
                "windMultiphonicsWhiteStem": {
                    "codepoint": 0xE608,
                    "description": "Combining multiphonics (white) for stem"
                },
                "windOpenHole": {
                    "codepoint": 0xE5F9,
                    "description": "Open hole"
                },
                "windReedPositionIn": {
                    "codepoint": 0xE606,
                    "description": "Much more reed (push inwards)"
                },
                "windReedPositionNormal": {
                    "codepoint": 0xE604,
                    "description": "Normal reed position"
                },
                "windReedPositionOut": {
                    "codepoint": 0xE605,
                    "description": "Very little reed (pull outwards)"
                },
                "windRelaxedEmbouchure": {
                    "codepoint": 0xE5FD,
                    "description": "Relaxed embouchure"
                },
                "windRimOnly": {
                    "codepoint": 0xE60B,
                    "description": "Rim only"
                },
                "windSharpEmbouchure": {
                    "codepoint": 0xE5FC,
                    "description": "Sharper embouchure"
                },
                "windStrongAirPressure": {
                    "codepoint": 0xE603,
                    "description": "Very tight embouchure / strong air pressure"
                },
                "windThreeQuartersClosedHole": {
                    "codepoint": 0xE5F5,
                    "description": "Three-quarters closed hole"
                },
                "windTightEmbouchure": {
                    "codepoint": 0xE5FF,
                    "description": "Tight embouchure"
                },
                "windTrillKey": {
                    "codepoint": 0xE5FA,
                    "description": "Trill key"
                },
                "windVeryTightEmbouchure": {
                    "codepoint": 0xE601,
                    "description": "Very tight embouchure"
                },
                "windWeakAirPressure": {
                    "codepoint": 0xE602,
                    "description": "Very relaxed embouchure / weak air-pressure"
                }
            };
        })(Metadata = Smufl.Metadata || (Smufl.Metadata = {}));
    })(Smufl = Core.Smufl || (Core.Smufl = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var Smufl;
    (function (Smufl) {
        var Metadata;
        (function (Metadata) {
            Metadata.SmuflRanges = {
                "accordion": {
                    "description": "Accordion",
                    "glyphs": [
                        "accdnRH3RanksPiccolo",
                        "accdnRH3RanksClarinet",
                        "accdnRH3RanksUpperTremolo8",
                        "accdnRH3RanksLowerTremolo8",
                        "accdnRH3RanksBassoon",
                        "accdnRH3RanksOboe",
                        "accdnRH3RanksViolin",
                        "accdnRH3RanksImitationMusette",
                        "accdnRH3RanksAuthenticMusette",
                        "accdnRH3RanksOrgan",
                        "accdnRH3RanksHarmonium",
                        "accdnRH3RanksBandoneon",
                        "accdnRH3RanksAccordion",
                        "accdnRH3RanksMaster",
                        "accdnRH3RanksTwoChoirs",
                        "accdnRH3RanksTremoloLower8ve",
                        "accdnRH3RanksTremoloUpper8ve",
                        "accdnRH3RanksDoubleTremoloLower8ve",
                        "accdnRH3RanksDoubleTremoloUpper8ve",
                        "accdnRH3RanksFullFactory",
                        "accdnRH4RanksSoprano",
                        "accdnRH4RanksAlto",
                        "accdnRH4RanksTenor",
                        "accdnRH4RanksMaster",
                        "accdnRH4RanksSoftBass",
                        "accdnRH4RanksSoftTenor",
                        "accdnRH4RanksBassAlto",
                        "accdnLH2Ranks8Round",
                        "accdnLH2Ranks16Round",
                        "accdnLH2Ranks8Plus16Round",
                        "accdnLH2RanksMasterRound",
                        "accdnLH2RanksMasterPlus16Round",
                        "accdnLH2RanksFullMasterRound",
                        "accdnLH3Ranks8Square",
                        "accdnLH3Ranks2Square",
                        "accdnLH3RanksDouble8Square",
                        "accdnLH3Ranks2Plus8Square",
                        "accdnLH3RanksTuttiSquare",
                        "accdnCombRH3RanksEmpty",
                        "accdnCombRH4RanksEmpty",
                        "accdnCombLH2RanksEmpty",
                        "accdnCombLH3RanksEmptySquare",
                        "accdnCombDot",
                        "accdnPush",
                        "accdnPull",
                        "accdnRicochet2",
                        "accdnRicochet3",
                        "accdnRicochet4",
                        "accdnRicochet5",
                        "accdnRicochet6",
                        "accdnRicochetStem2",
                        "accdnRicochetStem3",
                        "accdnRicochetStem4",
                        "accdnRicochetStem5",
                        "accdnRicochetStem6"
                    ],
                    "range_end": 0xE8DF,
                    "range_start": 0xE8A0
                },
                "analytics": {
                    "description": "Analytics",
                    "glyphs": [
                        "analyticsHauptstimme",
                        "analyticsNebenstimme",
                        "analyticsStartStimme",
                        "analyticsEndStimme",
                        "analyticsTheme",
                        "analyticsThemeRetrograde",
                        "analyticsThemeRetrogradeInversion",
                        "analyticsThemeInversion",
                        "analyticsTheme1",
                        "analyticsInversion1",
                        "analyticsChoralmelodie",
                        "analyticsHauptrhythmus"
                    ],
                    "range_end": 0xE86F,
                    "range_start": 0xE860
                },
                "arabicAccidentals": {
                    "description": "Arabic accidentals",
                    "glyphs": [
                        "accidentalDoubleFlatArabic",
                        "accidentalThreeQuarterTonesFlatArabic",
                        "accidentalFlatArabic",
                        "accidentalQuarterToneFlatArabic",
                        "accidentalNaturalArabic",
                        "accidentalQuarterToneSharpArabic",
                        "accidentalSharpArabic",
                        "accidentalThreeQuarterTonesSharpArabic",
                        "accidentalDoubleSharpArabic"
                    ],
                    "range_end": 0xED3F,
                    "range_start": 0xED30
                },
                "arelEzgiUzdilekAeuAccidentals": {
                    "description": "Arel-Ezgi-Uzdilek (AEU) accidentals",
                    "glyphs": [
                        "accidentalBuyukMucennebFlat",
                        "accidentalKucukMucennebFlat",
                        "accidentalBakiyeFlat",
                        "accidentalKomaFlat",
                        "accidentalKomaSharp",
                        "accidentalBakiyeSharp",
                        "accidentalKucukMucennebSharp",
                        "accidentalBuyukMucennebSharp"
                    ],
                    "range_end": 0xE44F,
                    "range_start": 0xE440
                },
                "arrowsAndArrowheads": {
                    "description": "Arrows and arrowheads",
                    "glyphs": [
                        "arrowBlackUp",
                        "arrowBlackUpRight",
                        "arrowBlackRight",
                        "arrowBlackDownRight",
                        "arrowBlackDown",
                        "arrowBlackDownLeft",
                        "arrowBlackLeft",
                        "arrowBlackUpLeft",
                        "arrowWhiteUp",
                        "arrowWhiteUpRight",
                        "arrowWhiteRight",
                        "arrowWhiteDownRight",
                        "arrowWhiteDown",
                        "arrowWhiteDownLeft",
                        "arrowWhiteLeft",
                        "arrowWhiteUpLeft",
                        "arrowOpenUp",
                        "arrowOpenUpRight",
                        "arrowOpenRight",
                        "arrowOpenDownRight",
                        "arrowOpenDown",
                        "arrowOpenDownLeft",
                        "arrowOpenLeft",
                        "arrowOpenUpLeft",
                        "arrowheadBlackUp",
                        "arrowheadBlackUpRight",
                        "arrowheadBlackRight",
                        "arrowheadBlackDownRight",
                        "arrowheadBlackDown",
                        "arrowheadBlackDownLeft",
                        "arrowheadBlackLeft",
                        "arrowheadBlackUpLeft",
                        "arrowheadWhiteUp",
                        "arrowheadWhiteUpRight",
                        "arrowheadWhiteRight",
                        "arrowheadWhiteDownRight",
                        "arrowheadWhiteDown",
                        "arrowheadWhiteDownLeft",
                        "arrowheadWhiteLeft",
                        "arrowheadWhiteUpLeft",
                        "arrowheadOpenUp",
                        "arrowheadOpenUpRight",
                        "arrowheadOpenRight",
                        "arrowheadOpenDownRight",
                        "arrowheadOpenDown",
                        "arrowheadOpenDownLeft",
                        "arrowheadOpenLeft",
                        "arrowheadOpenUpLeft"
                    ],
                    "range_end": 0xEB8F,
                    "range_start": 0xEB60
                },
                "BeatModifier": {
                    "description": "BeatModifier",
                    "glyphs": [
                        "articAccentAbove",
                        "articAccentBelow",
                        "articStaccatoAbove",
                        "articStaccatoBelow",
                        "articTenutoAbove",
                        "articTenutoBelow",
                        "articStaccatissimoAbove",
                        "articStaccatissimoBelow",
                        "articStaccatissimoWedgeAbove",
                        "articStaccatissimoWedgeBelow",
                        "articStaccatissimoStrokeAbove",
                        "articStaccatissimoStrokeBelow",
                        "articMarcatoAbove",
                        "articMarcatoBelow",
                        "articMarcatoStaccatoAbove",
                        "articMarcatoStaccatoBelow",
                        "articAccentStaccatoAbove",
                        "articAccentStaccatoBelow",
                        "articTenutoStaccatoAbove",
                        "articTenutoStaccatoBelow",
                        "articTenutoAccentAbove",
                        "articTenutoAccentBelow",
                        "articStressAbove",
                        "articStressBelow",
                        "articUnstressAbove",
                        "articUnstressBelow",
                        "articLaissezVibrerAbove",
                        "articLaissezVibrerBelow",
                        "articMarcatoTenutoAbove",
                        "articMarcatoTenutoBelow"
                    ],
                    "range_end": 0xE4BF,
                    "range_start": 0xE4A0
                },
                "articulationSupplement": {
                    "description": "BeatModifier supplement",
                    "glyphs": [
                        "articSoftAccentAbove",
                        "articSoftAccentBelow",
                        "articSoftAccentStaccatoAbove",
                        "articSoftAccentStaccatoBelow",
                        "articSoftAccentTenutoAbove",
                        "articSoftAccentTenutoBelow",
                        "articSoftAccentTenutoStaccatoAbove",
                        "articSoftAccentTenutoStaccatoBelow"
                    ],
                    "range_end": 0xED4F,
                    "range_start": 0xED40
                },
                "athenianSagittalExtensionMediumPrecisionAccidentals": {
                    "description": "Athenian Sagittal extension (medium precision) accidentals",
                    "glyphs": [
                        "accSagittal7v11KleismaUp",
                        "accSagittal7v11KleismaDown",
                        "accSagittal17CommaUp",
                        "accSagittal17CommaDown",
                        "accSagittal55CommaUp",
                        "accSagittal55CommaDown",
                        "accSagittal7v11CommaUp",
                        "accSagittal7v11CommaDown",
                        "accSagittal5v11SmallDiesisUp",
                        "accSagittal5v11SmallDiesisDown",
                        "accSagittalSharp5v11SDown",
                        "accSagittalFlat5v11SUp",
                        "accSagittalSharp7v11CDown",
                        "accSagittalFlat7v11CUp",
                        "accSagittalSharp55CDown",
                        "accSagittalFlat55CUp",
                        "accSagittalSharp17CDown",
                        "accSagittalFlat17CUp",
                        "accSagittalSharp7v11kDown",
                        "accSagittalFlat7v11kUp",
                        "accSagittalSharp7v11kUp",
                        "accSagittalFlat7v11kDown",
                        "accSagittalSharp17CUp",
                        "accSagittalFlat17CDown",
                        "accSagittalSharp55CUp",
                        "accSagittalFlat55CDown",
                        "accSagittalSharp7v11CUp",
                        "accSagittalFlat7v11CDown",
                        "accSagittalSharp5v11SUp",
                        "accSagittalFlat5v11SDown",
                        "accSagittalDoubleSharp5v11SDown",
                        "accSagittalDoubleFlat5v11SUp",
                        "accSagittalDoubleSharp7v11CDown",
                        "accSagittalDoubleFlat7v11CUp",
                        "accSagittalDoubleSharp55CDown",
                        "accSagittalDoubleFlat55CUp",
                        "accSagittalDoubleSharp17CDown",
                        "accSagittalDoubleFlat17CUp",
                        "accSagittalDoubleSharp7v11kDown",
                        "accSagittalDoubleFlat7v11kUp"
                    ],
                    "range_end": 0xE36F,
                    "range_start": 0xE340
                },
                "barRepeats": {
                    "description": "Bar repeats",
                    "glyphs": [
                        "repeat1Bar",
                        "repeat2Bars",
                        "repeat4Bars"
                    ],
                    "range_end": 0xE50F,
                    "range_start": 0xE500
                },
                "barlines": {
                    "description": "Barlines",
                    "glyphs": [
                        "barlineSingle",
                        "barlineDouble",
                        "barlineFinal",
                        "barlineReverseFinal",
                        "barlineHeavy",
                        "barlineHeavyHeavy",
                        "barlineDashed",
                        "barlineDotted",
                        "barlineShort",
                        "barlineTick"
                    ],
                    "range_end": 0xE03F,
                    "range_start": 0xE030
                },
                "beamedGroupsOfNotes": {
                    "description": "Beamed groups of notes",
                    "glyphs": [
                        "textBlackNoteShortStem",
                        "textBlackNoteLongStem",
                        "textBlackNoteFrac8thShortStem",
                        "textBlackNoteFrac8thLongStem",
                        "textBlackNoteFrac16thShortStem",
                        "textBlackNoteFrac16thLongStem",
                        "textBlackNoteFrac32ndLongStem",
                        "textCont8thBeamShortStem",
                        "textCont8thBeamLongStem",
                        "textCont16thBeamShortStem",
                        "textCont16thBeamLongStem",
                        "textCont32ndBeamLongStem",
                        "textAugmentationDot",
                        "textTie",
                        "textTupletBracketStartShortStem",
                        "textTuplet3ShortStem",
                        "textTupletBracketEndShortStem",
                        "textTupletBracketStartLongStem",
                        "textTuplet3LongStem",
                        "textTupletBracketEndLongStem"
                    ],
                    "range_end": 0xE20F,
                    "range_start": 0xE1F0
                },
                "beamsAndSlurs": {
                    "description": "Beams and slurs",
                    "glyphs": [
                        "controlBeginBeam",
                        "controlEndBeam",
                        "controlBeginTie",
                        "controlEndTie",
                        "controlBeginSlur",
                        "controlEndSlur",
                        "controlBeginPhrase",
                        "controlEndPhrase"
                    ],
                    "range_end": 0xE8EF,
                    "range_start": 0xE8E0
                },
                "beatersPictograms": {
                    "description": "Beaters pictograms",
                    "glyphs": [
                        "pictBeaterSoftXylophoneUp",
                        "pictBeaterSoftXylophoneDown",
                        "pictBeaterSoftXylophoneRight",
                        "pictBeaterSoftXylophoneLeft",
                        "pictBeaterMediumXylophoneUp",
                        "pictBeaterMediumXylophoneDown",
                        "pictBeaterMediumXylophoneRight",
                        "pictBeaterMediumXylophoneLeft",
                        "pictBeaterHardXylophoneUp",
                        "pictBeaterHardXylophoneDown",
                        "pictBeaterHardXylophoneRight",
                        "pictBeaterHardXylophoneLeft",
                        "pictBeaterWoodXylophoneUp",
                        "pictBeaterWoodXylophoneDown",
                        "pictBeaterWoodXylophoneRight",
                        "pictBeaterWoodXylophoneLeft",
                        "pictBeaterSoftGlockenspielUp",
                        "pictBeaterSoftGlockenspielDown",
                        "pictBeaterSoftGlockenspielRight",
                        "pictBeaterSoftGlockenspielLeft",
                        "pictBeaterHardGlockenspielUp",
                        "pictBeaterHardGlockenspielDown",
                        "pictBeaterHardGlockenspielRight",
                        "pictBeaterHardGlockenspielLeft",
                        "pictBeaterSoftTimpaniUp",
                        "pictBeaterSoftTimpaniDown",
                        "pictBeaterSoftTimpaniRight",
                        "pictBeaterSoftTimpaniLeft",
                        "pictBeaterMediumTimpaniUp",
                        "pictBeaterMediumTimpaniDown",
                        "pictBeaterMediumTimpaniRight",
                        "pictBeaterMediumTimpaniLeft",
                        "pictBeaterHardTimpaniUp",
                        "pictBeaterHardTimpaniDown",
                        "pictBeaterHardTimpaniRight",
                        "pictBeaterHardTimpaniLeft",
                        "pictBeaterWoodTimpaniUp",
                        "pictBeaterWoodTimpaniDown",
                        "pictBeaterWoodTimpaniRight",
                        "pictBeaterWoodTimpaniLeft",
                        "pictBeaterSoftBassDrumUp",
                        "pictBeaterSoftBassDrumDown",
                        "pictBeaterMediumBassDrumUp",
                        "pictBeaterMediumBassDrumDown",
                        "pictBeaterHardBassDrumUp",
                        "pictBeaterHardBassDrumDown",
                        "pictBeaterMetalBassDrumUp",
                        "pictBeaterMetalBassDrumDown",
                        "pictBeaterDoubleBassDrumUp",
                        "pictBeaterDoubleBassDrumDown",
                        "pictBeaterSoftYarnUp",
                        "pictBeaterSoftYarnDown",
                        "pictBeaterSoftYarnRight",
                        "pictBeaterSoftYarnLeft",
                        "pictBeaterMediumYarnUp",
                        "pictBeaterMediumYarnDown",
                        "pictBeaterMediumYarnRight",
                        "pictBeaterMediumYarnLeft",
                        "pictBeaterHardYarnUp",
                        "pictBeaterHardYarnDown",
                        "pictBeaterHardYarnRight",
                        "pictBeaterHardYarnLeft",
                        "pictBeaterSuperballUp",
                        "pictBeaterSuperballDown",
                        "pictBeaterSuperballRight",
                        "pictBeaterSuperballLeft",
                        "pictSuperball",
                        "pictWoundHardUp",
                        "pictWoundHardDown",
                        "pictWoundHardRight",
                        "pictWoundHardLeft",
                        "pictWoundSoftUp",
                        "pictWoundSoftDown",
                        "pictWoundSoftRight",
                        "pictWoundSoftLeft",
                        "pictGumSoftUp",
                        "pictGumSoftDown",
                        "pictGumSoftRight",
                        "pictGumSoftLeft",
                        "pictGumMediumUp",
                        "pictGumMediumDown",
                        "pictGumMediumRight",
                        "pictGumMediumLeft",
                        "pictGumHardUp",
                        "pictGumHardDown",
                        "pictGumHardRight",
                        "pictGumHardLeft",
                        "pictBeaterMetalUp",
                        "pictBeaterMetalDown",
                        "pictBeaterMetalRight",
                        "pictBeaterMetalLeft",
                        "pictBeaterHammerWoodUp",
                        "pictBeaterHammerWoodDown",
                        "pictBeaterHammerPlasticUp",
                        "pictBeaterHammerPlasticDown",
                        "pictBeaterHammerMetalUp",
                        "pictBeaterHammerMetalDown",
                        "pictBeaterSnareSticksUp",
                        "pictBeaterSnareSticksDown",
                        "pictBeaterJazzSticksUp",
                        "pictBeaterJazzSticksDown",
                        "pictBeaterTriangleUp",
                        "pictBeaterTriangleDown",
                        "pictBeaterWireBrushesUp",
                        "pictBeaterWireBrushesDown",
                        "pictBeaterBrassMalletsUp",
                        "pictBeaterBrassMalletsDown",
                        "pictBeaterSoftXylophone",
                        "pictBeaterSpoonWoodenMallet",
                        "pictBeaterGuiroScraper",
                        "pictBeaterBow",
                        "pictBeaterMallet",
                        "pictBeaterMetalHammer",
                        "pictBeaterHammer",
                        "pictBeaterKnittingNeedle",
                        "pictBeaterHand",
                        "pictBeaterFinger",
                        "pictBeaterFist",
                        "pictBeaterFingernails",
                        "pictCoins",
                        "pictDrumStick",
                        "pictBeaterCombiningParentheses",
                        "pictBeaterCombiningDashedCircle",
                        "pictBeaterBox"
                    ],
                    "range_end": 0xE7EF,
                    "range_start": 0xE770
                },
                "bellsPictograms": {
                    "description": "Bells pictograms",
                    "glyphs": [
                        "pictSleighBell",
                        "pictCowBell",
                        "pictAlmglocken",
                        "pictBellPlate",
                        "pictBell",
                        "pictHandbell",
                        "pictCencerro",
                        "pictAgogo",
                        "pictShellBells",
                        "pictJingleBells",
                        "pictBellTree"
                    ],
                    "range_end": 0xE71F,
                    "range_start": 0xE710
                },
                "brassTechniques": {
                    "description": "Brass techniques",
                    "glyphs": [
                        "brassScoop",
                        "brassLiftShort",
                        "brassLiftMedium",
                        "brassLiftLong",
                        "brassDoitShort",
                        "brassDoitMedium",
                        "brassDoitLong",
                        "brassFallLipShort",
                        "brassFallLipMedium",
                        "brassFallLipLong",
                        "brassFallSmoothShort",
                        "brassFallSmoothMedium",
                        "brassFallSmoothLong",
                        "brassFallRoughShort",
                        "brassFallRoughMedium",
                        "brassFallRoughLong",
                        "brassPlop",
                        "brassFlip",
                        "brassSmear",
                        "brassBend",
                        "brassJazzTurn",
                        "brassMuteClosed",
                        "brassMuteHalfClosed",
                        "brassMuteOpen",
                        "brassHarmonMuteClosed",
                        "brassHarmonMuteStemHalfLeft",
                        "brassHarmonMuteStemHalfRight",
                        "brassHarmonMuteStemOpen",
                        "brassLiftSmoothShort",
                        "brassLiftSmoothMedium",
                        "brassLiftSmoothLong",
                        "brassValveTrill"
                    ],
                    "range_end": 0xE5EF,
                    "range_start": 0xE5D0
                },
                "chimesPictograms": {
                    "description": "Chimes pictograms",
                    "glyphs": [
                        "pictTubularBells",
                        "pictWindChimesGlass",
                        "pictChimes",
                        "pictBambooChimes",
                        "pictShellChimes",
                        "pictGlassTubeChimes",
                        "pictGlassPlateChimes",
                        "pictMetalTubeChimes",
                        "pictMetalPlateChimes"
                    ],
                    "range_end": 0xE6CF,
                    "range_start": 0xE6C0
                },
                "chordDiagrams": {
                    "description": "Chord diagrams",
                    "glyphs": [
                        "fretboard3String",
                        "fretboard3StringNut",
                        "fretboard4String",
                        "fretboard4StringNut",
                        "fretboard5String",
                        "fretboard5StringNut",
                        "fretboard6String",
                        "fretboard6StringNut",
                        "fretboardFilledCircle",
                        "fretboardX",
                        "fretboardO"
                    ],
                    "range_end": 0xE85F,
                    "range_start": 0xE850
                },
                "chordSymbols": {
                    "description": "Chord symbols",
                    "glyphs": [
                        "csymDiminished",
                        "csymHalfDiminished",
                        "csymAugmented",
                        "csymMajorSeventh",
                        "csymMinor",
                        "csymParensLeftTall",
                        "csymParensRightTall",
                        "csymBracketLeftTall",
                        "csymBracketRightTall"
                    ],
                    "range_end": 0xE87F,
                    "range_start": 0xE870
                },
                "clefs": {
                    "description": "Clefs",
                    "glyphs": [
                        "gClef",
                        "gClef15mb",
                        "gClef8vb",
                        "gClef8va",
                        "gClef15ma",
                        "gClef8vbOld",
                        "gClef8vbCClef",
                        "gClef8vbParens",
                        "gClefLigatedNumberBelow",
                        "gClefLigatedNumberAbove",
                        "gClefArrowUp",
                        "gClefArrowDown",
                        "cClef",
                        "cClef8vb",
                        "cClefArrowUp",
                        "cClefArrowDown",
                        "cClefSquare",
                        "cClefCombining",
                        "fClef",
                        "fClef15mb",
                        "fClef8vb",
                        "fClef8va",
                        "fClef15ma",
                        "fClefArrowUp",
                        "fClefArrowDown",
                        "unpitchedPercussionClef1",
                        "unpitchedPercussionClef2",
                        "semipitchedPercussionClef1",
                        "semipitchedPercussionClef2",
                        "6stringTabClef",
                        "4stringTabClef",
                        "schaefferClef",
                        "schaefferPreviousClef",
                        "schaefferGClefToFClef",
                        "schaefferFClefToGClef",
                        "gClefReversed",
                        "gClefTurned",
                        "cClefReversed",
                        "fClefReversed",
                        "fClefTurned",
                        "bridgeClef",
                        "accdnDiatonicClef",
                        "gClefChange",
                        "cClefChange",
                        "fClefChange",
                        "clef8",
                        "clef15",
                        "clefChangeCombining"
                    ],
                    "range_end": 0xE07F,
                    "range_start": 0xE050
                },
                "combiningStaffPositions": {
                    "description": "Combining staff positions",
                    "glyphs": [
                        "staffPosRaise1",
                        "staffPosRaise2",
                        "staffPosRaise3",
                        "staffPosRaise4",
                        "staffPosRaise5",
                        "staffPosRaise6",
                        "staffPosRaise7",
                        "staffPosRaise8",
                        "staffPosLower1",
                        "staffPosLower2",
                        "staffPosLower3",
                        "staffPosLower4",
                        "staffPosLower5",
                        "staffPosLower6",
                        "staffPosLower7",
                        "staffPosLower8"
                    ],
                    "range_end": 0xEB9F,
                    "range_start": 0xEB90
                },
                "combiningStrokesForTrillsAndMordents": {
                    "description": "Combining strokes for trills and mordents",
                    "glyphs": [
                        "ornamentTopLeftConcaveStroke",
                        "ornamentTopLeftConvexStroke",
                        "ornamentHighLeftConcaveStroke",
                        "ornamentHighLeftConvexStroke",
                        "ornamentLeftVerticalStroke",
                        "ornamentLeftVerticalStrokeWithCross",
                        "ornamentLeftShakeT",
                        "ornamentLeftPlus",
                        "ornamentLowLeftConcaveStroke",
                        "ornamentLowLeftConvexStroke",
                        "ornamentBottomLeftConcaveStroke",
                        "ornamentBottomLeftConcaveStrokeLarge",
                        "ornamentBottomLeftConvexStroke",
                        "ornamentZigZagLineNoRightEnd",
                        "ornamentZigZagLineWithRightEnd",
                        "ornamentMiddleVerticalStroke",
                        "ornamentTopRightConcaveStroke",
                        "ornamentTopRightConvexStroke",
                        "ornamentHighRightConcaveStroke",
                        "ornamentHighRightConvexStroke",
                        "ornamentRightVerticalStroke",
                        "ornamentLowRightConcaveStroke",
                        "ornamentLowRightConvexStroke",
                        "ornamentBottomRightConcaveStroke",
                        "ornamentBottomRightConvexStroke"
                    ],
                    "range_end": 0xE5AF,
                    "range_start": 0xE590
                },
                "commonOrnaments": {
                    "description": "Common ornaments",
                    "glyphs": [
                        "graceNoteAcciaccaturaStemUp",
                        "graceNoteAcciaccaturaStemDown",
                        "graceNoteAppoggiaturaStemUp",
                        "graceNoteAppoggiaturaStemDown",
                        "graceNoteSlashStemUp",
                        "graceNoteSlashStemDown",
                        "ornamentTrill",
                        "ornamentTurn",
                        "ornamentTurnInverted",
                        "ornamentTurnSlash",
                        "ornamentTurnUp",
                        "ornamentTurnUpS",
                        "ornamentMordent",
                        "ornamentMordentInverted",
                        "ornamentTremblement",
                        "ornamentHaydn"
                    ],
                    "range_end": 0xE56F,
                    "range_start": 0xE560
                },
                "conductorSymbols": {
                    "description": "Conductor symbols",
                    "glyphs": [
                        "conductorStrongBeat",
                        "conductorLeftBeat",
                        "conductorRightBeat",
                        "conductorWeakBeat",
                        "conductorBeat2Simple",
                        "conductorBeat3Simple",
                        "conductorBeat4Simple",
                        "conductorBeat2Compound",
                        "conductorBeat3Compound",
                        "conductorBeat4Compound",
                        "conductorUnconducted"
                    ],
                    "range_end": 0xE89F,
                    "range_start": 0xE890
                },
                "cymbalsPictograms": {
                    "description": "Cymbals pictograms",
                    "glyphs": [
                        "pictCrashCymbals",
                        "pictSuspendedCymbal",
                        "pictHiHat",
                        "pictHiHatOnStand",
                        "pictSizzleCymbal",
                        "pictVietnameseHat",
                        "pictChineseCymbal",
                        "pictFingerCymbals",
                        "pictCymbalTongs",
                        "pictEdgeOfCymbal",
                        "pictBellOfCymbal"
                    ],
                    "range_end": 0xE72F,
                    "range_start": 0xE720
                },
                "daseianNotation": {
                    "description": "Daseian notation",
                    "glyphs": [
                        "daseianGraves1",
                        "daseianGraves2",
                        "daseianGraves3",
                        "daseianGraves4",
                        "daseianFinales1",
                        "daseianFinales2",
                        "daseianFinales3",
                        "daseianFinales4",
                        "daseianSuperiores1",
                        "daseianSuperiores2",
                        "daseianSuperiores3",
                        "daseianSuperiores4",
                        "daseianExcellentes1",
                        "daseianExcellentes2",
                        "daseianExcellentes3",
                        "daseianExcellentes4",
                        "daseianResidua1",
                        "daseianResidua2"
                    ],
                    "range_end": 0xEA4F,
                    "range_start": 0xEA30
                },
                "drumsPictograms": {
                    "description": "Drums pictograms",
                    "glyphs": [
                        "pictTimpani",
                        "pictSnareDrum",
                        "pictSnareDrumSnaresOff",
                        "pictSnareDrumMilitary",
                        "pictBassDrum",
                        "pictBassDrumOnSide",
                        "pictTenorDrum",
                        "pictTomTom",
                        "pictTomTomChinese",
                        "pictTomTomJapanese",
                        "pictTomTomIndoAmerican",
                        "pictTambourine",
                        "pictTimbales",
                        "pictBongos",
                        "pictConga",
                        "pictLogDrum",
                        "pictSlitDrum",
                        "pictBrakeDrum",
                        "pictGobletDrum",
                        "pictTabla",
                        "pictCuica"
                    ],
                    "range_end": 0xE6EF,
                    "range_start": 0xE6D0
                },
                "dynamics": {
                    "description": "Dynamics",
                    "glyphs": [
                        "dynamicPiano",
                        "dynamicMezzo",
                        "dynamicForte",
                        "dynamicRinforzando",
                        "dynamicSforzando",
                        "dynamicZ",
                        "dynamicNiente",
                        "dynamicPPPPPP",
                        "dynamicPPPPP",
                        "dynamicPPPP",
                        "dynamicPPP",
                        "dynamicPP",
                        "dynamicMP",
                        "dynamicMF",
                        "dynamicPF",
                        "dynamicFF",
                        "dynamicFFF",
                        "dynamicFFFF",
                        "dynamicFFFFF",
                        "dynamicFFFFFF",
                        "dynamicFortePiano",
                        "dynamicForzando",
                        "dynamicSforzando1",
                        "dynamicSforzandoPiano",
                        "dynamicSforzandoPianissimo",
                        "dynamicSforzato",
                        "dynamicSforzatoPiano",
                        "dynamicSforzatoFF",
                        "dynamicRinforzando1",
                        "dynamicRinforzando2",
                        "dynamicCrescendoHairpin",
                        "dynamicDiminuendoHairpin",
                        "dynamicMessaDiVoce",
                        "dynamicNienteForHairpin",
                        "dynamicHairpinParenthesisLeft",
                        "dynamicHairpinParenthesisRight",
                        "dynamicHairpinBracketLeft",
                        "dynamicHairpinBracketRight",
                        "dynamicCombinedSeparatorColon",
                        "dynamicCombinedSeparatorHyphen",
                        "dynamicCombinedSeparatorSpace"
                    ],
                    "range_end": 0xE54F,
                    "range_start": 0xE520
                },
                "electronicMusicPictograms": {
                    "description": "Electronic music pictograms",
                    "glyphs": [
                        "elecMicrophone",
                        "elecHeadphones",
                        "elecHeadset",
                        "elecDisc",
                        "elecTape",
                        "elecMixingConsole",
                        "elecUSB",
                        "elecVideoCamera",
                        "elecMonitor",
                        "elecProjector",
                        "elecLoudspeaker",
                        "elecCamera",
                        "elecPlay",
                        "elecStop",
                        "elecPause",
                        "elecFastForward",
                        "elecRewind",
                        "elecSkipForwards",
                        "elecSkipBackwards",
                        "elecLoop",
                        "elecReplay",
                        "elecShuffle",
                        "elecMute",
                        "elecUnmute",
                        "elecMicrophoneMute",
                        "elecMicrophoneUnmute",
                        "elecPowerOnOff",
                        "elecEject",
                        "elecVolumeFader",
                        "elecVolumeFaderThumb",
                        "elecVolumeLevel0",
                        "elecVolumeLevel20",
                        "elecVolumeLevel40",
                        "elecVolumeLevel60",
                        "elecVolumeLevel80",
                        "elecVolumeLevel100",
                        "elecMIDIIn",
                        "elecMIDIOut",
                        "elecMIDIController0",
                        "elecMIDIController20",
                        "elecMIDIController40",
                        "elecMIDIController60",
                        "elecMIDIController80",
                        "elecMIDIController100",
                        "elecAudioMono",
                        "elecAudioStereo",
                        "elecAudioChannelsOne",
                        "elecAudioChannelsTwo",
                        "elecAudioChannelsThreeFrontal",
                        "elecAudioChannelsThreeSurround",
                        "elecAudioChannelsFour",
                        "elecAudioChannelsFive",
                        "elecAudioChannelsSix",
                        "elecAudioChannelsSeven",
                        "elecAudioChannelsEight",
                        "elecLineIn",
                        "elecLineOut",
                        "elecAudioIn",
                        "elecAudioOut",
                        "elecVideoIn",
                        "elecVideoOut",
                        "elecDataIn",
                        "elecDataOut",
                        "elecDownload",
                        "elecUpload"
                    ],
                    "range_end": 0xEB5F,
                    "range_start": 0xEB10
                },
                "extendedHelmholtzEllisAccidentalsJustIntonation": {
                    "description": "Extended Helmholtz-Ellis accidentals (just intonation)",
                    "glyphs": [
                        "accidentalDoubleFlatOneArrowDown",
                        "accidentalFlatOneArrowDown",
                        "accidentalNaturalOneArrowDown",
                        "accidentalSharpOneArrowDown",
                        "accidentalDoubleSharpOneArrowDown",
                        "accidentalDoubleFlatOneArrowUp",
                        "accidentalFlatOneArrowUp",
                        "accidentalNaturalOneArrowUp",
                        "accidentalSharpOneArrowUp",
                        "accidentalDoubleSharpOneArrowUp",
                        "accidentalDoubleFlatTwoArrowsDown",
                        "accidentalFlatTwoArrowsDown",
                        "accidentalNaturalTwoArrowsDown",
                        "accidentalSharpTwoArrowsDown",
                        "accidentalDoubleSharpTwoArrowsDown",
                        "accidentalDoubleFlatTwoArrowsUp",
                        "accidentalFlatTwoArrowsUp",
                        "accidentalNaturalTwoArrowsUp",
                        "accidentalSharpTwoArrowsUp",
                        "accidentalDoubleSharpTwoArrowsUp",
                        "accidentalDoubleFlatThreeArrowsDown",
                        "accidentalFlatThreeArrowsDown",
                        "accidentalNaturalThreeArrowsDown",
                        "accidentalSharpThreeArrowsDown",
                        "accidentalDoubleSharpThreeArrowsDown",
                        "accidentalDoubleFlatThreeArrowsUp",
                        "accidentalFlatThreeArrowsUp",
                        "accidentalNaturalThreeArrowsUp",
                        "accidentalSharpThreeArrowsUp",
                        "accidentalDoubleSharpThreeArrowsUp",
                        "accidentalLowerOneSeptimalComma",
                        "accidentalRaiseOneSeptimalComma",
                        "accidentalLowerTwoSeptimalCommas",
                        "accidentalRaiseTwoSeptimalCommas",
                        "accidentalLowerOneUndecimalQuartertone",
                        "accidentalRaiseOneUndecimalQuartertone",
                        "accidentalLowerOneTridecimalQuartertone",
                        "accidentalRaiseOneTridecimalQuartertone",
                        "accidentalCombiningLower17Schisma",
                        "accidentalCombiningRaise17Schisma",
                        "accidentalCombiningLower19Schisma",
                        "accidentalCombiningRaise19Schisma",
                        "accidentalCombiningLower23Limit29LimitComma",
                        "accidentalCombiningRaise23Limit29LimitComma",
                        "accidentalCombiningLower31Schisma",
                        "accidentalCombiningRaise31Schisma",
                        "accidentalCombiningOpenCurlyBrace",
                        "accidentalCombiningCloseCurlyBrace",
                        "accidentalDoubleFlatEqualTempered",
                        "accidentalFlatEqualTempered",
                        "accidentalNaturalEqualTempered",
                        "accidentalSharpEqualTempered",
                        "accidentalDoubleSharpEqualTempered",
                        "accidentalQuarterFlatEqualTempered",
                        "accidentalQuarterSharpEqualTempered",
                        "accidentalCombiningLower53LimitComma",
                        "accidentalCombiningRaise53LimitComma",
                        "accidentalEnharmonicTilde",
                        "accidentalEnharmonicAlmostEqualTo",
                        "accidentalEnharmonicEquals"
                    ],
                    "range_end": 0xE2FF,
                    "range_start": 0xE2C0
                },
                "extendedSteinZimmermannAccidentals": {
                    "description": "Extended Stein-Zimmermann accidentals",
                    "glyphs": [
                        "accidentalReversedFlatArrowUp",
                        "accidentalReversedFlatArrowDown",
                        "accidentalFilledReversedFlatArrowUp",
                        "accidentalFilledReversedFlatArrowDown",
                        "accidentalReversedFlatAndFlatArrowUp",
                        "accidentalReversedFlatAndFlatArrowDown",
                        "accidentalFilledReversedFlatAndFlat",
                        "accidentalFilledReversedFlatAndFlatArrowUp",
                        "accidentalFilledReversedFlatAndFlatArrowDown",
                        "accidentalHalfSharpArrowUp",
                        "accidentalHalfSharpArrowDown",
                        "accidentalOneAndAHalfSharpsArrowUp",
                        "accidentalOneAndAHalfSharpsArrowDown"
                    ],
                    "range_end": 0xE29F,
                    "range_start": 0xE290
                },
                "figuredBass": {
                    "description": "Figured bass",
                    "glyphs": [
                        "figbass0",
                        "figbass1",
                        "figbass2",
                        "figbass2Raised",
                        "figbass3",
                        "figbass4",
                        "figbass4Raised",
                        "figbass5",
                        "figbass5Raised1",
                        "figbass5Raised2",
                        "figbass5Raised3",
                        "figbass6",
                        "figbass6Raised",
                        "figbass7",
                        "figbass7Raised1",
                        "figbass7Raised2",
                        "figbass8",
                        "figbass9",
                        "figbass9Raised",
                        "figbassDoubleFlat",
                        "figbassFlat",
                        "figbassNatural",
                        "figbassSharp",
                        "figbassDoubleSharp",
                        "figbassBracketLeft",
                        "figbassBracketRight",
                        "figbassParensLeft",
                        "figbassParensRight",
                        "figbassPlus",
                        "figbassCombiningRaising",
                        "figbassCombiningLowering",
                        "figbass6Raised2"
                    ],
                    "range_end": 0xEA6F,
                    "range_start": 0xEA50
                },
                "figuredBassSupplement": {
                    "description": "Figured bass supplement",
                    "glyphs": [
                        "figbass7Diminished"
                    ],
                    "range_end": 0xECCF,
                    "range_start": 0xECC0
                },
                "fingering": {
                    "description": "Fingering",
                    "glyphs": [
                        "fingering0",
                        "fingering1",
                        "fingering2",
                        "fingering3",
                        "fingering4",
                        "fingering5",
                        "fingeringTUpper",
                        "fingeringPLower",
                        "fingeringTLower",
                        "fingeringILower",
                        "fingeringMLower",
                        "fingeringALower",
                        "fingeringCLower",
                        "fingeringXLower",
                        "fingeringELower",
                        "fingeringOLower",
                        "fingeringSubstitutionAbove",
                        "fingeringSubstitutionBelow",
                        "fingeringSubstitutionDash",
                        "fingeringMultipleNotes"
                    ],
                    "range_end": 0xED2F,
                    "range_start": 0xED10
                },
                "flags": {
                    "description": "Flags",
                    "glyphs": [
                        "flag8thUp",
                        "flag8thDown",
                        "flag16thUp",
                        "flag16thDown",
                        "flag32ndUp",
                        "flag32ndDown",
                        "flag64thUp",
                        "flag64thDown",
                        "flag128thUp",
                        "flag128thDown",
                        "flag256thUp",
                        "flag256thDown",
                        "flag512thUp",
                        "flag512thDown",
                        "flag1024thUp",
                        "flag1024thDown",
                        "flagInternalUp",
                        "flagInternalDown"
                    ],
                    "range_end": 0xE25F,
                    "range_start": 0xE240
                },
                "frenchAndEnglishRenaissanceLuteTablature": {
                    "description": "French and English Renaissance lute tablature",
                    "glyphs": [
                        "luteFrenchFretA",
                        "luteFrenchFretB",
                        "luteFrenchFretC",
                        "luteFrenchFretD",
                        "luteFrenchFretE",
                        "luteFrenchFretF",
                        "luteFrenchFretG",
                        "luteFrenchFretH",
                        "luteFrenchFretI",
                        "luteFrenchFretK",
                        "luteFrenchFretL",
                        "luteFrenchFretM",
                        "luteFrenchFretN",
                        "luteFrench7thCourse",
                        "luteFrench8thCourse",
                        "luteFrench9thCourse",
                        "luteFrench10thCourse",
                        "luteFrenchMordentUpper",
                        "luteFrenchMordentLower",
                        "luteFrenchMordentInverted",
                        "luteFrenchAppoggiaturaBelow",
                        "luteFrenchAppoggiaturaAbove"
                    ],
                    "range_end": 0xEBDF,
                    "range_start": 0xEBC0
                },
                "functionTheorySymbols": {
                    "description": "Function theory symbols",
                    "glyphs": [
                        "functionZero",
                        "functionOne",
                        "functionTwo",
                        "functionThree",
                        "functionFour",
                        "functionFive",
                        "functionSix",
                        "functionSeven",
                        "functionEight",
                        "functionNine",
                        "functionLessThan",
                        "functionMinus",
                        "functionGreaterThan",
                        "functionSSUpper",
                        "functionSSLower",
                        "functionDUpper",
                        "functionDLower",
                        "functionDD",
                        "functionSlashedDD",
                        "functionGUpper",
                        "functionGLower",
                        "functionNUpper",
                        "functionNLower",
                        "functionPUpper",
                        "functionPLower",
                        "functionSUpper",
                        "functionSLower",
                        "functionTUpper",
                        "functionTLower",
                        "functionVUpper",
                        "functionVLower",
                        "functionBracketLeft",
                        "functionBracketRight",
                        "functionParensLeft",
                        "functionParensRight",
                        "functionAngleLeft",
                        "functionAngleRight",
                        "functionRepetition1",
                        "functionRepetition2",
                        "functionRing",
                        "functionPlus",
                        "functionFUpper",
                        "functionIUpper",
                        "functionILower",
                        "functionKUpper",
                        "functionKLower",
                        "functionLUpper",
                        "functionLLower"
                    ],
                    "range_end": 0xEA9F,
                    "range_start": 0xEA70
                },
                "functionTheorySymbolsSupplement": {
                    "description": "Function theory symbols supplement",
                    "glyphs": [
                        "functionMUpper",
                        "functionMLower",
                        "functionNUpperSuperscript",
                        "functionRLower"
                    ],
                    "range_end": 0xED0F,
                    "range_start": 0xED00
                },
                "germanRenaissanceLuteTablature": {
                    "description": "German Renaissance lute tablature",
                    "glyphs": [
                        "luteGermanALower",
                        "luteGermanBLower",
                        "luteGermanCLower",
                        "luteGermanDLower",
                        "luteGermanELower",
                        "luteGermanFLower",
                        "luteGermanGLower",
                        "luteGermanHLower",
                        "luteGermanILower",
                        "luteGermanKLower",
                        "luteGermanLLower",
                        "luteGermanMLower",
                        "luteGermanNLower",
                        "luteGermanOLower",
                        "luteGermanPLower",
                        "luteGermanQLower",
                        "luteGermanRLower",
                        "luteGermanSLower",
                        "luteGermanTLower",
                        "luteGermanVLower",
                        "luteGermanXLower",
                        "luteGermanYLower",
                        "luteGermanZLower",
                        "luteGermanAUpper",
                        "luteGermanBUpper",
                        "luteGermanCUpper",
                        "luteGermanDUpper",
                        "luteGermanEUpper",
                        "luteGermanFUpper",
                        "luteGermanGUpper",
                        "luteGermanHUpper",
                        "luteGermanIUpper",
                        "luteGermanKUpper",
                        "luteGermanLUpper",
                        "luteGermanMUpper",
                        "luteGermanNUpper"
                    ],
                    "range_end": 0xEC2F,
                    "range_start": 0xEC00
                },
                "gongsPictograms": {
                    "description": "Gongs pictograms",
                    "glyphs": [
                        "pictTamTam",
                        "pictTamTamWithBeater",
                        "pictGong",
                        "pictGongWithButton",
                        "pictSlideBrushOnGong"
                    ],
                    "range_end": 0xE73F,
                    "range_start": 0xE730
                },
                "gouldArrowQuartertoneAccidentals24Edo": {
                    "description": "Gould arrow quartertone accidentals (24-EDO)",
                    "glyphs": [
                        "accidentalQuarterToneFlatArrowUp",
                        "accidentalThreeQuarterTonesFlatArrowDown",
                        "accidentalQuarterToneSharpNaturalArrowUp",
                        "accidentalQuarterToneFlatNaturalArrowDown",
                        "accidentalThreeQuarterTonesSharpArrowUp",
                        "accidentalQuarterToneSharpArrowDown",
                        "accidentalFiveQuarterTonesSharpArrowUp",
                        "accidentalThreeQuarterTonesSharpArrowDown",
                        "accidentalThreeQuarterTonesFlatArrowUp",
                        "accidentalFiveQuarterTonesFlatArrowDown",
                        "accidentalArrowUp",
                        "accidentalArrowDown"
                    ],
                    "range_end": 0xE27F,
                    "range_start": 0xE270
                },
                "guitar": {
                    "description": "Guitar",
                    "glyphs": [
                        "guitarVibratoBarScoop",
                        "guitarVibratoBarDip",
                        "guitarShake",
                        "guitarString0",
                        "guitarString1",
                        "guitarString2",
                        "guitarString3",
                        "guitarString4",
                        "guitarString5",
                        "guitarString6",
                        "guitarString7",
                        "guitarString8",
                        "guitarString9",
                        "guitarOpenPedal",
                        "guitarHalfOpenPedal",
                        "guitarClosePedal",
                        "guitarLeftHandTapping",
                        "guitarRightHandTapping",
                        "guitarGolpe",
                        "guitarFadeIn",
                        "guitarFadeOut",
                        "guitarVolumeSwell",
                        "guitarStrumUp",
                        "guitarStrumDown",
                        "guitarBarreFull",
                        "guitarBarreHalf"
                    ],
                    "range_end": 0xE84F,
                    "range_start": 0xE830
                },
                "handbells": {
                    "description": "Handbells",
                    "glyphs": [
                        "handbellsMartellato",
                        "handbellsMartellatoLift",
                        "handbellsHandMartellato",
                        "handbellsMutedMartellato",
                        "handbellsMalletBellSuspended",
                        "handbellsMalletBellOnTable",
                        "handbellsMalletLft",
                        "handbellsPluckLift",
                        "handbellsSwingUp",
                        "handbellsSwingDown",
                        "handbellsSwing",
                        "handbellsEcho1",
                        "handbellsEcho2",
                        "handbellsGyro",
                        "handbellsDamp3",
                        "handbellsBelltree",
                        "handbellsTableSingleBell",
                        "handbellsTablePairBells"
                    ],
                    "range_end": 0xE82F,
                    "range_start": 0xE810
                },
                "harpTechniques": {
                    "description": "Harp techniques",
                    "glyphs": [
                        "harpPedalRaised",
                        "harpPedalCentered",
                        "harpPedalLowered",
                        "harpPedalDivider",
                        "harpSalzedoSlideWithSuppleness",
                        "harpSalzedoOboicFlux",
                        "harpSalzedoThunderEffect",
                        "harpSalzedoWhistlingSounds",
                        "harpSalzedoMetallicSounds",
                        "harpSalzedoTamTamSounds",
                        "harpSalzedoPlayUpperEnd",
                        "harpSalzedoTimpanicSounds",
                        "harpSalzedoMuffleTotally",
                        "harpSalzedoFluidicSoundsLeft",
                        "harpSalzedoFluidicSoundsRight",
                        "harpMetalRod",
                        "harpTuningKey",
                        "harpTuningKeyHandle",
                        "harpTuningKeyShank",
                        "harpTuningKeyGlissando",
                        "harpStringNoiseStem",
                        "harpSalzedoAeolianAscending",
                        "harpSalzedoAeolianDescending",
                        "harpSalzedoDampLowStrings",
                        "harpSalzedoDampBothHands",
                        "harpSalzedoDampBelow",
                        "harpSalzedoDampAbove",
                        "harpSalzedoMetallicSoundsOneString",
                        "harpSalzedoIsolatedSounds",
                        "harpSalzedoSnareDrum"
                    ],
                    "range_end": 0xE69F,
                    "range_start": 0xE680
                },
                "herculeanSagittalExtensionVeryHighPrecisionAccidentalDiacritics": {
                    "description": "Herculean Sagittal extension (very high precision) accidental diacritics",
                    "glyphs": [
                        "accSagittalShaftUp",
                        "accSagittalShaftDown",
                        "accSagittalAcute",
                        "accSagittalGrave"
                    ],
                    "range_end": 0xE3FF,
                    "range_start": 0xE3F0
                },
                "holdsAndPauses": {
                    "description": "Holds and pauses",
                    "glyphs": [
                        "fermataAbove",
                        "fermataBelow",
                        "fermataVeryShortAbove",
                        "fermataVeryShortBelow",
                        "fermataShortAbove",
                        "fermataShortBelow",
                        "fermataLongAbove",
                        "fermataLongBelow",
                        "fermataVeryLongAbove",
                        "fermataVeryLongBelow",
                        "fermataLongHenzeAbove",
                        "fermataLongHenzeBelow",
                        "fermataShortHenzeAbove",
                        "fermataShortHenzeBelow",
                        "breathMarkComma",
                        "breathMarkTick",
                        "breathMarkUpbow",
                        "caesura",
                        "caesuraThick",
                        "caesuraShort",
                        "caesuraCurved",
                        "breathMarkSalzedo",
                        "curlewSign"
                    ],
                    "range_end": 0xE4DF,
                    "range_start": 0xE4C0
                },
                "individualNotes": {
                    "description": "Individual notes",
                    "glyphs": [
                        "noteDoubleWhole",
                        "noteDoubleWholeSquare",
                        "noteWhole",
                        "noteHalfUp",
                        "noteHalfDown",
                        "noteQuarterUp",
                        "noteQuarterDown",
                        "note8thUp",
                        "note8thDown",
                        "note16thUp",
                        "note16thDown",
                        "note32ndUp",
                        "note32ndDown",
                        "note64thUp",
                        "note64thDown",
                        "note128thUp",
                        "note128thDown",
                        "note256thUp",
                        "note256thDown",
                        "note512thUp",
                        "note512thDown",
                        "note1024thUp",
                        "note1024thDown",
                        "augmentationDot"
                    ],
                    "range_end": 0xE1EF,
                    "range_start": 0xE1D0
                },
                "italianAndSpanishRenaissanceLuteTablature": {
                    "description": "Italian and Spanish Renaissance lute tablature",
                    "glyphs": [
                        "luteItalianFret0",
                        "luteItalianFret1",
                        "luteItalianFret2",
                        "luteItalianFret3",
                        "luteItalianFret4",
                        "luteItalianFret5",
                        "luteItalianFret6",
                        "luteItalianFret7",
                        "luteItalianFret8",
                        "luteItalianFret9",
                        "luteItalianTempoFast",
                        "luteItalianTempoSomewhatFast",
                        "luteItalianTempoNeitherFastNorSlow",
                        "luteItalianTempoSlow",
                        "luteItalianTempoVerySlow",
                        "luteItalianTimeTriple",
                        "luteItalianClefFFaUt",
                        "luteItalianClefCSolFaUt",
                        "luteItalianTremolo",
                        "luteItalianHoldNote",
                        "luteItalianHoldFinger",
                        "luteItalianReleaseFinger",
                        "luteItalianVibrato"
                    ],
                    "range_end": 0xEBFF,
                    "range_start": 0xEBE0
                },
                "johnstonAccidentalsJustIntonation": {
                    "description": "Johnston accidentals (just intonation)",
                    "glyphs": [
                        "accidentalJohnstonPlus",
                        "accidentalJohnstonMinus",
                        "accidentalJohnstonEl",
                        "accidentalJohnstonSeven",
                        "accidentalJohnstonUp",
                        "accidentalJohnstonDown",
                        "accidentalJohnston13",
                        "accidentalJohnston31"
                    ],
                    "range_end": 0xE2BF,
                    "range_start": 0xE2B0
                },
                "keyboardTechniques": {
                    "description": "Keyboard techniques",
                    "glyphs": [
                        "keyboardPedalPed",
                        "keyboardPedalP",
                        "keyboardPedalE",
                        "keyboardPedalD",
                        "keyboardPedalDot",
                        "keyboardPedalUp",
                        "keyboardPedalHalf",
                        "keyboardPedalUpNotch",
                        "keyboardPedalHyphen",
                        "keyboardPedalSost",
                        "keyboardPedalS",
                        "keyboardPedalHalf2",
                        "keyboardPedalHalf3",
                        "keyboardPedalUpSpecial",
                        "keyboardLeftPedalPictogram",
                        "keyboardMiddlePedalPictogram",
                        "keyboardRightPedalPictogram",
                        "keyboardPedalHeel1",
                        "keyboardPedalHeel2",
                        "keyboardPedalHeel3",
                        "keyboardPedalToe1",
                        "keyboardPedalToe2",
                        "keyboardPedalHeelToe",
                        "keyboardPluckInside",
                        "keyboardBebung2DotsAbove",
                        "keyboardBebung2DotsBelow",
                        "keyboardBebung3DotsAbove",
                        "keyboardBebung3DotsBelow",
                        "keyboardBebung4DotsAbove",
                        "keyboardBebung4DotsBelow",
                        "keyboardPlayWithRH",
                        "keyboardPlayWithRHEnd",
                        "keyboardPlayWithLH",
                        "keyboardPlayWithLHEnd",
                        "keyboardPedalHookStart",
                        "keyboardPedalHookEnd",
                        "keyboardPedalHeelToToe",
                        "keyboardPedalToeToHeel"
                    ],
                    "range_end": 0xE67F,
                    "range_start": 0xE650
                },
                "kievanSquareNotation": {
                    "description": "Kievan square notation",
                    "glyphs": [
                        "kievanCClef",
                        "kievanEndingSymbol",
                        "kievanNoteReciting",
                        "kievanNoteWhole",
                        "kievanNoteWholeFinal",
                        "kievanNoteHalfStaffLine",
                        "kievanNoteHalfStaffSpace",
                        "kievanNoteQuarterStemUp",
                        "kievanNoteQuarterStemDown",
                        "kievanNote8thStemUp",
                        "kievanNote8thStemDown",
                        "kievanNoteBeam",
                        "kievanAugmentationDot",
                        "kievanAccidentalSharp",
                        "kievanAccidentalFlat"
                    ],
                    "range_end": 0xEC3F,
                    "range_start": 0xEC30
                },
                "kod\u00e1lyHandSigns": {
                    "description": "Kod\u00e1ly hand signs",
                    "glyphs": [
                        "kodalyHandDo",
                        "kodalyHandRe",
                        "kodalyHandMi",
                        "kodalyHandFa",
                        "kodalyHandSo",
                        "kodalyHandLa",
                        "kodalyHandTi"
                    ],
                    "range_end": 0xEC4F,
                    "range_start": 0xEC40
                },
                "lyrics": {
                    "description": "Lyrics",
                    "glyphs": [
                        "lyricsElisionNarrow",
                        "lyricsElision",
                        "lyricsElisionWide",
                        "lyricsHyphenBaseline",
                        "lyricsHyphenBaselineNonBreaking"
                    ],
                    "range_end": 0xE55F,
                    "range_start": 0xE550
                },
                "magratheanSagittalExtensionInsanePrecisionAccidentalDiacritics": {
                    "description": "Magrathean Sagittal extension (insane precision) accidental diacritics",
                    "glyphs": [],
                    "range_end": 0xE41F,
                    "range_start": 0xE410
                },
                "medievalAndRenaissanceAccidentals": {
                    "description": "Medieval and Renaissance accidentals",
                    "glyphs": [
                        "medRenFlatSoftB",
                        "medRenFlatHardB",
                        "medRenNatural",
                        "medRenSharpCroix",
                        "medRenFlatWithDot",
                        "medRenNaturalWithCross"
                    ],
                    "range_end": 0xE9EF,
                    "range_start": 0xE9E0
                },
                "medievalAndRenaissanceClefs": {
                    "description": "Medieval and Renaissance clefs",
                    "glyphs": [
                        "mensuralGclef",
                        "mensuralGclefPetrucci",
                        "chantFclef",
                        "mensuralFclef",
                        "mensuralFclefPetrucci",
                        "mensuralCclef",
                        "chantCclef",
                        "mensuralCclefPetrucciPosLowest",
                        "mensuralCclefPetrucciPosLow",
                        "mensuralCclefPetrucciPosMiddle",
                        "mensuralCclefPetrucciPosHigh",
                        "mensuralCclefPetrucciPosHighest"
                    ],
                    "range_end": 0xE90F,
                    "range_start": 0xE900
                },
                "medievalAndRenaissanceIndividualNotes": {
                    "description": "Medieval and Renaissance individual notes",
                    "glyphs": [
                        "mensuralBlackMaxima",
                        "mensuralBlackLonga",
                        "mensuralBlackBrevis",
                        "mensuralBlackSemibrevis",
                        "mensuralBlackMinima",
                        "mensuralBlackSemiminima",
                        "mensuralBlackBrevisVoid",
                        "mensuralBlackSemibrevisVoid",
                        "mensuralBlackMinimaVoid",
                        "mensuralBlackSemibrevisCaudata",
                        "mensuralBlackDragma",
                        "mensuralBlackSemibrevisOblique",
                        "mensuralWhiteMaxima",
                        "mensuralWhiteLonga",
                        "mensuralWhiteBrevis",
                        "mensuralWhiteMinima",
                        "mensuralWhiteSemiminima",
                        "mensuralWhiteFusa"
                    ],
                    "range_end": 0xE96F,
                    "range_start": 0xE950
                },
                "medievalAndRenaissanceMiscellany": {
                    "description": "Medieval and Renaissance miscellany",
                    "glyphs": [
                        "mensuralSignumUp",
                        "mensuralSignumDown",
                        "mensuralCustosUp",
                        "mensuralCustosDown",
                        "chantCustosStemUpPosLowest",
                        "chantCustosStemUpPosLow",
                        "chantCustosStemUpPosMiddle",
                        "chantCustosStemDownPosMiddle",
                        "chantCustosStemDownPosHigh",
                        "chantCustosStemDownPosHighest",
                        "mensuralCustosCheckmark",
                        "mensuralCustosTurn",
                        "mensuralColorationStartSquare",
                        "mensuralColorationEndSquare",
                        "mensuralColorationStartRound",
                        "mensuralColorationEndRound",
                        "mensuralAlterationSign"
                    ],
                    "range_end": 0xEA1F,
                    "range_start": 0xEA00
                },
                "medievalAndRenaissanceNoteheadsAndStems": {
                    "description": "Medieval and Renaissance noteheads and stems",
                    "glyphs": [
                        "mensuralNoteheadMaximaBlack",
                        "mensuralNoteheadMaximaVoid",
                        "mensuralNoteheadMaximaBlackVoid",
                        "mensuralNoteheadMaximaWhite",
                        "mensuralNoteheadLongaBlack",
                        "mensuralNoteheadLongaVoid",
                        "mensuralNoteheadLongaBlackVoid",
                        "mensuralNoteheadLongaWhite",
                        "mensuralNoteheadSemibrevisBlack",
                        "mensuralNoteheadSemibrevisVoid",
                        "mensuralNoteheadSemibrevisBlackVoid",
                        "mensuralNoteheadSemibrevisBlackVoidTurned",
                        "mensuralNoteheadMinimaWhite",
                        "mensuralNoteheadSemiminimaWhite",
                        "mensuralCombStemUp",
                        "mensuralCombStemDown",
                        "mensuralCombStemDiagonal",
                        "mensuralCombStemUpFlagRight",
                        "mensuralCombStemDownFlagRight",
                        "mensuralCombStemUpFlagLeft",
                        "mensuralCombStemDownFlagLeft",
                        "mensuralCombStemUpFlagFlared",
                        "mensuralCombStemDownFlagFlared",
                        "mensuralCombStemUpFlagExtended",
                        "mensuralCombStemDownFlagExtended",
                        "mensuralCombStemUpFlagSemiminima",
                        "mensuralCombStemDownFlagSemiminima",
                        "mensuralCombStemUpFlagFusa",
                        "mensuralCombStemDownFlagFusa"
                    ],
                    "range_end": 0xE94F,
                    "range_start": 0xE930
                },
                "medievalAndRenaissanceObliqueForms": {
                    "description": "Medieval and Renaissance oblique forms",
                    "glyphs": [
                        "mensuralObliqueAsc2ndBlack",
                        "mensuralObliqueAsc2ndVoid",
                        "mensuralObliqueAsc2ndBlackVoid",
                        "mensuralObliqueAsc2ndWhite",
                        "mensuralObliqueAsc3rdBlack",
                        "mensuralObliqueAsc3rdVoid",
                        "mensuralObliqueAsc3rdBlackVoid",
                        "mensuralObliqueAsc3rdWhite",
                        "mensuralObliqueAsc4thBlack",
                        "mensuralObliqueAsc4thVoid",
                        "mensuralObliqueAsc4thBlackVoid",
                        "mensuralObliqueAsc4thWhite",
                        "mensuralObliqueAsc5thBlack",
                        "mensuralObliqueAsc5thVoid",
                        "mensuralObliqueAsc5thBlackVoid",
                        "mensuralObliqueAsc5thWhite",
                        "mensuralObliqueDesc2ndBlack",
                        "mensuralObliqueDesc2ndVoid",
                        "mensuralObliqueDesc2ndBlackVoid",
                        "mensuralObliqueDesc2ndWhite",
                        "mensuralObliqueDesc3rdBlack",
                        "mensuralObliqueDesc3rdVoid",
                        "mensuralObliqueDesc3rdBlackVoid",
                        "mensuralObliqueDesc3rdWhite",
                        "mensuralObliqueDesc4thBlack",
                        "mensuralObliqueDesc4thVoid",
                        "mensuralObliqueDesc4thBlackVoid",
                        "mensuralObliqueDesc4thWhite",
                        "mensuralObliqueDesc5thBlack",
                        "mensuralObliqueDesc5thVoid",
                        "mensuralObliqueDesc5thBlackVoid",
                        "mensuralObliqueDesc5thWhite"
                    ],
                    "range_end": 0xE98F,
                    "range_start": 0xE970
                },
                "medievalAndRenaissancePlainchantArticulations": {
                    "description": "Medieval and Renaissance plainchant articulations",
                    "glyphs": [
                        "chantIctusAbove",
                        "chantIctusBelow",
                        "chantCirculusAbove",
                        "chantCirculusBelow",
                        "chantSemicirculusAbove",
                        "chantSemicirculusBelow",
                        "chantAccentusAbove",
                        "chantAccentusBelow",
                        "chantEpisema",
                        "chantAugmentum"
                    ],
                    "range_end": 0xE9DF,
                    "range_start": 0xE9D0
                },
                "medievalAndRenaissancePlainchantMultipleNoteForms": {
                    "description": "Medieval and Renaissance plainchant multiple-note forms",
                    "glyphs": [
                        "chantPodatusLower",
                        "chantPodatusUpper",
                        "chantDeminutumUpper",
                        "chantDeminutumLower",
                        "chantEntryLineAsc2nd",
                        "chantEntryLineAsc3rd",
                        "chantEntryLineAsc4th",
                        "chantEntryLineAsc5th",
                        "chantEntryLineAsc6th",
                        "chantLigaturaDesc2nd",
                        "chantLigaturaDesc3rd",
                        "chantLigaturaDesc4th",
                        "chantLigaturaDesc5th",
                        "chantConnectingLineAsc2nd",
                        "chantConnectingLineAsc3rd",
                        "chantConnectingLineAsc4th",
                        "chantConnectingLineAsc5th",
                        "chantConnectingLineAsc6th",
                        "chantStrophicusLiquescens2nd",
                        "chantStrophicusLiquescens3rd",
                        "chantStrophicusLiquescens4th",
                        "chantStrophicusLiquescens5th"
                    ],
                    "range_end": 0xE9CF,
                    "range_start": 0xE9B0
                },
                "medievalAndRenaissancePlainchantSingleNoteForms": {
                    "description": "Medieval and Renaissance plainchant single-note forms",
                    "glyphs": [
                        "chantPunctum",
                        "chantPunctumInclinatum",
                        "chantPunctumInclinatumAuctum",
                        "chantPunctumInclinatumDeminutum",
                        "chantAuctumAsc",
                        "chantAuctumDesc",
                        "chantPunctumVirga",
                        "chantPunctumVirgaReversed",
                        "chantPunctumCavum",
                        "chantPunctumLinea",
                        "chantPunctumLineaCavum",
                        "chantQuilisma",
                        "chantOriscusAscending",
                        "chantOriscusDescending",
                        "chantOriscusLiquescens",
                        "chantStrophicus",
                        "chantStrophicusAuctus",
                        "chantPunctumDeminutum"
                    ],
                    "range_end": 0xE9AF,
                    "range_start": 0xE990
                },
                "medievalAndRenaissanceProlations": {
                    "description": "Medieval and Renaissance prolations",
                    "glyphs": [
                        "mensuralProlation1",
                        "mensuralProlation2",
                        "mensuralProlation3",
                        "mensuralProlation4",
                        "mensuralProlation5",
                        "mensuralProlation6",
                        "mensuralProlation7",
                        "mensuralProlation8",
                        "mensuralProlation9",
                        "mensuralProlation10",
                        "mensuralProlation11",
                        "mensuralProportionTempusPerfectum",
                        "mensuralProportionProportioDupla1",
                        "mensuralProportionProportioDupla2",
                        "mensuralProportionProportioTripla",
                        "mensuralProportionProportioQuadrupla",
                        "mensuralProlationCombiningDot",
                        "mensuralProlationCombiningTwoDots",
                        "mensuralProlationCombiningThreeDots",
                        "mensuralProlationCombiningThreeDotsTri",
                        "mensuralProlationCombiningDotVoid",
                        "mensuralProlationCombiningStroke",
                        "mensuralProportion1",
                        "mensuralProportion2",
                        "mensuralProportion3",
                        "mensuralProportion4",
                        "mensuralProportionMinor",
                        "mensuralProportionMajor",
                        "mensuralModusPerfectumVert",
                        "mensuralModusImperfectumVert",
                        "mensuralTempusPerfectumHoriz",
                        "mensuralTempusImperfectumHoriz"
                    ],
                    "range_end": 0xE92F,
                    "range_start": 0xE910
                },
                "medievalAndRenaissanceRests": {
                    "description": "Medieval and Renaissance rests",
                    "glyphs": [
                        "mensuralRestMaxima",
                        "mensuralRestLongaPerfecta",
                        "mensuralRestLongaImperfecta",
                        "mensuralRestBrevis",
                        "mensuralRestSemibrevis",
                        "mensuralRestMinima",
                        "mensuralRestSemiminima",
                        "mensuralRestFusa",
                        "mensuralRestSemifusa"
                    ],
                    "range_end": 0xE9FF,
                    "range_start": 0xE9F0
                },
                "medievalAndRenaissanceStaves": {
                    "description": "Medieval and Renaissance staves",
                    "glyphs": [
                        "chantStaff",
                        "chantStaffWide",
                        "chantStaffNarrow",
                        "chantDivisioMinima",
                        "chantDivisioMaior",
                        "chantDivisioMaxima",
                        "chantDivisioFinalis",
                        "chantVirgula",
                        "chantCaesura"
                    ],
                    "range_end": 0xE8FF,
                    "range_start": 0xE8F0
                },
                "medievalAndRenaissanceSymbolsInCmn": {
                    "description": "Medieval and Renaissance symbols in CMN",
                    "glyphs": [
                        "ornamentQuilisma",
                        "ornamentOriscus",
                        "medRenLiquescenceCMN",
                        "medRenPlicaCMN",
                        "medRenGClefCMN",
                        "medRenPunctumCMN",
                        "medRenLiquescentAscCMN",
                        "medRenLiquescentDescCMN",
                        "medRenQuilismaCMN",
                        "medRenStrophicusCMN",
                        "medRenOriscusCMN"
                    ],
                    "range_end": 0xEA2F,
                    "range_start": 0xEA20
                },
                "metallicStruckPercussionPictograms": {
                    "description": "Metallic struck percussion pictograms",
                    "glyphs": [
                        "pictTriangle",
                        "pictAnvil"
                    ],
                    "range_end": 0xE70F,
                    "range_start": 0xE700
                },
                "metronomeMarks": {
                    "description": "Metronome marks",
                    "glyphs": [
                        "metNoteDoubleWhole",
                        "metNoteDoubleWholeSquare",
                        "metNoteWhole",
                        "metNoteHalfUp",
                        "metNoteHalfDown",
                        "metNoteQuarterUp",
                        "metNoteQuarterDown",
                        "metNote8thUp",
                        "metNote8thDown",
                        "metNote16thUp",
                        "metNote16thDown",
                        "metNote32ndUp",
                        "metNote32ndDown",
                        "metNote64thUp",
                        "metNote64thDown",
                        "metNote128thUp",
                        "metNote128thDown",
                        "metNote256thUp",
                        "metNote256thDown",
                        "metNote512thUp",
                        "metNote512thDown",
                        "metNote1024thUp",
                        "metNote1024thDown",
                        "metAugmentationDot"
                    ],
                    "range_end": 0xECBF,
                    "range_start": 0xECA0
                },
                "miscellaneousPercussionInstrumentPictograms": {
                    "description": "Miscellaneous percussion instrument pictograms",
                    "glyphs": [
                        "pictPistolShot",
                        "pictCannon",
                        "pictSandpaperBlocks",
                        "pictLionsRoar",
                        "pictGlassHarp",
                        "pictGlassHarmonica",
                        "pictMusicalSaw",
                        "pictJawHarp"
                    ],
                    "range_end": 0xE76F,
                    "range_start": 0xE760
                },
                "miscellaneousSymbols": {
                    "description": "Miscellaneous symbols",
                    "glyphs": [
                        "miscDoNotPhotocopy",
                        "miscDoNotCopy",
                        "miscEyeglasses",
                        "metricModulationArrowLeft",
                        "metricModulationArrowRight"
                    ],
                    "range_end": 0xEC7F,
                    "range_start": 0xEC60
                },
                "multiSegmentLines": {
                    "description": "Multi-segment lines",
                    "glyphs": [
                        "wiggleTrillFastest",
                        "wiggleTrillFasterStill",
                        "wiggleTrillFaster",
                        "wiggleTrillFast",
                        "wiggleTrill",
                        "wiggleTrillSlow",
                        "wiggleTrillSlower",
                        "wiggleTrillSlowerStill",
                        "wiggleTrillSlowest",
                        "wiggleArpeggiatoUp",
                        "wiggleArpeggiatoDown",
                        "wiggleArpeggiatoUpSwash",
                        "wiggleArpeggiatoDownSwash",
                        "wiggleArpeggiatoUpArrow",
                        "wiggleArpeggiatoDownArrow",
                        "wiggleGlissando",
                        "wiggleVibrato",
                        "wiggleVibratoWide",
                        "guitarVibratoStroke",
                        "guitarWideVibratoStroke",
                        "wiggleWavyNarrow",
                        "wiggleWavy",
                        "wiggleWavyWide",
                        "wiggleSquareWaveNarrow",
                        "wiggleSquareWave",
                        "wiggleSquareWaveWide",
                        "wiggleSawtoothNarrow",
                        "wiggleSawtooth",
                        "wiggleSawtoothWide",
                        "wiggleGlissandoGroup1",
                        "wiggleGlissandoGroup2",
                        "wiggleGlissandoGroup3",
                        "wiggleCircularConstant",
                        "wiggleCircularConstantFlipped",
                        "wiggleCircularConstantLarge",
                        "wiggleCircularConstantFlippedLarge",
                        "wiggleCircularStart",
                        "wiggleCircularLargest",
                        "wiggleCircularLargerStill",
                        "wiggleCircularLarger",
                        "wiggleCircularLarge",
                        "wiggleCircular",
                        "wiggleCircularSmall",
                        "wiggleCircularEnd",
                        "wiggleVibratoStart",
                        "wiggleVibratoSmallestFastest",
                        "wiggleVibratoSmallestFasterStill",
                        "wiggleVibratoSmallestFaster",
                        "wiggleVibratoSmallestFast",
                        "wiggleVibratoSmallestSlow",
                        "wiggleVibratoSmallestSlower",
                        "wiggleVibratoSmallestSlowest",
                        "wiggleVibratoSmallFastest",
                        "wiggleVibratoSmallFasterStill",
                        "wiggleVibratoSmallFaster",
                        "wiggleVibratoSmallFast",
                        "wiggleVibratoSmallSlow",
                        "wiggleVibratoSmallSlower",
                        "wiggleVibratoSmallSlowest",
                        "wiggleVibratoMediumFastest",
                        "wiggleVibratoMediumFasterStill",
                        "wiggleVibratoMediumFaster",
                        "wiggleVibratoMediumFast",
                        "wiggleVibratoMediumSlow",
                        "wiggleVIbratoMediumSlower",
                        "wiggleVibratoMediumSlowest",
                        "wiggleVibratoLargeFastest",
                        "wiggleVibratoLargeFasterStill",
                        "wiggleVibratoLargeFaster",
                        "wiggleVibratoLargeFast",
                        "wiggleVibratoLargeSlow",
                        "wiggleVibratoLargeSlower",
                        "wiggleVibratoLargeSlowest",
                        "wiggleVibratoLargestFastest",
                        "wiggleVibratoLargestFasterStill",
                        "wiggleVibratoLargestFaster",
                        "wiggleVibratoLargestFast",
                        "wiggleVibratoLargestSlow",
                        "wiggleVIbratoLargestSlower",
                        "wiggleVibratoLargestSlowest",
                        "wiggleRandom1",
                        "wiggleRandom2",
                        "wiggleRandom3",
                        "wiggleRandom4",
                        "beamAccelRit1",
                        "beamAccelRit2",
                        "beamAccelRit3",
                        "beamAccelRit4",
                        "beamAccelRit5",
                        "beamAccelRit6",
                        "beamAccelRit7",
                        "beamAccelRit8",
                        "beamAccelRit9",
                        "beamAccelRit10",
                        "beamAccelRit11",
                        "beamAccelRit12",
                        "beamAccelRit13",
                        "beamAccelRit14",
                        "beamAccelRit15",
                        "beamAccelRitFinal"
                    ],
                    "range_end": 0xEB0F,
                    "range_start": 0xEAA0
                },
                "noteClusters": {
                    "description": "Note clusters",
                    "glyphs": [
                        "noteheadClusterSquareWhite",
                        "noteheadClusterSquareBlack",
                        "noteheadClusterRoundWhite",
                        "noteheadClusterRoundBlack",
                        "noteheadClusterDoubleWhole2nd",
                        "noteheadClusterWhole2nd",
                        "noteheadClusterHalf2nd",
                        "noteheadClusterQuarter2nd",
                        "noteheadClusterDoubleWhole3rd",
                        "noteheadClusterWhole3rd",
                        "noteheadClusterHalf3rd",
                        "noteheadClusterQuarter3rd",
                        "noteheadClusterDoubleWholeTop",
                        "noteheadClusterDoubleWholeMiddle",
                        "noteheadClusterDoubleWholeBottom",
                        "noteheadClusterWholeTop",
                        "noteheadClusterWholeMiddle",
                        "noteheadClusterWholeBottom",
                        "noteheadClusterHalfTop",
                        "noteheadClusterHalfMiddle",
                        "noteheadClusterHalfBottom",
                        "noteheadClusterQuarterTop",
                        "noteheadClusterQuarterMiddle",
                        "noteheadClusterQuarterBottom",
                        "noteheadDiamondClusterWhite2nd",
                        "noteheadDiamondClusterBlack2nd",
                        "noteheadDiamondClusterWhite3rd",
                        "noteheadDiamondClusterBlack3rd",
                        "noteheadDiamondClusterWhiteTop",
                        "noteheadDiamondClusterWhiteMiddle",
                        "noteheadDiamondClusterWhiteBottom",
                        "noteheadDiamondClusterBlackTop",
                        "noteheadDiamondClusterBlackMiddle",
                        "noteheadDiamondClusterBlackBottom",
                        "noteheadRectangularClusterBlackTop",
                        "noteheadRectangularClusterBlackMiddle",
                        "noteheadRectangularClusterBlackBottom",
                        "noteheadRectangularClusterWhiteTop",
                        "noteheadRectangularClusterWhiteMiddle",
                        "noteheadRectangularClusterWhiteBottom"
                    ],
                    "range_end": 0xE14F,
                    "range_start": 0xE120
                },
                "noteNameNoteheads": {
                    "description": "Note name noteheads",
                    "glyphs": [
                        "noteDoWhole",
                        "noteReWhole",
                        "noteMiWhole",
                        "noteFaWhole",
                        "noteSoWhole",
                        "noteLaWhole",
                        "noteTiWhole",
                        "noteSiWhole",
                        "noteDoHalf",
                        "noteReHalf",
                        "noteMiHalf",
                        "noteFaHalf",
                        "noteSoHalf",
                        "noteLaHalf",
                        "noteTiHalf",
                        "noteSiHalf",
                        "noteDoBlack",
                        "noteReBlack",
                        "noteMiBlack",
                        "noteFaBlack",
                        "noteSoBlack",
                        "noteLaBlack",
                        "noteTiBlack",
                        "noteSiBlack",
                        "noteAFlatWhole",
                        "noteAWhole",
                        "noteASharpWhole",
                        "noteBFlatWhole",
                        "noteBWhole",
                        "noteBSharpWhole",
                        "noteCFlatWhole",
                        "noteCWhole",
                        "noteCSharpWhole",
                        "noteDFlatWhole",
                        "noteDWhole",
                        "noteDSharpWhole",
                        "noteEFlatWhole",
                        "noteEWhole",
                        "noteESharpWhole",
                        "noteFFlatWhole",
                        "noteFWhole",
                        "noteFSharpWhole",
                        "noteGFlatWhole",
                        "noteGWhole",
                        "noteGSharpWhole",
                        "noteHWhole",
                        "noteHSharpWhole",
                        "noteAFlatHalf",
                        "noteAHalf",
                        "noteASharpHalf",
                        "noteBFlatHalf",
                        "noteBHalf",
                        "noteBSharpHalf",
                        "noteCFlatHalf",
                        "noteCHalf",
                        "noteCSharpHalf",
                        "noteDFlatHalf",
                        "noteDHalf",
                        "noteDSharpHalf",
                        "noteEFlatHalf",
                        "noteEHalf",
                        "noteESharpHalf",
                        "noteFFlatHalf",
                        "noteFHalf",
                        "noteFSharpHalf",
                        "noteGFlatHalf",
                        "noteGHalf",
                        "noteGSharpHalf",
                        "noteHHalf",
                        "noteHSharpHalf",
                        "noteAFlatBlack",
                        "noteABlack",
                        "noteASharpBlack",
                        "noteBFlatBlack",
                        "noteBBlack",
                        "noteBSharpBlack",
                        "noteCFlatBlack",
                        "noteCBlack",
                        "noteCSharpBlack",
                        "noteDFlatBlack",
                        "noteDBlack",
                        "noteDSharpBlack",
                        "noteEFlatBlack",
                        "noteEBlack",
                        "noteESharpBlack",
                        "noteFFlatBlack",
                        "noteFBlack",
                        "noteFSharpBlack",
                        "noteGFlatBlack",
                        "noteGBlack",
                        "noteGSharpBlack",
                        "noteHBlack",
                        "noteHSharpBlack",
                        "noteEmptyWhole",
                        "noteEmptyHalf",
                        "noteEmptyBlack"
                    ],
                    "range_end": 0xE1AF,
                    "range_start": 0xE150
                },
                "noteheads": {
                    "description": "Noteheads",
                    "glyphs": [
                        "noteheadDoubleWhole",
                        "noteheadDoubleWholeSquare",
                        "noteheadWhole",
                        "noteheadHalf",
                        "noteheadBlack",
                        "noteheadNull",
                        "noteheadXDoubleWhole",
                        "noteheadXWhole",
                        "noteheadXHalf",
                        "noteheadXBlack",
                        "noteheadXOrnate",
                        "noteheadXOrnateEllipse",
                        "noteheadPlusDoubleWhole",
                        "noteheadPlusWhole",
                        "noteheadPlusHalf",
                        "noteheadPlusBlack",
                        "noteheadCircleXDoubleWhole",
                        "noteheadCircleXWhole",
                        "noteheadCircleXHalf",
                        "noteheadCircleX",
                        "noteheadDoubleWholeWithX",
                        "noteheadWholeWithX",
                        "noteheadHalfWithX",
                        "noteheadVoidWithX",
                        "noteheadSquareWhite",
                        "noteheadSquareBlack",
                        "noteheadTriangleUpDoubleWhole",
                        "noteheadTriangleUpWhole",
                        "noteheadTriangleUpHalf",
                        "noteheadTriangleUpWhite",
                        "noteheadTriangleUpBlack",
                        "noteheadTriangleLeftWhite",
                        "noteheadTriangleLeftBlack",
                        "noteheadTriangleRightWhite",
                        "noteheadTriangleRightBlack",
                        "noteheadTriangleDownDoubleWhole",
                        "noteheadTriangleDownWhole",
                        "noteheadTriangleDownHalf",
                        "noteheadTriangleDownWhite",
                        "noteheadTriangleDownBlack",
                        "noteheadTriangleUpRightWhite",
                        "noteheadTriangleUpRightBlack",
                        "noteheadMoonWhite",
                        "noteheadMoonBlack",
                        "noteheadTriangleRoundDownWhite",
                        "noteheadTriangleRoundDownBlack",
                        "noteheadParenthesis",
                        "noteheadSlashedBlack1",
                        "noteheadSlashedBlack2",
                        "noteheadSlashedHalf1",
                        "noteheadSlashedHalf2",
                        "noteheadSlashedWhole1",
                        "noteheadSlashedWhole2",
                        "noteheadSlashedDoubleWhole1",
                        "noteheadSlashedDoubleWhole2",
                        "noteheadDiamondDoubleWhole",
                        "noteheadDiamondWhole",
                        "noteheadDiamondHalf",
                        "noteheadDiamondHalfWide",
                        "noteheadDiamondBlack",
                        "noteheadDiamondBlackWide",
                        "noteheadDiamondWhite",
                        "noteheadDiamondWhiteWide",
                        "noteheadDiamondDoubleWholeOld",
                        "noteheadDiamondWholeOld",
                        "noteheadDiamondHalfOld",
                        "noteheadDiamondBlackOld",
                        "noteheadDiamondHalfFilled",
                        "noteheadCircledBlack",
                        "noteheadCircledHalf",
                        "noteheadCircledWhole",
                        "noteheadCircledDoubleWhole",
                        "noteheadCircledBlackLarge",
                        "noteheadCircledHalfLarge",
                        "noteheadCircledWholeLarge",
                        "noteheadCircledDoubleWholeLarge",
                        "noteheadCircledXLarge",
                        "noteheadLargeArrowUpDoubleWhole",
                        "noteheadLargeArrowUpWhole",
                        "noteheadLargeArrowUpHalf",
                        "noteheadLargeArrowUpBlack",
                        "noteheadLargeArrowDownDoubleWhole",
                        "noteheadLargeArrowDownWhole",
                        "noteheadLargeArrowDownHalf",
                        "noteheadLargeArrowDownBlack",
                        "noteheadParenthesisLeft",
                        "noteheadParenthesisRight",
                        "noteheadCircleSlash",
                        "noteheadHeavyX",
                        "noteheadHeavyXHat",
                        "noteheadWholeFilled",
                        "noteheadHalfFilled",
                        "noteheadDiamondOpen"
                    ],
                    "range_end": 0xE0FF,
                    "range_start": 0xE0A0
                },
                "octaves": {
                    "description": "Octaves",
                    "glyphs": [
                        "ottava",
                        "ottavaAlta",
                        "ottavaBassa",
                        "ottavaBassaBa",
                        "quindicesima",
                        "quindicesimaAlta",
                        "quindicesimaBassa",
                        "ventiduesima",
                        "ventiduesimaAlta",
                        "ventiduesimaBassa",
                        "octaveParensLeft",
                        "octaveParensRight",
                        "ottavaBassaVb",
                        "quindicesimaBassaMb",
                        "ventiduesimaBassaMb",
                        "octaveBassa"
                    ],
                    "range_end": 0xE51F,
                    "range_start": 0xE510
                },
                "octavesSupplement": {
                    "description": "Octaves supplement",
                    "glyphs": [
                        "octaveLoco",
                        "octaveBaselineA",
                        "octaveSuperscriptA",
                        "octaveBaselineB",
                        "octaveSuperscriptB",
                        "octaveBaselineM",
                        "octaveSuperscriptM",
                        "octaveBaselineV",
                        "octaveSuperscriptV"
                    ],
                    "range_end": 0xEC9F,
                    "range_start": 0xEC90
                },
                "olympianSagittalExtensionExtremePrecisionAccidentalDiacritics": {
                    "description": "Olympian Sagittal extension (extreme precision) accidental diacritics",
                    "glyphs": [],
                    "range_end": 0xE40F,
                    "range_start": 0xE400
                },
                "otherAccidentals": {
                    "description": "Other accidentals",
                    "glyphs": [
                        "accidentalXenakisOneThirdToneSharp",
                        "accidentalXenakisTwoThirdTonesSharp",
                        "accidentalQuarterToneSharpBusotti",
                        "accidentalSharpOneHorizontalStroke",
                        "accidentalThreeQuarterTonesSharpBusotti",
                        "accidentalQuarterToneSharpWiggle",
                        "accidentalTavenerSharp",
                        "accidentalTavenerFlat",
                        "accidentalQuarterToneFlatPenderecki",
                        "accidentalCommaSlashUp",
                        "accidentalCommaSlashDown",
                        "accidentalWilsonPlus",
                        "accidentalWilsonMinus",
                        "accidentalLargeDoubleSharp",
                        "accidentalQuarterToneSharp4",
                        "accidentalQuarterToneFlat4",
                        "accidentalQuarterToneFlatFilledReversed",
                        "accidentalSharpReversed",
                        "accidentalNaturalReversed",
                        "accidentalDoubleFlatReversed",
                        "accidentalFlatTurned",
                        "accidentalDoubleFlatTurned",
                        "accidentalThreeQuarterTonesFlatGrisey",
                        "accidentalThreeQuarterTonesFlatTartini",
                        "accidentalQuarterToneFlatVanBlankenburg",
                        "accidentalThreeQuarterTonesFlatCouper",
                        "accidentalOneThirdToneSharpFerneyhough",
                        "accidentalOneThirdToneFlatFerneyhough",
                        "accidentalTwoThirdTonesSharpFerneyhough",
                        "accidentalTwoThirdTonesFlatFerneyhough",
                        "accidentalOneQuarterToneSharpFerneyhough",
                        "accidentalOneQuarterToneFlatFerneyhough"
                    ],
                    "range_end": 0xE49F,
                    "range_start": 0xE470
                },
                "otherBaroqueOrnaments": {
                    "description": "Other baroque ornaments",
                    "glyphs": [
                        "ornamentPortDeVoixV",
                        "ornamentRightFacingHalfCircle",
                        "ornamentLeftFacingHalfCircle",
                        "ornamentRightFacingHook",
                        "ornamentLeftFacingHook",
                        "ornamentHookBeforeNote",
                        "ornamentHookAfterNote",
                        "ornamentUpCurve",
                        "ornamentDownCurve",
                        "ornamentShortObliqueLineBeforeNote",
                        "ornamentShortObliqueLineAfterNote",
                        "ornamentObliqueLineBeforeNote",
                        "ornamentObliqueLineAfterNote",
                        "ornamentDoubleObliqueLinesBeforeNote",
                        "ornamentDoubleObliqueLinesAfterNote",
                        "ornamentObliqueLineHorizBeforeNote",
                        "ornamentObliqueLineHorizAfterNote",
                        "ornamentComma",
                        "ornamentShake3",
                        "ornamentVerticalLine",
                        "ornamentShakeMuffat1",
                        "glissandoUp",
                        "glissandoDown",
                        "ornamentSchleifer",
                        "ornamentPinceCouperin",
                        "ornamentTremblementCouperin"
                    ],
                    "range_end": 0xE58F,
                    "range_start": 0xE570
                },
                "percussionPlayingTechniquePictograms": {
                    "description": "Percussion playing technique pictograms",
                    "glyphs": [
                        "pictStickShot",
                        "pictScrapeCenterToEdge",
                        "pictScrapeEdgeToCenter",
                        "pictScrapeAroundRim",
                        "pictOnRim",
                        "pictOpenRimShot",
                        "pictHalfOpen1",
                        "pictHalfOpen2",
                        "pictOpen",
                        "pictDamp1",
                        "pictDamp2",
                        "pictDamp3",
                        "pictDamp4",
                        "pictRimShotOnStem",
                        "pictCenter1",
                        "pictCenter2",
                        "pictCenter3",
                        "pictRim1",
                        "pictRim2",
                        "pictRim3",
                        "pictNormalPosition",
                        "pictChokeCymbal",
                        "pictRightHandSquare",
                        "pictLeftHandCircle",
                        "pictSwishStem",
                        "pictTurnRightStem",
                        "pictTurnLeftStem",
                        "pictTurnRightLeftStem",
                        "pictCrushStem",
                        "pictDeadNoteStem",
                        "pictScrapeAroundRimClockwise"
                    ],
                    "range_end": 0xE80F,
                    "range_start": 0xE7F0
                },
                "persianAccidentals": {
                    "description": "Persian accidentals",
                    "glyphs": [
                        "accidentalKoron",
                        "accidentalSori"
                    ],
                    "range_end": 0xE46F,
                    "range_start": 0xE460
                },
                "pluckedTechniques": {
                    "description": "Plucked techniques",
                    "glyphs": [
                        "pluckedSnapPizzicatoBelow",
                        "pluckedSnapPizzicatoAbove",
                        "pluckedBuzzPizzicato",
                        "pluckedLeftHandPizzicato",
                        "arpeggiatoUp",
                        "arpeggiatoDown",
                        "pluckedWithFingernails",
                        "pluckedFingernailFlick",
                        "pluckedDamp",
                        "pluckedDampAll",
                        "pluckedPlectrum",
                        "pluckedDampOnStem"
                    ],
                    "range_end": 0xE63F,
                    "range_start": 0xE630
                },
                "precomposedTrillsAndMordents": {
                    "description": "Precomposed trills and mordents",
                    "glyphs": [
                        "ornamentPrecompSlide",
                        "ornamentPrecompDescendingSlide",
                        "ornamentPrecompAppoggTrill",
                        "ornamentPrecompAppoggTrillSuffix",
                        "ornamentPrecompTurnTrillDAnglebert",
                        "ornamentPrecompSlideTrillDAnglebert",
                        "ornamentPrecompSlideTrillMarpurg",
                        "ornamentPrecompTurnTrillBach",
                        "ornamentPrecompSlideTrillBach",
                        "ornamentPrecompSlideTrillMuffat",
                        "ornamentPrecompSlideTrillSuffixMuffat",
                        "ornamentPrecompTrillSuffixDandrieu",
                        "ornamentPrecompPortDeVoixMordent",
                        "ornamentPrecompTrillWithMordent",
                        "ornamentPrecompCadence",
                        "ornamentPrecompCadenceWithTurn",
                        "ornamentPrecompDoubleCadenceLowerPrefix",
                        "ornamentPrecompCadenceUpperPrefix",
                        "ornamentPrecompCadenceUpperPrefixTurn",
                        "ornamentPrecompDoubleCadenceUpperPrefix",
                        "ornamentPrecompDoubleCadenceUpperPrefixTurn",
                        "ornamentPrecompMordentRelease",
                        "ornamentPrecompMordentUpperPrefix",
                        "ornamentPrecompInvertedMordentUpperPrefix",
                        "ornamentPrecompTrillLowerSuffix"
                    ],
                    "range_end": 0xE5CF,
                    "range_start": 0xE5B0
                },
                "prometheanSagittalExtensionHighPrecisionMultiShaftAccidentals": {
                    "description": "Promethean Sagittal extension (high precision) multi-shaft accidentals",
                    "glyphs": [
                        "accSagittalSharp23SDown",
                        "accSagittalFlat23SUp",
                        "accSagittalSharp49SDown",
                        "accSagittalFlat49SUp",
                        "accSagittalSharp7v19CDown",
                        "accSagittalFlat7v19CUp",
                        "accSagittalSharp19CDown",
                        "accSagittalFlat19CUp",
                        "accSagittalSharp11v49CDown",
                        "accSagittalFlat11v49CUp",
                        "accSagittalSharp143CDown",
                        "accSagittalFlat143CUp",
                        "accSagittalSharp17kDown",
                        "accSagittalFlat17kUp",
                        "accSagittalSharp19sDown",
                        "accSagittalFlat19sUp",
                        "accSagittalSharp19sUp",
                        "accSagittalFlat19sDown",
                        "accSagittalSharp17kUp",
                        "accSagittalFlat17kDown",
                        "accSagittalSharp143CUp",
                        "accSagittalFlat143CDown",
                        "accSagittalSharp11v49CUp",
                        "accSagittalFlat11v49CDown",
                        "accSagittalSharp19CUp",
                        "accSagittalFlat19CDown",
                        "accSagittalSharp7v19CUp",
                        "accSagittalFlat7v19CDown",
                        "accSagittalSharp49SUp",
                        "accSagittalFlat49SDown",
                        "accSagittalSharp23SUp",
                        "accSagittalFlat23SDown",
                        "accSagittalSharp5v13MUp",
                        "accSagittalFlat5v13MDown",
                        "accSagittalSharp11v19MUp",
                        "accSagittalFlat11v19MDown",
                        "accSagittalSharp49MUp",
                        "accSagittalFlat49MDown",
                        "accSagittalSharp5v49MUp",
                        "accSagittalFlat5v49MDown",
                        "accSagittalSharp49LUp",
                        "accSagittalFlat49LDown",
                        "accSagittalSharp11v19LUp",
                        "accSagittalFlat11v19LDown",
                        "accSagittalSharp5v13LUp",
                        "accSagittalFlat5v13LDown",
                        "accSagittalUnused3",
                        "accSagittalUnused4",
                        "accSagittalDoubleSharp23SDown",
                        "accSagittalDoubleFlat23SUp",
                        "accSagittalDoubleSharp49SDown",
                        "accSagittalDoubleFlat49SUp",
                        "accSagittalDoubleSharp7v19CDown",
                        "accSagittalDoubleFlat7v19CUp",
                        "accSagittalDoubleSharp19CDown",
                        "accSagittalDoubleFlat19CUp",
                        "accSagittalDoubleSharp11v49CDown",
                        "accSagittalDoubleFlat11v49CUp",
                        "accSagittalDoubleSharp143CDown",
                        "accSagittalDoubleFlat143CUp",
                        "accSagittalDoubleSharp17kDown",
                        "accSagittalDoubleFlat17kUp",
                        "accSagittalDoubleSharp19sDown",
                        "accSagittalDoubleFlat19sUp"
                    ],
                    "range_end": 0xE3EF,
                    "range_start": 0xE3B0
                },
                "prometheanSagittalExtensionHighPrecisionSingleShaftAccidentals": {
                    "description": "Promethean Sagittal extension (high precision) single-shaft accidentals",
                    "glyphs": [
                        "accSagittal19SchismaUp",
                        "accSagittal19SchismaDown",
                        "accSagittal17KleismaUp",
                        "accSagittal17KleismaDown",
                        "accSagittal143CommaUp",
                        "accSagittal143CommaDown",
                        "accSagittal11v49CommaUp",
                        "accSagittal11v49CommaDown",
                        "accSagittal19CommaUp",
                        "accSagittal19CommaDown",
                        "accSagittal7v19CommaUp",
                        "accSagittal7v19CommaDown",
                        "accSagittal49SmallDiesisUp",
                        "accSagittal49SmallDiesisDown",
                        "accSagittal23SmallDiesisUp",
                        "accSagittal23SmallDiesisDown",
                        "accSagittal5v13MediumDiesisUp",
                        "accSagittal5v13MediumDiesisDown",
                        "accSagittal11v19MediumDiesisUp",
                        "accSagittal11v19MediumDiesisDown",
                        "accSagittal49MediumDiesisUp",
                        "accSagittal49MediumDiesisDown",
                        "accSagittal5v49MediumDiesisUp",
                        "accSagittal5v49MediumDiesisDown",
                        "accSagittal49LargeDiesisUp",
                        "accSagittal49LargeDiesisDown",
                        "accSagittal11v19LargeDiesisUp",
                        "accSagittal11v19LargeDiesisDown",
                        "accSagittal5v13LargeDiesisUp",
                        "accSagittal5v13LargeDiesisDown"
                    ],
                    "range_end": 0xE3AF,
                    "range_start": 0xE390
                },
                "renaissanceLuteTablature": {
                    "description": "Renaissance lute tablature",
                    "glyphs": [
                        "luteStaff6Lines",
                        "luteStaff6LinesWide",
                        "luteStaff6LinesNarrow",
                        "luteBarlineStartRepeat",
                        "luteBarlineEndRepeat",
                        "luteBarlineFinal",
                        "luteDurationDoubleWhole",
                        "luteDurationWhole",
                        "luteDurationHalf",
                        "luteDurationQuarter",
                        "luteDuration8th",
                        "luteDuration16th",
                        "luteDuration32nd",
                        "luteFingeringRHThumb",
                        "luteFingeringRHFirst",
                        "luteFingeringRHSecond",
                        "luteFingeringRHThird"
                    ],
                    "range_end": 0xEBBF,
                    "range_start": 0xEBA0
                },
                "repeats": {
                    "description": "Repeats",
                    "glyphs": [
                        "repeatLeft",
                        "repeatRight",
                        "repeatRightLeft",
                        "repeatDots",
                        "repeatDot",
                        "dalSegno",
                        "daCapo",
                        "segno",
                        "coda",
                        "codaSquare",
                        "segnoSerpent1",
                        "segnoSerpent2",
                        "leftRepeatSmall",
                        "rightRepeatSmall"
                    ],
                    "range_end": 0xE04F,
                    "range_start": 0xE040
                },
                "rests": {
                    "description": "Rests",
                    "glyphs": [
                        "restMaxima",
                        "restLonga",
                        "restDoubleWhole",
                        "restWhole",
                        "restHalf",
                        "restQuarter",
                        "rest8th",
                        "rest16th",
                        "rest32nd",
                        "rest64th",
                        "rest128th",
                        "rest256th",
                        "rest512th",
                        "rest1024th",
                        "restHBar",
                        "restHBarLeft",
                        "restHBarMiddle",
                        "restHBarRight",
                        "restQuarterOld",
                        "restDoubleWholeLegerLine",
                        "restWholeLegerLine",
                        "restHalfLegerLine",
                        "restQuarterZ"
                    ],
                    "range_end": 0xE4FF,
                    "range_start": 0xE4E0
                },
                "roundAndSquareNoteheads": {
                    "description": "Round and square noteheads",
                    "glyphs": [
                        "noteheadRoundBlackLarge",
                        "noteheadRoundWhiteLarge",
                        "noteheadRoundWhiteWithDotLarge",
                        "noteheadRoundBlack",
                        "noteheadRoundWhite",
                        "noteheadRoundWhiteWithDot",
                        "noteheadRoundBlackSlashedLarge",
                        "noteheadRoundWhiteSlashedLarge",
                        "noteheadRoundBlackSlashed",
                        "noteheadRoundWhiteSlashed",
                        "noteheadSquareBlackLarge",
                        "noteheadSquareBlackWhite",
                        "noteheadRoundBlackDoubleSlashed",
                        "noteheadRoundWhiteDoubleSlashed"
                    ],
                    "range_end": 0xE11F,
                    "range_start": 0xE110
                },
                "shakersOrRattlesPictograms": {
                    "description": "Shakers or rattles pictograms",
                    "glyphs": [
                        "pictFlexatone",
                        "pictMaraca",
                        "pictMaracas",
                        "pictCabasa",
                        "pictThundersheet",
                        "pictVibraslap",
                        "pictSistrum",
                        "pictRainstick",
                        "pictChainRattle"
                    ],
                    "range_end": 0xE74F,
                    "range_start": 0xE740
                },
                "shapeNoteNoteheads": {
                    "description": "Shape note noteheads",
                    "glyphs": [
                        "noteShapeRoundWhite",
                        "noteShapeRoundBlack",
                        "noteShapeSquareWhite",
                        "noteShapeSquareBlack",
                        "noteShapeTriangleRightWhite",
                        "noteShapeTriangleRightBlack",
                        "noteShapeTriangleLeftWhite",
                        "noteShapeTriangleLeftBlack",
                        "noteShapeDiamondWhite",
                        "noteShapeDiamondBlack",
                        "noteShapeTriangleUpWhite",
                        "noteShapeTriangleUpBlack",
                        "noteShapeMoonWhite",
                        "noteShapeMoonBlack",
                        "noteShapeTriangleRoundWhite",
                        "noteShapeTriangleRoundBlack",
                        "noteShapeKeystoneWhite",
                        "noteShapeKeystoneBlack",
                        "noteShapeQuarterMoonWhite",
                        "noteShapeQuarterMoonBlack",
                        "noteShapeIsoscelesTriangleWhite",
                        "noteShapeIsoscelesTriangleBlack",
                        "noteShapeMoonLeftWhite",
                        "noteShapeMoonLeftBlack",
                        "noteShapeArrowheadLeftWhite",
                        "noteShapeArrowheadLeftBlack",
                        "noteShapeTriangleRoundLeftWhite",
                        "noteShapeTriangleRoundLeftBlack"
                    ],
                    "range_end": 0xE1CF,
                    "range_start": 0xE1B0
                },
                "shapeNoteNoteheadsSupplement": {
                    "description": "Shape note noteheads supplement",
                    "glyphs": [
                        "noteShapeRoundDoubleWhole",
                        "noteShapeSquareDoubleWhole",
                        "noteShapeTriangleRightDoubleWhole",
                        "noteShapeTriangleLeftDoubleWhole",
                        "noteShapeDiamondDoubleWhole",
                        "noteShapeTriangleUpDoubleWhole",
                        "noteShapeMoonDoubleWhole",
                        "noteShapeTriangleRoundDoubleWhole",
                        "noteShapeKeystoneDoubleWhole",
                        "noteShapeQuarterMoonDoubleWhole",
                        "noteShapeIsoscelesTriangleDoubleWhole",
                        "noteShapeMoonLeftDoubleWhole",
                        "noteShapeArrowheadLeftDoubleWhole",
                        "noteShapeTriangleRoundLeftDoubleWhole"
                    ],
                    "range_end": 0xECDF,
                    "range_start": 0xECD0
                },
                "simplifiedMusicNotation": {
                    "description": "Simplified Music Notation",
                    "glyphs": [
                        "smnSharp",
                        "smnSharpWhite",
                        "smnFlat",
                        "smnFlatWhite",
                        "smnHistorySharp",
                        "smnHistoryDoubleSharp",
                        "smnHistoryFlat",
                        "smnHistoryDoubleFlat",
                        "smnNatural",
                        "smnSharpDown",
                        "smnSharpWhiteDown"
                    ],
                    "range_end": 0xEC5F,
                    "range_start": 0xEC50
                },
                "simsAccidentals72Edo": {
                    "description": "Sims accidentals (72-EDO)",
                    "glyphs": [
                        "accidentalSims12Down",
                        "accidentalSims6Down",
                        "accidentalSims4Down",
                        "accidentalSims12Up",
                        "accidentalSims6Up",
                        "accidentalSims4Up"
                    ],
                    "range_end": 0xE2AF,
                    "range_start": 0xE2A0
                },
                "slashNoteheads": {
                    "description": "Slash noteheads",
                    "glyphs": [
                        "noteheadSlashVerticalEnds",
                        "noteheadSlashHorizontalEnds",
                        "noteheadSlashWhiteWhole",
                        "noteheadSlashWhiteHalf",
                        "noteheadSlashDiamondWhite",
                        "noteheadSlashVerticalEndsSmall",
                        "noteheadSlashX",
                        "noteheadSlashVerticalEndsMuted",
                        "noteheadSlashHorizontalEndsMuted",
                        "noteheadSlashWhiteMuted",
                        "noteheadSlashWhiteDoubleWhole"
                    ],
                    "range_end": 0xE10F,
                    "range_start": 0xE100
                },
                "spartanSagittalMultiShaftAccidentals": {
                    "description": "Spartan Sagittal multi-shaft accidentals",
                    "glyphs": [
                        "accSagittalSharp25SDown",
                        "accSagittalFlat25SUp",
                        "accSagittalSharp7CDown",
                        "accSagittalFlat7CUp",
                        "accSagittalSharp5CDown",
                        "accSagittalFlat5CUp",
                        "accSagittalSharp5v7kDown",
                        "accSagittalFlat5v7kUp",
                        "accSagittalSharp",
                        "accSagittalFlat",
                        "accSagittalUnused1",
                        "accSagittalUnused2",
                        "accSagittalSharp5v7kUp",
                        "accSagittalFlat5v7kDown",
                        "accSagittalSharp5CUp",
                        "accSagittalFlat5CDown",
                        "accSagittalSharp7CUp",
                        "accSagittalFlat7CDown",
                        "accSagittalSharp25SUp",
                        "accSagittalFlat25SDown",
                        "accSagittalSharp35MUp",
                        "accSagittalFlat35MDown",
                        "accSagittalSharp11MUp",
                        "accSagittalFlat11MDown",
                        "accSagittalSharp11LUp",
                        "accSagittalFlat11LDown",
                        "accSagittalSharp35LUp",
                        "accSagittalFlat35LDown",
                        "accSagittalDoubleSharp25SDown",
                        "accSagittalDoubleFlat25SUp",
                        "accSagittalDoubleSharp7CDown",
                        "accSagittalDoubleFlat7CUp",
                        "accSagittalDoubleSharp5CDown",
                        "accSagittalDoubleFlat5CUp",
                        "accSagittalDoubleSharp5v7kDown",
                        "accSagittalDoubleFlat5v7kUp",
                        "accSagittalDoubleSharp",
                        "accSagittalDoubleFlat"
                    ],
                    "range_end": 0xE33F,
                    "range_start": 0xE310
                },
                "spartanSagittalSingleShaftAccidentals": {
                    "description": "Spartan Sagittal single-shaft accidentals",
                    "glyphs": [
                        "accSagittal5v7KleismaUp",
                        "accSagittal5v7KleismaDown",
                        "accSagittal5CommaUp",
                        "accSagittal5CommaDown",
                        "accSagittal7CommaUp",
                        "accSagittal7CommaDown",
                        "accSagittal25SmallDiesisUp",
                        "accSagittal25SmallDiesisDown",
                        "accSagittal35MediumDiesisUp",
                        "accSagittal35MediumDiesisDown",
                        "accSagittal11MediumDiesisUp",
                        "accSagittal11MediumDiesisDown",
                        "accSagittal11LargeDiesisUp",
                        "accSagittal11LargeDiesisDown",
                        "accSagittal35LargeDiesisUp",
                        "accSagittal35LargeDiesisDown"
                    ],
                    "range_end": 0xE30F,
                    "range_start": 0xE300
                },
                "staffBracketsAndDividers": {
                    "description": "Staff brackets and dividers",
                    "glyphs": [
                        "brace",
                        "reversedBrace",
                        "bracket",
                        "bracketTop",
                        "bracketBottom",
                        "reversedBracketTop",
                        "reversedBracketBottom",
                        "systemDivider",
                        "systemDividerLong",
                        "systemDividerExtraLong",
                        "splitBarDivider",
                        "staffDivideArrowDown",
                        "staffDivideArrowUp",
                        "staffDivideArrowUpDown"
                    ],
                    "range_end": 0xE00F,
                    "range_start": 0xE000
                },
                "standardAccidentals12Edo": {
                    "description": "Standard accidentals (12-EDO)",
                    "glyphs": [
                        "accidentalFlat",
                        "accidentalNatural",
                        "accidentalSharp",
                        "accidentalDoubleSharp",
                        "accidentalDoubleFlat",
                        "accidentalTripleSharp",
                        "accidentalTripleFlat",
                        "accidentalNaturalFlat",
                        "accidentalNaturalSharp",
                        "accidentalSharpSharp",
                        "accidentalParensLeft",
                        "accidentalParensRight",
                        "accidentalBracketLeft",
                        "accidentalBracketRight"
                    ],
                    "range_end": 0xE26F,
                    "range_start": 0xE260
                },
                "staves": {
                    "description": "Staves",
                    "glyphs": [
                        "staff1Line",
                        "staff2Lines",
                        "staff3Lines",
                        "staff4Lines",
                        "staff5Lines",
                        "staff6Lines",
                        "staff1LineWide",
                        "staff2LinesWide",
                        "staff3LinesWide",
                        "staff4LinesWide",
                        "staff5LinesWide",
                        "staff6LinesWide",
                        "staff1LineNarrow",
                        "staff2LinesNarrow",
                        "staff3LinesNarrow",
                        "staff4LinesNarrow",
                        "staff5LinesNarrow",
                        "staff6LinesNarrow",
                        "legerLine",
                        "legerLineWide",
                        "legerLineNarrow"
                    ],
                    "range_end": 0xE02F,
                    "range_start": 0xE010
                },
                "steinZimmermannAccidentals24Edo": {
                    "description": "Stein-Zimmermann accidentals (24-EDO)",
                    "glyphs": [
                        "accidentalQuarterToneFlatStein",
                        "accidentalThreeQuarterTonesFlatZimmermann",
                        "accidentalQuarterToneSharpStein",
                        "accidentalThreeQuarterTonesSharpStein",
                        "accidentalNarrowReversedFlat",
                        "accidentalNarrowReversedFlatAndFlat"
                    ],
                    "range_end": 0xE28F,
                    "range_start": 0xE280
                },
                "stems": {
                    "description": "Stems",
                    "glyphs": [
                        "stem",
                        "stemSprechgesang",
                        "stemSwished",
                        "stemPendereckiTremolo",
                        "stemSulPonticello",
                        "stemBowOnBridge",
                        "stemBowOnTailpiece",
                        "stemBuzzRoll",
                        "stemDamp",
                        "stemVibratoPulse",
                        "stemMultiphonicsBlack",
                        "stemMultiphonicsWhite",
                        "stemMultiphonicsBlackWhite",
                        "stemSussurando",
                        "stemRimShot",
                        "stemHarpStringNoise"
                    ],
                    "range_end": 0xE21F,
                    "range_start": 0xE210
                },
                "stockhausenAccidentals": {
                    "description": "Stockhausen accidentals (24-EDO)",
                    "glyphs": [
                        "accidentalRaisedStockhausen",
                        "accidentalLoweredStockhausen",
                        "accidentalFlatRaisedStockhausen",
                        "accidentalFlatLoweredStockhausen",
                        "accidentalNaturalRaisedStockhausen",
                        "accidentalNaturalLoweredStockhausen",
                        "accidentalSharpRaisedStockhausen",
                        "accidentalSharpLoweredStockhausen",
                        "accidentalOneQuarterToneSharpStockhausen",
                        "accidentalOneQuarterToneFlatStockhausen",
                        "accidentalThreeQuarterTonesSharpStockhausen",
                        "accidentalFlatRepeatedSpaceStockhausen",
                        "accidentalFlatRepeatedLineStockhausen",
                        "accidentalSharpRepeatedSpaceStockhausen",
                        "accidentalSharpRepeatedLineStockhausen"
                    ],
                    "range_end": 0xED5F,
                    "range_start": 0xED50
                },
                "stringTechniques": {
                    "description": "String techniques",
                    "glyphs": [
                        "stringsDownBow",
                        "stringsDownBowTurned",
                        "stringsUpBow",
                        "stringsUpBowTurned",
                        "stringsHarmonic",
                        "stringsHalfHarmonic",
                        "stringsMuteOn",
                        "stringsMuteOff",
                        "stringsBowBehindBridge",
                        "stringsBowOnBridge",
                        "stringsBowOnTailpiece",
                        "stringsOverpressureDownBow",
                        "stringsOverpressureUpBow",
                        "stringsOverpressurePossibileDownBow",
                        "stringsOverpressurePossibileUpBow",
                        "stringsOverpressureNoDirection",
                        "stringsJeteAbove",
                        "stringsJeteBelow",
                        "stringsFouette",
                        "stringsVibratoPulse",
                        "stringsThumbPosition",
                        "stringsThumbPositionTurned",
                        "stringsChangeBowDirection",
                        "stringsBowBehindBridgeOneString",
                        "stringsBowBehindBridgeTwoStrings",
                        "stringsBowBehindBridgeThreeStrings",
                        "stringsBowBehindBridgeFourStrings"
                    ],
                    "range_end": 0xE62F,
                    "range_start": 0xE610
                },
                "timeSignatures": {
                    "description": "Time signatures",
                    "glyphs": [
                        "timeSig0",
                        "timeSig1",
                        "timeSig2",
                        "timeSig3",
                        "timeSig4",
                        "timeSig5",
                        "timeSig6",
                        "timeSig7",
                        "timeSig8",
                        "timeSig9",
                        "timeSigCommon",
                        "timeSigCutCommon",
                        "timeSigPlus",
                        "timeSigPlusSmall",
                        "timeSigFractionalSlash",
                        "timeSigEquals",
                        "timeSigMinus",
                        "timeSigMultiply",
                        "timeSigParensLeftSmall",
                        "timeSigParensRightSmall",
                        "timeSigParensLeft",
                        "timeSigParensRight",
                        "timeSigComma",
                        "timeSigFractionQuarter",
                        "timeSigFractionHalf",
                        "timeSigFractionThreeQuarters",
                        "timeSigFractionOneThird",
                        "timeSigFractionTwoThirds",
                        "timeSigX",
                        "timeSigOpenPenderecki",
                        "timeSigCombNumerator",
                        "timeSigCombDenominator"
                    ],
                    "range_end": 0xE09F,
                    "range_start": 0xE080
                },
                "timeSignaturesReversed": {
                    "description": "Reversed time signatures",
                    "glyphs": [
                        "timeSig0Reversed",
                        "timeSig1Reversed",
                        "timeSig2Reversed",
                        "timeSig3Reversed",
                        "timeSig4Reversed",
                        "timeSig5Reversed",
                        "timeSig6Reversed",
                        "timeSig7Reversed",
                        "timeSig8Reversed",
                        "timeSig9Reversed",
                        "timeSigCommonReversed",
                        "timeSigCutCommonReversed"
                    ],
                    "range_end": 0xECFF,
                    "range_start": 0xECF0
                },
                "timeSignaturesSupplement": {
                    "description": "Time signatures supplement",
                    "glyphs": [
                        "timeSigBracketLeft",
                        "timeSigBracketRight",
                        "timeSigBracketLeftSmall",
                        "timeSigBracketRightSmall",
                        "timeSigSlash",
                        "timeSigCut2",
                        "timeSigCut3"
                    ],
                    "range_end": 0xEC8F,
                    "range_start": 0xEC80
                },
                "timeSignaturesTurned": {
                    "description": "Turned time signatures",
                    "glyphs": [
                        "timeSig0Turned",
                        "timeSig1Turned",
                        "timeSig2Turned",
                        "timeSig3Turned",
                        "timeSig4Turned",
                        "timeSig5Turned",
                        "timeSig6Turned",
                        "timeSig7Turned",
                        "timeSig8Turned",
                        "timeSig9Turned",
                        "timeSigCommonTurned",
                        "timeSigCutCommonTurned"
                    ],
                    "range_end": 0xECEF,
                    "range_start": 0xECE0
                },
                "tremolos": {
                    "description": "Tremolos",
                    "glyphs": [
                        "tremolo1",
                        "tremolo2",
                        "tremolo3",
                        "tremolo4",
                        "tremolo5",
                        "tremoloFingered1",
                        "tremoloFingered2",
                        "tremoloFingered3",
                        "tremoloFingered4",
                        "tremoloFingered5",
                        "buzzRoll",
                        "pendereckiTremolo",
                        "unmeasuredTremolo",
                        "unmeasuredTremoloSimple",
                        "tremoloDivisiDots2",
                        "tremoloDivisiDots3",
                        "tremoloDivisiDots4",
                        "tremoloDivisiDots6",
                        "stockhausenTremolo"
                    ],
                    "range_end": 0xE23F,
                    "range_start": 0xE220
                },
                "trojanSagittalExtension12EdoRelativeAccidentals": {
                    "description": "Trojan Sagittal extension (12-EDO relative) accidentals",
                    "glyphs": [
                        "accSagittal23CommaUp",
                        "accSagittal23CommaDown",
                        "accSagittal5v19CommaUp",
                        "accSagittal5v19CommaDown",
                        "accSagittal5v23SmallDiesisUp",
                        "accSagittal5v23SmallDiesisDown",
                        "accSagittalSharp5v23SDown",
                        "accSagittalFlat5v23SUp",
                        "accSagittalSharp5v19CDown",
                        "accSagittalFlat5v19CUp",
                        "accSagittalSharp23CDown",
                        "accSagittalFlat23CUp",
                        "accSagittalSharp23CUp",
                        "accSagittalFlat23CDown",
                        "accSagittalSharp5v19CUp",
                        "accSagittalFlat5v19CDown",
                        "accSagittalSharp5v23SUp",
                        "accSagittalFlat5v23SDown",
                        "accSagittalDoubleSharp5v23SDown",
                        "accSagittalDoubleFlat5v23SUp",
                        "accSagittalDoubleSharp5v19CDown",
                        "accSagittalDoubleFlat5v19CUp",
                        "accSagittalDoubleSharp23CDown",
                        "accSagittalDoubleFlat23CUp"
                    ],
                    "range_end": 0xE38F,
                    "range_start": 0xE370
                },
                "tunedMalletPercussionPictograms": {
                    "description": "Tuned mallet percussion pictograms",
                    "glyphs": [
                        "pictGlsp",
                        "pictXyl",
                        "pictXylTenor",
                        "pictXylBass",
                        "pictXylTrough",
                        "pictXylTenorTrough",
                        "pictMar",
                        "pictVib",
                        "pictVibMotorOff",
                        "pictEmptyTrap",
                        "pictGlspSmithBrindle",
                        "pictXylSmithBrindle",
                        "pictMarSmithBrindle",
                        "pictVibSmithBrindle",
                        "pictCrotales",
                        "pictSteelDrums",
                        "pictCelesta",
                        "pictLithophone",
                        "pictTubaphone"
                    ],
                    "range_end": 0xE6BF,
                    "range_start": 0xE6A0
                },
                "tuplets": {
                    "description": "Tuplets",
                    "glyphs": [
                        "tuplet0",
                        "tuplet1",
                        "tuplet2",
                        "tuplet3",
                        "tuplet4",
                        "tuplet5",
                        "tuplet6",
                        "tuplet7",
                        "tuplet8",
                        "tuplet9",
                        "tupletColon"
                    ],
                    "range_end": 0xE88F,
                    "range_start": 0xE880
                },
                "turkishFolkMusicAccidentals": {
                    "description": "Turkish folk music accidentals",
                    "glyphs": [
                        "accidental1CommaSharp",
                        "accidental2CommaSharp",
                        "accidental3CommaSharp",
                        "accidental5CommaSharp",
                        "accidental1CommaFlat",
                        "accidental2CommaFlat",
                        "accidental3CommaFlat",
                        "accidental4CommaFlat"
                    ],
                    "range_end": 0xE45F,
                    "range_start": 0xE450
                },
                "vocalTechniques": {
                    "description": "Vocal techniques",
                    "glyphs": [
                        "vocalMouthClosed",
                        "vocalMouthSlightlyOpen",
                        "vocalMouthOpen",
                        "vocalMouthWideOpen",
                        "vocalMouthPursed",
                        "vocalSprechgesang",
                        "vocalsSussurando",
                        "vocalNasalVoice",
                        "vocalTongueClickStockhausen",
                        "vocalFingerClickStockhausen",
                        "vocalTongueFingerClickStockhausen"
                    ],
                    "range_end": 0xE64F,
                    "range_start": 0xE640
                },
                "whistlesAndAerophonesPictograms": {
                    "description": "Whistles and aerophones pictograms",
                    "glyphs": [
                        "pictSlideWhistle",
                        "pictBirdWhistle",
                        "pictPoliceWhistle",
                        "pictSiren",
                        "pictWindMachine",
                        "pictCarHorn",
                        "pictKlaxonHorn",
                        "pictDuckCall",
                        "pictWindWhistle",
                        "pictMegaphone",
                        "pictLotusFlute"
                    ],
                    "range_end": 0xE75F,
                    "range_start": 0xE750
                },
                "windTechniques": {
                    "description": "Wind techniques",
                    "glyphs": [
                        "doubleTongueAbove",
                        "doubleTongueBelow",
                        "tripleTongueAbove",
                        "tripleTongueBelow",
                        "windClosedHole",
                        "windThreeQuartersClosedHole",
                        "windHalfClosedHole1",
                        "windHalfClosedHole2",
                        "windHalfClosedHole3",
                        "windOpenHole",
                        "windTrillKey",
                        "windFlatEmbouchure",
                        "windSharpEmbouchure",
                        "windRelaxedEmbouchure",
                        "windLessRelaxedEmbouchure",
                        "windTightEmbouchure",
                        "windLessTightEmbouchure",
                        "windVeryTightEmbouchure",
                        "windWeakAirPressure",
                        "windStrongAirPressure",
                        "windReedPositionNormal",
                        "windReedPositionOut",
                        "windReedPositionIn",
                        "windMultiphonicsBlackStem",
                        "windMultiphonicsWhiteStem",
                        "windMultiphonicsBlackWhiteStem",
                        "windMouthpiecePop",
                        "windRimOnly"
                    ],
                    "range_end": 0xE60F,
                    "range_start": 0xE5F0
                },
                "woodenStruckOrScrapedPercussionPictograms": {
                    "description": "Wooden struck or scraped percussion pictograms",
                    "glyphs": [
                        "pictWoodBlock",
                        "pictTempleBlocks",
                        "pictClaves",
                        "pictGuiro",
                        "pictRatchet",
                        "pictFootballRatchet",
                        "pictWhip",
                        "pictBoardClapper",
                        "pictCastanets",
                        "pictCastanetsWithHandle",
                        "pictQuijada",
                        "pictBambooScraper",
                        "pictRecoReco"
                    ],
                    "range_end": 0xE6FF,
                    "range_start": 0xE6F0
                },
                "wyschnegradskyAccidentals72Edo": {
                    "description": "Wyschnegradsky accidentals (72-EDO)",
                    "glyphs": [
                        "accidentalWyschnegradsky1TwelfthsSharp",
                        "accidentalWyschnegradsky2TwelfthsSharp",
                        "accidentalWyschnegradsky3TwelfthsSharp",
                        "accidentalWyschnegradsky4TwelfthsSharp",
                        "accidentalWyschnegradsky5TwelfthsSharp",
                        "accidentalWyschnegradsky6TwelfthsSharp",
                        "accidentalWyschnegradsky7TwelfthsSharp",
                        "accidentalWyschnegradsky8TwelfthsSharp",
                        "accidentalWyschnegradsky9TwelfthsSharp",
                        "accidentalWyschnegradsky10TwelfthsSharp",
                        "accidentalWyschnegradsky11TwelfthsSharp",
                        "accidentalWyschnegradsky1TwelfthsFlat",
                        "accidentalWyschnegradsky2TwelfthsFlat",
                        "accidentalWyschnegradsky3TwelfthsFlat",
                        "accidentalWyschnegradsky4TwelfthsFlat",
                        "accidentalWyschnegradsky5TwelfthsFlat",
                        "accidentalWyschnegradsky6TwelfthsFlat",
                        "accidentalWyschnegradsky7TwelfthsFlat",
                        "accidentalWyschnegradsky8TwelfthsFlat",
                        "accidentalWyschnegradsky9TwelfthsFlat",
                        "accidentalWyschnegradsky10TwelfthsFlat",
                        "accidentalWyschnegradsky11TwelfthsFlat"
                    ],
                    "range_end": 0xE43F,
                    "range_start": 0xE420
                }
            };
        })(Metadata = Smufl.Metadata || (Smufl.Metadata = {}));
    })(Smufl = Core.Smufl || (Core.Smufl = {}));
})(Core || (Core = {}));
var Core;
(function (Core) {
    var Smufl;
    (function (Smufl) {
        var Glyphes = Core.Smufl.Metadata.Glyphes;
        var OffBarDirection = Core.MusicTheory.OffBarDirection;
        var BeatModifier = Core.MusicTheory.BeatModifier;
        var BaseNoteValue = Core.MusicTheory.BaseNoteValue;
        class Utilities {
            static fixedFromCharCode(codePt) {
                if (codePt > 0xFFFF) {
                    codePt -= 0x10000;
                    return String.fromCharCode(0xD800 + (codePt >> 10), 0xDC00 + (codePt & 0x3FF));
                }
                else {
                    return String.fromCharCode(codePt);
                }
            }
            static GetCharacter(name) {
                let codePt = typeof name === "string" ? Glyphes[name].codepoint : name;
                return Utilities.fixedFromCharCode(codePt);
            }
            static GetNumber(value, base) {
                return value.toString().split('').map((c) => Utilities.fixedFromCharCode(parseInt(c) + base)).join();
            }
            static GetTimeSignatureNumber(value) {
                return Utilities.GetNumber(value, Glyphes['timeSig0'].codepoint);
            }
            static GetTupletNumber(value) {
                return Utilities.GetNumber(value, Glyphes['tuplet0'].codepoint);
            }
            static GetNoteValue(noteValue) {
                switch (noteValue) {
                    case BaseNoteValue.Large:
                        return Utilities.GetCharacter('noteDoubleWhole'); //todo: smufl does not provide an individual large note
                    case BaseNoteValue.Long:
                        return Utilities.GetCharacter('noteDoubleWhole'); //todo: smufl does not provide an individual large note
                    case BaseNoteValue.Double:
                        return Utilities.GetCharacter('noteDoubleWhole');
                    case BaseNoteValue.Whole:
                        return Utilities.GetCharacter('noteWhole');
                    case BaseNoteValue.Half:
                        return Utilities.GetCharacter('noteHalfUp');
                    case BaseNoteValue.Quater:
                        return Utilities.GetCharacter('noteQuarterUp');
                    case BaseNoteValue.Eighth:
                        return Utilities.GetCharacter('note8thUp');
                    case BaseNoteValue.Sixteenth:
                        return Utilities.GetCharacter('note16thUp');
                    case BaseNoteValue.ThirtySecond:
                        return Utilities.GetCharacter('note32ndUp');
                    case BaseNoteValue.SixtyFourth:
                        return Utilities.GetCharacter('note64thUp');
                    case BaseNoteValue.HundredTwentyEighth:
                        return Utilities.GetCharacter('note128thUp');
                    case BaseNoteValue.TwoHundredFiftySixth:
                        return Utilities.GetCharacter('note256thUp');
                }
            }
            static GetBeatModifier(beatModifier, direction) {
                switch (beatModifier) {
                    case BeatModifier.Accent:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "articAccentAbove" : "articAccentBelow");
                    case BeatModifier.Marcato:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "articMarcatoAbove" : "articMarcatoBelow");
                    case BeatModifier.Staccato:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "articStaccatoAbove" : "articStaccatoBelow");
                    case BeatModifier.Staccatissimo:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "articStaccatissimoAbove" : "articStaccatissimoBelow");
                    case BeatModifier.Tenuto:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "articTenutoAbove" : "articTenutoBelow");
                    case BeatModifier.Fermata:
                        return Utilities.GetCharacter(direction == OffBarDirection.Top ? "fermataAbove" : "fermataBelow");
                    case BeatModifier.PickstrokeDown:
                        return Utilities.GetCharacter("stringsDownBow");
                    case BeatModifier.PickstrokeUp:
                        return Utilities.GetCharacter("stringsUpBow");
                    case BeatModifier.Trill:
                        return Utilities.GetCharacter("ornamentTrill");
                    case BeatModifier.Mordent:
                        return Utilities.GetCharacter("ornamentMordent");
                    case BeatModifier.LowerMordent:
                        return Utilities.GetCharacter("ornamentMordentInverted");
                    case BeatModifier.Turn:
                        return Utilities.GetCharacter("ornamentTurn");
                    case BeatModifier.InvertedTurn:
                        return Utilities.GetCharacter("ornamentTurnInverted");
                }
            }
            static GetRest(noteValue) {
                return Utilities.GetCharacter(Glyphes['restWhole'].codepoint - noteValue);
            }
        }
        Smufl.Utilities = Utilities;
    })(Smufl = Core.Smufl || (Core.Smufl = {}));
})(Core || (Core = {}));
// object.Assign implementation
if (typeof Object.assign != 'function') {
    (function () {
        Object.assign = function (target) {
            'use strict';
            if (target === undefined || target === null) {
                throw new TypeError('Cannot convert undefined or null to object');
            }
            var output = Object(target);
            for (var index = 1; index < arguments.length; index++) {
                var source = arguments[index];
                if (source !== undefined && source !== null) {
                    for (var nextKey in source) {
                        if (source.hasOwnProperty(nextKey)) {
                            output[nextKey] = source[nextKey];
                        }
                    }
                }
            }
            return output;
        };
    })();
}
class ResourceManager {
    static getTablatureResource(name) {
        return "resources/tablature/" + name;
    }
}
ResourceManager.referenceBarSpacing = 12;
var TR;
(function (TR) {
    var NoteRenderingFlags;
    (function (NoteRenderingFlags) {
        NoteRenderingFlags[NoteRenderingFlags["Ghost"] = 1] = "Ghost";
        NoteRenderingFlags[NoteRenderingFlags["NaturalHarmonic"] = 2] = "NaturalHarmonic";
        NoteRenderingFlags[NoteRenderingFlags["ArtificialHarmonic"] = 4] = "ArtificialHarmonic";
    })(NoteRenderingFlags = TR.NoteRenderingFlags || (TR.NoteRenderingFlags = {}));
})(TR || (TR = {}));
var TR;
(function (TR) {
    var BarLine = Core.MusicTheory.BarLine;
    var BaseNoteValue = Core.MusicTheory.BaseNoteValue;
    var OffBarDirection = Core.MusicTheory.OffBarDirection;
    var GlissDirection = Core.MusicTheory.GlissDirection;
    var NoteRenderingFlags = TR.NoteRenderingFlags;
    var Smufl = Core.Smufl.Utilities;
    class PrimitiveRenderer {
        constructor(canvas, style) {
            this.canvas = canvas;
            this.style = style;
            this.clear();
        }
        clear() {
            this.canvas.clear();
            this.canvas.backgroundColor = "white";
        }
        getScale() {
            return this.style.bar.lineHeight / ResourceManager.referenceBarSpacing;
        }
        getSmuflTextStyle(size = null) {
            return {
                fontFamily: this.style.smuflText.fontFamily,
                fontSize: size !== null ? size : this.style.smuflText.fontSize
            };
        }
        static inflateBounds(bounds, extension) {
            if (bounds === undefined)
                return extension;
            let left = Math.min(bounds.left, extension.left);
            let top = Math.min(bounds.top, extension.top);
            bounds.width = Math.max(bounds.left + bounds.width, extension.left + extension.width) - left;
            bounds.height = Math.max(bounds.top + bounds.height, extension.top + extension.height) - top;
            bounds.left = left;
            bounds.top = top;
            return bounds;
        }
        drawOrnamentText(x, y, text, style, direction) {
            let originY = direction == OffBarDirection.Top ? "bottom" : "top";
            return this.drawText(text, x, y, "center", originY, style);
        }
        drawText(text, x, y, originX, originY, options, addToCanvas = true) {
            let textElement = new fabric.Text(text, options);
            textElement.originX = originX;
            textElement.originY = originY;
            textElement.left = x;
            textElement.top = y;
            if (addToCanvas)
                this.canvas.add(textElement);
            return textElement;
        }
        drawTitle(title, x, y) {
            return this.drawText(title, x, y, "center", "top", this.style.title).getBoundingRect();
        }
        callbackWith(result) {
            __callbackObject.callback(result);
        }
        drawArtificialHarmonicText(x, y, text, direction) {
            return this.drawOrnamentText(x, y, text, this.style.ornaments.artificialHarmonicsText, direction).getBoundingRect();
        }
        drawGhostNoteParenthese(bounds) {
            let y = bounds.top + bounds.height / 2;
            let leftBounds = this.drawText("(", bounds.left - this.style.note.margin, y, "center", "center", this.style.fretNumber).getBoundingRect();
            let rightBounds = this.drawText(")", bounds.left + bounds.width + this.style.note.margin, y, "center", "center", this.style.fretNumber).getBoundingRect();
            bounds = PrimitiveRenderer.inflateBounds(bounds, leftBounds);
            bounds = PrimitiveRenderer.inflateBounds(bounds, rightBounds);
            return bounds;
        }
        drawNoteFretting(fretting, x, y, flags) {
            return __awaiter(this, void 0, void 0, function* () {
                let drawArtificialHarmonic = (flags & NoteRenderingFlags.ArtificialHarmonic) === NoteRenderingFlags.ArtificialHarmonic;
                let drawNaturalHarmonic = (flags & NoteRenderingFlags.NaturalHarmonic) === NoteRenderingFlags.NaturalHarmonic;
                let bounds;
                if (drawNaturalHarmonic)
                    bounds = PrimitiveRenderer.inflateBounds(bounds, (yield this.drawNaturalHarmonicAsync(x, y)).getBoundingRect());
                if (drawArtificialHarmonic)
                    bounds = PrimitiveRenderer.inflateBounds(bounds, (yield this.drawArtificialHarmonicAsync(x, y)).getBoundingRect());
                let drawSpecialNote = function (imageFile) {
                    return __awaiter(this, void 0, void 0, function* () {
                        let group = yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                            group.scaleY = this.getScale();
                            group.originX = "center";
                            group.originY = "center";
                        });
                        return group.getBoundingRect();
                    });
                };
                switch (fretting) {
                    case "dead":
                        bounds = PrimitiveRenderer.inflateBounds(bounds, (yield drawSpecialNote.call(this, ResourceManager.getTablatureResource("dead_note.svg"))));
                        break;
                    case "asChord":
                        bounds = PrimitiveRenderer.inflateBounds(bounds, (yield drawSpecialNote.call(this, ResourceManager.getTablatureResource("play_to_chord_mark.svg"))));
                        break;
                    default:
                        let text = this.drawText(fretting, x, y, "center", "center", this.style.fretNumber);
                        if ((drawArtificialHarmonic || drawNaturalHarmonic) && fretting.length > 1)
                            text.scale(0.8);
                        if (drawArtificialHarmonic)
                            text.setColor("#FFFFFF");
                        bounds = PrimitiveRenderer.inflateBounds(bounds, text.getBoundingRect());
                        break;
                }
                bounds = this.drawAdditionalForNote(bounds, flags);
                this.callbackWith(bounds);
            });
        }
        drawAdditionalForNote(bounds, flags) {
            if ((flags & NoteRenderingFlags.Ghost) === NoteRenderingFlags.Ghost)
                bounds = this.drawGhostNoteParenthese(bounds);
            return bounds;
        }
        drawEllipseAroundBounds(bounds) {
            var ellipse = new fabric.Ellipse({
                left: bounds.left + bounds.width / 2,
                top: bounds.top + bounds.height / 2,
                rx: bounds.width / Math.SQRT2 - this.style.note.longNoteEllipsePadding,
                ry: bounds.height / Math.SQRT2 - this.style.note.longNoteEllipsePadding * bounds.height / bounds.width,
                originX: "center",
                originY: "center",
                stroke: "black",
                fill: ""
            });
            this.canvas.add(ellipse);
            return ellipse.getBoundingRect();
        }
        drawNaturalHarmonicAsync(x, y) {
            let imageFile = ResourceManager.getTablatureResource("natural_harmonic.svg");
            return this.drawSVGFromURLAsync(imageFile, x, y, group => {
                group.originX = "center";
                group.originY = "center";
            });
        }
        drawArtificialHarmonicAsync(x, y) {
            let imageFile = ResourceManager.getTablatureResource("artificial_harmonic.svg");
            return this.drawSVGFromURLAsync(imageFile, x, y, group => {
                group.originX = "center";
                group.originY = "center";
            });
        }
        drawLyrics(lyrics, x, y) {
            return this.drawText(lyrics, x, y, "left", "top", this.style.lyrics).getBoundingRect();
        }
        measureLyrics(lyrics) {
            let textElement = new fabric.Text(lyrics, this.style.lyrics);
            this.canvas.add(textElement); // for now we'll just add and remove it
            // later we should refactor it so all elements are created at once, and re-arranged later
            let bounds = textElement.getBoundingRect();
            this.canvas.remove(textElement);
            return bounds;
        }
        drawTuplet(tuplet, x, y) {
            return this.drawText(Smufl.GetTupletNumber(tuplet), x, y, "center", "center", this.style.note.tuplet).getBoundingRect();
        }
        drawLine(x1, y1, x2, y2) {
            let line = new fabric.Line([x1, y1, x2, y2], {
                stroke: "black",
            });
            this.canvas.add(line);
            return line;
        }
        drawHorizontalBarLine(x, y, length) {
            this.drawLine(x, y, x + length, y);
        }
        drawBarLine(barLine, x, y) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile;
                switch (barLine) {
                    case BarLine.Standard:
                        imageFile = ResourceManager.getTablatureResource("barline_standard.svg");
                        break;
                    case BarLine.BeginAndEndRepeat:
                        imageFile = ResourceManager.getTablatureResource("barline_begin_and_end_repeat.svg");
                        break;
                    case BarLine.BeginRepeat:
                        imageFile = ResourceManager.getTablatureResource("barline_begin_repeat.svg");
                        break;
                    case BarLine.BeginRepeatAndEnd:
                        imageFile = ResourceManager.getTablatureResource("barline_begin_repeat_and_end.svg");
                        break;
                    case BarLine.Double:
                        imageFile = ResourceManager.getTablatureResource("barline_double.svg");
                        break;
                    case BarLine.End:
                        imageFile = ResourceManager.getTablatureResource("barline_end.svg");
                        break;
                    case BarLine.EndRepeat:
                        imageFile = ResourceManager.getTablatureResource("barline_end_repeat.svg");
                        break;
                }
                yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                    group.scaleToHeight(this.style.bar.lineHeight * 5);
                });
            });
        }
        drawStem(x, yFrom, yTo) {
            this.drawLine(x, yFrom, x, yTo);
        }
        loadSVGFromURLAsync(url) {
            return new Promise((resolve, reject) => {
                fabric.loadSVGFromURL(url, (results, options) => {
                    let group = fabric.util.groupSVGElements(results, options);
                    resolve(group);
                });
            });
        }
        drawSVGFromURLAsync(url, x, y, postProcessing) {
            return __awaiter(this, void 0, void 0, function* () {
                let group = yield this.loadSVGFromURLAsync(url);
                group.left = x;
                group.top = y;
                if (postProcessing != null)
                    postProcessing(group);
                this.canvas.add(group);
                return group;
            });
        }
        drawFlagHead(x, y, direction) {
            return __awaiter(this, void 0, void 0, function* () {
                let flagFile = ResourceManager.getTablatureResource("note_flag_head.svg");
                let group = yield this.drawSVGFromURLAsync(flagFile, x, y, group => {
                    group.originX = "left";
                    group.originY = "center";
                    group.scale(this.getScale());
                    if (direction == OffBarDirection.Bottom)
                        group.flipY = true;
                });
                return group;
            });
        }
        drawFlag(noteValue, x, y, direction) {
            return __awaiter(this, void 0, void 0, function* () {
                if (noteValue > BaseNoteValue.Eighth)
                    return;
                // draw flag bodies
                if (noteValue < BaseNoteValue.Eighth) {
                    let flagFile = ResourceManager.getTablatureResource("note_flag_body.svg");
                    let group = yield this.loadSVGFromURLAsync(flagFile);
                    group.left = x;
                    group.originX = "left";
                    group.originY = "center";
                    group.scale(this.getScale());
                    let bounds = group.getBoundingRect();
                    if (direction == OffBarDirection.Bottom)
                        group.flipY = true;
                    for (let i = noteValue; i < BaseNoteValue.Eighth; ++i) {
                        if (i === noteValue) {
                            group.top = y;
                            this.canvas.add(group);
                        }
                        else {
                            group.clone((result) => {
                                result.top = y;
                                this.canvas.add(result);
                            });
                        }
                        if (direction == OffBarDirection.Bottom)
                            y -= 6;
                        else
                            y += 6;
                    }
                }
                // draw flag head
                {
                    let flagFile = ResourceManager.getTablatureResource("note_flag_head.svg");
                    let group = yield this.drawSVGFromURLAsync(flagFile, x, y, group => {
                        group.originX = "left";
                        group.originY = "center";
                        group.scale(this.getScale());
                        if (direction == OffBarDirection.Bottom)
                            group.flipY = true;
                    });
                    this.callbackWith(group.getBoundingRect());
                }
            });
        }
        drawBeam(x1, y1, x2, y2) {
            let halfThickness = this.style.bar.beamThickness / 2;
            let points = [
                { x: x1, y: y1 - halfThickness },
                { x: x2, y: y2 - halfThickness },
                { x: x2, y: y2 + halfThickness },
                { x: x1, y: y1 + halfThickness }
            ];
            let polygon = new fabric.Polygon(points);
            polygon.fill = "black";
            polygon.stroke = "black";
            this.canvas.add(polygon);
            return polygon.getBoundingRect();
        }
        drawNoteValueAugment(augment, x, y) {
            for (let i = 0; i < augment; ++i) {
                let dot = new fabric.Circle({
                    radius: this.style.note.dot.radius,
                    left: x,
                    top: y,
                    originX: "left",
                    originY: "center",
                    stroke: "",
                    fill: "black"
                });
                this.canvas.add(dot);
                x += this.style.note.dot.radius * 2 + this.style.note.dot.spacing;
            }
        }
        measureRest(noteValue) {
            return __awaiter(this, void 0, void 0, function* () {
                let text = this.drawText(Smufl.GetRest(noteValue), 0, 0, "center", "center", this.getSmuflTextStyle());
                let bounds = text.getBoundingRect();
                this.canvas.remove(text);
                this.callbackWith(bounds);
            });
        }
        drawRest(noteValue, x, y) {
            return __awaiter(this, void 0, void 0, function* () {
                let text = this.drawText(Smufl.GetRest(noteValue), x, y, "center", "center", this.getSmuflTextStyle());
                this.callbackWith(text.getBoundingRect());
            });
        }
        drawConnectionInstruction(x, y, instruction, direction) {
            return this.drawOrnamentText(x, y, instruction, this.style.ornaments.connectionInstructionText, direction).getBoundingRect();
        }
        drawTie(x0, x1, y, direction) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile = ResourceManager.getTablatureResource("tie.svg");
                let group = yield this.drawSVGFromURLAsync(imageFile, x0, y, group => {
                    group.scaleToWidth(x1 - x0);
                    let standardScaleY = this.getScale();
                    group.scaleY = Math.max(standardScaleY / 2, Math.min(Math.sqrt(group.scaleY), standardScaleY));
                    group.originX = "left";
                    if (direction == OffBarDirection.Bottom) {
                        group.originY = "top";
                        group.flipY = true;
                    }
                    else {
                        group.originY = "bottom";
                    }
                });
                this.callbackWith(group.getBoundingRect());
            });
        }
        drawGliss(x, y, direction) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile = ResourceManager.getTablatureResource("gliss.svg");
                let group = yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                    switch (direction) {
                        case GlissDirection.FromHigher:
                            group.flipX = true;
                            group.flipY = true;
                            group.originX = "right";
                            group.originY = "bottom";
                            break;
                        case GlissDirection.FromLower:
                            group.flipX = true;
                            group.originX = "right";
                            group.originY = "top";
                            break;
                        case GlissDirection.ToHigher:
                            group.flipY = true;
                            group.originX = "left";
                            group.originY = "bottom";
                            break;
                        case GlissDirection.ToLower:
                            group.originX = "left";
                            group.originY = "top";
                            break;
                    }
                    group.scaleY = this.getScale();
                });
                this.callbackWith(group.getBoundingRect());
            });
        }
        drawRasgueadoText(x, y, direction) {
            return this.drawOrnamentText(x, y, "rasg.", this.style.ornaments.rasgueadoText, direction).getBoundingRect();
        }
        drawInlineBrushlikeTechnique(x, y, stringSpan, technique, isUp) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile = ResourceManager.getTablatureResource(`${technique}_up_inline_${stringSpan}.svg`);
                let group = yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                    group.originX = "center";
                    group.originY = "center";
                    group.scaleX = 1.2;
                    if (!isUp)
                        group.flipY = true;
                });
                this.callbackWith(group.getBoundingRect());
            });
        }
        drawInlineBrushDown(x, y, stringSpan) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.drawInlineBrushlikeTechnique(x, y, stringSpan, "brush", false);
            });
        }
        drawInlineBrushUp(x, y, stringSpan) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.drawInlineBrushlikeTechnique(x, y, stringSpan, "brush", true);
            });
        }
        drawInlineArpeggioDown(x, y, stringSpan) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.drawInlineBrushlikeTechnique(x, y, stringSpan, "arpeggio", false);
            });
        }
        drawInlineArpeggioUp(x, y, stringSpan) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.drawInlineBrushlikeTechnique(x, y, stringSpan, "arpeggio", true);
            });
        }
        drawInlineRasgueado(x, y, stringSpan) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.drawInlineBrushlikeTechnique(x, y, stringSpan, "arpeggio", false);
            });
        }
        drawOrnamentImageFromURL(urlResourceName, x, y, direction, postProcessing) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile = ResourceManager.getTablatureResource(urlResourceName);
                let group = yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                    group.originX = "center";
                    group.originY = direction == OffBarDirection.Top ? "bottom" : "top";
                    if (direction == OffBarDirection.Bottom)
                        group.flipY = true;
                    if (postProcessing != null)
                        postProcessing(group);
                });
                this.callbackWith(group.getBoundingRect());
            });
        }
        drawPickstrokeDown(x, y, direction) {
            this.drawOrnamentImageFromURL("downbow.svg", x, y, direction);
        }
        drawPickstrokeUp(x, y, direction) {
            this.drawOrnamentImageFromURL("upbow.svg", x, y, direction);
        }
        drawBeatModifier(x, y, beatModifier, direction) {
            let originY = direction == OffBarDirection.Top ? "bottom" : "top";
            let text = this.drawText(Smufl.GetBeatModifier(beatModifier, direction), x, y, "center", originY, this.getSmuflTextStyle(28));
            return TR.Utilities.getExactBoundingRect(this.canvas, text);
        }
        drawTremolo(x, y, direction) {
            this.drawOrnamentImageFromURL("tremolo.svg", x, y, direction);
        }
        drawBrushUp(x, y, direction) {
            this.drawOrnamentImageFromURL("brush_up.svg", x, y, direction);
        }
        drawBrushDown(x, y, direction) {
            this.drawOrnamentImageFromURL("brush_down.svg", x, y, direction);
        }
        drawArpeggioUp(x, y, direction) {
            this.drawOrnamentImageFromURL("arpeggio_up.svg", x, y, direction);
        }
        drawArpeggioDown(x, y, direction) {
            this.drawOrnamentImageFromURL("arpeggio_down.svg", x, y, direction);
        }
        drawTimeSignature(x, y, beats, timeValue) {
            let textValue;
            if (beats === 4 && timeValue === 4) {
                textValue = Smufl.GetCharacter("timeSigCommon"); // common time
            }
            else {
                textValue = `${Smufl.GetTimeSignatureNumber(beats)}\n${Smufl.GetTimeSignatureNumber(timeValue)}`;
            }
            let text = this.drawText(textValue, x, y + this.style.bar.timeSignatureOffset, "center", "center", this.style.bar.timeSignature);
            text.textAlign = "center";
            return text.getBoundingRect();
        }
        drawTabHeader(x, y) {
            return __awaiter(this, void 0, void 0, function* () {
                let imageFile = ResourceManager.getTablatureResource("tab_header.svg");
                let group = yield this.drawSVGFromURLAsync(imageFile, x, y, group => {
                    group.originX = "left";
                    group.originY = "center";
                });
                this.callbackWith(group.getBoundingRect());
            });
        }
        drawTranspositionText(x, y, key) {
            let textValue = `transpose to ${key}`;
            let text = this.drawText(textValue, x, y, "left", "bottom", this.style.documentState.transposition);
            return text.getBoundingRect();
        }
        drawTempoSignature(x, y, noteValue, beats) {
            let textValue = `${Smufl.GetNoteValue(noteValue)} = ${beats}`;
            let text = this.drawText(textValue, x, y, "left", "bottom", this.style.documentState.tempo);
            return text.getBoundingRect();
        }
        drawSection(x, y, section) {
            let text = this.drawText(section, x, y, "left", "bottom", this.style.documentState.section);
            let bounds = text.getBoundingRect();
            const padding = this.style.documentState.sectionTextPadding;
            let rect = new fabric.Rect({
                left: bounds.left - padding,
                top: bounds.top - padding,
                width: bounds.width + padding * 2,
                height: bounds.height + padding * 2,
                stroke: "black",
                fill: "",
                strokeWidth: 1
            });
            this.canvas.add(rect);
            return rect.getBoundingRect();
        }
        drawAlternativeEndingText(x, y, alternationText) {
            this.drawText(alternationText, x + this.style.documentState.alternativeEndingTextPadding, y, "left", "top", this.style.documentState.alternativeEndingText);
        }
        drawStartAlternation(x0, x1, y0, y1, alternationText) {
            y1 -= this.style.documentState.alternativeEndingHeight;
            this.drawAlternativeEndingText(x0 + this.style.documentState.alternativeEndingTextPadding, y1 + this.style.documentState.alternativeEndingTextPadding, alternationText);
            let polyline = new fabric.Polyline([
                { x: x0, y: y0 },
                { x: x0, y: y1 },
                { x: x1, y: y1 }
            ], {
                stroke: "black",
                fill: "",
                strokeWidth: 1
            });
            this.canvas.add(polyline);
            return polyline.getBoundingRect();
        }
        drawStartAndEndAlternation(x0, x1, y0, y1, alternationText) {
            y1 -= this.style.documentState.alternativeEndingHeight;
            x1 -= this.style.documentState.endAlternativeEndingRightMargin;
            this.drawAlternativeEndingText(x0 + this.style.documentState.alternativeEndingTextPadding, y1 + this.style.documentState.alternativeEndingTextPadding, alternationText);
            let polyline = new fabric.Polyline([
                { x: x0, y: y0 },
                { x: x0, y: y1 },
                { x: x1, y: y1 },
                { x: x1, y: y0 },
            ], {
                stroke: "black",
                fill: "",
                strokeWidth: 1
            });
            this.canvas.add(polyline);
            return polyline.getBoundingRect();
        }
        drawAlternationLine(x0, x1, y1) {
            y1 -= this.style.documentState.alternativeEndingHeight;
            let line = new fabric.Line([x0, y1, x1, y1], {
                stroke: "black",
                fill: "",
                strokeWidth: 1
            });
            this.canvas.add(line);
            return line.getBoundingRect();
        }
        drawEndAlternation(x0, x1, y0, y1) {
            y1 -= this.style.documentState.alternativeEndingHeight;
            x1 -= this.style.documentState.endAlternativeEndingRightMargin;
            let polyline = new fabric.Polyline([
                { x: x0, y: y1 },
                { x: x1, y: y1 },
                { x: x1, y: y0 }
            ], {
                stroke: "black",
                fill: "",
                strokeWidth: 1
            });
            this.canvas.add(polyline);
            return polyline.getBoundingRect();
        }
        debugDrawHeightMap(points) {
            let polyline = new fabric.Polyline(points, {
                stroke: "green",
                fill: ""
            });
            this.canvas.add(polyline);
        }
        drawChordSpecialStringTokens(x, y, fingering, bounds) {
            var SpecialStringTokens;
            (function (SpecialStringTokens) {
                SpecialStringTokens[SpecialStringTokens["None"] = 0] = "None";
                SpecialStringTokens[SpecialStringTokens["Open"] = 1] = "Open";
                SpecialStringTokens[SpecialStringTokens["Skip"] = 2] = "Skip";
            })(SpecialStringTokens || (SpecialStringTokens = {}));
            ;
            let tokens = fingering.map(f => {
                if (f.fret === -1)
                    return SpecialStringTokens.Skip;
                return f.fret === 0 ? SpecialStringTokens.Open : SpecialStringTokens.None;
            });
            if (!tokens.reduce((result, t) => (t != SpecialStringTokens.None) || result, false)) {
                return;
            }
            let cellX = x;
            let textStyle = this.getSmuflTextStyle();
            y -= this.style.chordDiagram.specialStringTokenPadding.bottom;
            tokens.forEach(t => {
                if (t != SpecialStringTokens.None) {
                    let textContent;
                    switch (t) {
                        case SpecialStringTokens.Open:
                            textContent = Smufl.GetCharacter('fretboardO');
                            break;
                        case SpecialStringTokens.Skip:
                            textContent = Smufl.GetCharacter('fretboardX');
                            break;
                    }
                    let text = this.drawText(textContent, cellX, y, "center", "bottom", textStyle);
                    PrimitiveRenderer.inflateBounds(bounds, text.getBoundingRect());
                }
                cellX += this.style.chordDiagram.cellWidth;
            });
            bounds.top -= this.style.chordDiagram.elementSpacing + this.style.chordDiagram.specialStringTokenPadding.top;
        }
        drawChordDiagramGrid(x, y, minFret, maxFret, bounds) {
            let width = this.style.chordDiagram.cellWidth * (this.style.stringCount - 1);
            let fretY = y;
            let group = new fabric.Group();
            for (let fret = maxFret + 1; fret >= minFret; --fret) {
                if (fret == 1) {
                    let rect = new fabric.Rect({
                        left: x,
                        top: fretY - this.style.chordDiagram.nutThickness + this.style.chordDiagram.gridThickness,
                        width: width,
                        height: this.style.chordDiagram.nutThickness,
                        fill: "black",
                        stroke: "black"
                    });
                    group.addWithUpdate(rect);
                }
                else {
                    let line = new fabric.Line([x, fretY, x + width, fretY], {
                        stroke: "black",
                        fill: "",
                        strokeWidth: this.style.chordDiagram.gridThickness
                    });
                    group.addWithUpdate(line);
                    if (fret > minFret)
                        fretY -= this.style.chordDiagram.cellHeight;
                }
            }
            let stringX = x;
            for (let stringIndex = 0; stringIndex < this.style.stringCount; ++stringIndex) {
                let line = new fabric.Line([stringX, y, stringX, fretY], {
                    stroke: "black",
                    fill: "",
                    strokeWidth: this.style.chordDiagram.gridThickness
                });
                group.addWithUpdate(line);
                stringX += this.style.chordDiagram.cellWidth;
            }
            this.canvas.add(group);
            PrimitiveRenderer.inflateBounds(bounds, group.getBoundingRect());
            bounds.top -= this.style.chordDiagram.elementSpacing;
        }
        drawChordSingleFingering(x, y) {
            let circle = new fabric.Circle({
                radius: this.style.chordDiagram.fingeringTokenRadius,
                left: x,
                top: y,
                originX: "center",
                originY: "center",
                fill: "black",
            });
            this.canvas.add(circle);
        }
        drawChordGetStringX(x, stringIndex) {
            return x + stringIndex * this.style.chordDiagram.cellWidth + this.style.chordDiagram.gridThickness / 2;
        }
        drawChordBarre(barredStrings, x, y) {
            let from = this.drawChordGetStringX(x, barredStrings[0]);
            let to = this.drawChordGetStringX(x, barredStrings[barredStrings.length - 1]);
            if (barredStrings.length === 1 || from === to) {
                this.drawChordSingleFingering(from, y);
                return;
            }
            this.drawChordSingleFingering(from, y);
            this.drawChordSingleFingering(to, y);
            let rect = new fabric.Rect({
                left: from,
                width: to - from,
                top: y,
                height: this.style.chordDiagram.fingeringTokenRadius * 2,
                originX: "left",
                originY: "center",
                fill: "black",
                stroke: ""
            });
            this.canvas.add(rect);
        }
        drawChordFingering(x, y, minFret, maxFret, notes, bounds) {
            let getStringX = (stringIndex) => x + stringIndex * this.style.chordDiagram.cellWidth + this.style.chordDiagram.gridThickness / 2;
            let fretY = y - this.style.chordDiagram.cellHeight / 2;
            for (let fret = maxFret; fret >= minFret; --fret) {
                let finger = null;
                let barredStrings = new Array();
                for (let stringIndex = 0; stringIndex < notes.length; ++stringIndex) {
                    let note = notes[stringIndex];
                    if (note.fret > fret)
                        continue;
                    else if (note.fret < fret) {
                        // break barre if it's blocking a lower fret note
                        if (barredStrings.length > 0) {
                            this.drawChordBarre(barredStrings, x, fretY);
                            barredStrings.length = 0;
                        }
                        continue;
                    }
                    if (note.finger === null && finger === null) {
                        this.drawChordSingleFingering(getStringX(stringIndex), fretY);
                        continue;
                    }
                    if (note.finger !== null) {
                        if (finger === null)
                            barredStrings.push(stringIndex);
                        else {
                            if (finger === note.finger)
                                barredStrings.push(stringIndex);
                            else {
                                this.drawChordBarre(barredStrings, x, fretY);
                                barredStrings.length = 0;
                                barredStrings.push(stringIndex);
                            }
                        }
                        finger = note.finger;
                    }
                    else {
                        if (finger !== null) {
                            this.drawChordBarre(barredStrings, x, fretY);
                            barredStrings.length = 0;
                            finger = null;
                        }
                        else {
                            this.drawChordSingleFingering(getStringX(stringIndex), fretY);
                        }
                    }
                }
                if (finger !== null)
                    this.drawChordBarre(barredStrings, x, fretY);
                fretY -= this.style.chordDiagram.cellHeight;
            }
        }
        drawChordFingerIndices(x, y, fingering, bounds) {
            const finger_skip = 0;
            const finger_unknown = -1;
            let fingers = fingering.map(f => {
                if (f.fret <= 0)
                    return finger_skip;
                return f.finger === null ? finger_unknown : f.finger;
            });
            if (fingers.reduce((count, f) => (f > 0) ? count + 1 : count, 0) === 0) {
                return;
            }
            let cellX = x;
            fingers.forEach(f => {
                let textContent;
                if (f == finger_skip)
                    textContent = "-";
                else if (f == finger_unknown)
                    textContent = "?";
                else
                    textContent = f.toString();
                let text = this.drawText(textContent, cellX, y, "center", "bottom", this.style.chordDiagram.fingeringText);
                PrimitiveRenderer.inflateBounds(bounds, text.getBoundingRect());
                cellX += this.style.chordDiagram.cellWidth;
            });
            bounds.top -= this.style.chordDiagram.elementSpacing;
        }
        drawChordFretOffset(x, y, fret, bounds) {
            let text = this.drawText(`${fret}fr`, x, y, "left", "center", this.style.chordDiagram.fretText);
            PrimitiveRenderer.inflateBounds(bounds, text.getBoundingRect());
        }
        static explicifyChordFingering(fingering) {
            return fingering.map(f => {
                if (f === "x")
                    return { fret: -1 };
                if (typeof f === "number")
                    return { fret: f };
                return f;
            });
        }
        drawChord(x, y, name, fingering) {
            let bounds = { left: x, top: y, width: 0, height: 0 };
            if (fingering.length > 0) {
                let explicitFingering = PrimitiveRenderer.explicifyChordFingering(fingering);
                this.drawChordFingerIndices(x, y, explicitFingering, bounds);
                let frets = explicitFingering.map(f => f.fret).filter(f => f > 0);
                if (frets.length === 0) {
                    this.drawChordDiagramGrid(bounds.left, bounds.top, 1, 3, bounds);
                    this.drawChordSpecialStringTokens(bounds.left, bounds.top, explicitFingering, bounds);
                    return bounds;
                }
                let minFret = Math.min(...frets);
                let maxFret = Math.max(...frets);
                let fretSpan = maxFret - minFret + 1;
                if (fretSpan < 3) {
                    if (maxFret < 3) {
                        maxFret = 3;
                        minFret = maxFret - 2;
                    }
                    else if (maxFret < 4)
                        minFret = 1;
                    else
                        minFret = maxFret - 2;
                }
                let diagramX = bounds.left;
                let diagramY = bounds.top;
                this.drawChordDiagramGrid(diagramX, diagramY, minFret, maxFret, bounds);
                this.drawChordFingering(diagramX, diagramY, minFret, maxFret, explicitFingering, bounds);
                if (minFret !== 1) {
                    this.drawChordFretOffset(bounds.left + bounds.width + this.style.chordDiagram.elementSpacing, bounds.top + this.style.chordDiagram.cellHeight / 2, minFret, bounds);
                }
                this.drawChordSpecialStringTokens(bounds.left, bounds.top, explicitFingering, bounds);
            }
            let text = this.drawText(name, bounds.left + this.style.chordDiagram.cellWidth * (this.style.stringCount - 1) / 2, bounds.top, "center", "bottom", this.style.chordDiagram.nameText);
            PrimitiveRenderer.inflateBounds(bounds, text.getBoundingRect());
            return bounds;
        }
    }
    TR.PrimitiveRenderer = PrimitiveRenderer;
})(TR || (TR = {}));
var TR;
(function (TR) {
    class TabRenderer {
        constructor(canvas, ITablatureStyle) {
            this.ITablatureStyle = ITablatureStyle;
            this.canvas = new fabric.StaticCanvas(canvas);
            this.canvas.setDimensions(this.ITablatureStyle.page);
        }
    }
    TR.TabRenderer = TabRenderer;
})(TR || (TR = {}));
var TR;
(function (TR) {
    class Utilities {
        static getExactBoundingRect(canvas, target) {
            let bounds = target.getBoundingRect();
            if (!canvas.contains(target))
                return bounds;
            bounds.left = Math.floor(bounds.left);
            bounds.top = Math.floor(bounds.top);
            bounds.width = Math.ceil(bounds.width);
            bounds.height = Math.ceil(bounds.height);
            // Get the pixel data from the canvas
            let data = canvas.getContext().getImageData(bounds.left, bounds.top, bounds.width, bounds.height).data;
            let first = null;
            let last = null;
            let right = null;
            let left = null;
            let bottom, top;
            // 1. get bottom
            {
                let row = bounds.height;
                while (last === null && row > 0) {
                    --row;
                    for (let column = 0; column < bounds.width; column++) {
                        if (data[row * bounds.width * 4 + column * 4 + 3]) {
                            console.log('last', row);
                            last = row + 1;
                            bottom = row + 1;
                            break;
                        }
                    }
                }
            }
            // 2. get top
            {
                let row = 0;
                var checks = [];
                while (first === null && row < last) {
                    for (let column = 0; column < bounds.width; column++) {
                        if (data[row * bounds.width * 4 + column * 4 + 3]) {
                            console.log('first', row);
                            first = row - 1;
                            top = row - 1;
                            break;
                        }
                    }
                    row++;
                }
            }
            // 3. get right
            {
                let column = bounds.width;
                while (right === null && column > 0) {
                    column--;
                    for (let row = 0; row < bounds.height; row++) {
                        if (data[row * bounds.width * 4 + column * 4 + 3]) {
                            console.log('last', row);
                            right = column + 1;
                            break;
                        }
                    }
                }
            }
            // 4. get left
            {
                let column = 0;
                while (left === null && column < right) {
                    for (let row = 0; row < bounds.height; row++) {
                        if (data[row * bounds.width * 4 + column * 4 + 3]) {
                            console.log('left', column - 1);
                            left = column;
                            break;
                        }
                    }
                    column++;
                }
            }
            bounds.left = left;
            bounds.top = top;
            bounds.width = right - left;
            bounds.height = bottom - top;
            return bounds;
        }
    }
    TR.Utilities = Utilities;
})(TR || (TR = {}));
//# sourceMappingURL=main.js.map